{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/Scenarios/GenerateExample.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Spinner from \"../Common/Spinner\";\nimport BiddingTable from \"./DealView/BiddingTable.js\";\nimport Hand from \"./DealView/Hand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateExample() {\n  _s();\n  const [dealSet, setExample] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const getVul = () => {\n    return dealSet.deals[0].vul;\n  };\n  const getDealer = () => {\n    return dealSet.deals[0].dealer;\n  };\n  const generateExample = async () => {\n    setIsLoading(true);\n    try {\n      const settings = {\n        Vul: 'Matching',\n        Dealer: 'Matching',\n        NumberOfDeals: 1,\n        Constraints: [\"final = N.spades == 0\"],\n        Percentages: [100]\n      };\n      const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(settings)\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setExample(data.dealSet);\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RightSideDealOuter\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideDealGenerateButtonContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"AnyButton GenerateDealSetButton\",\n        onClick: generateExample,\n        disabled: isLoading,\n        children: isLoading ? 'Generating...' : 'Generate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RightSideDealSetContainer\",\n      children: dealSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ProperDealSet\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellN1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellN2\",\n          children: Hand({\n            dealSet,\n            hand: 'N',\n            currentDealNo: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellN3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellEW1\",\n          children: Hand({\n            dealSet,\n            hand: 'W',\n            currentDealNo: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellEW2\",\n          children: BiddingTable({\n            currentDealNo: 1,\n            vul: getVul(),\n            dealer: getDealer(),\n            loading: isLoading\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellEW3\",\n          children: Hand({\n            dealSet,\n            hand: 'E',\n            currentDealNo: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellS1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"SaveButtonsContainer\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"DealSetEntryButtonsInnerContrainerPadding\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NavigateCellUpperRow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"NavigateCellLowerRowEntry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellS2\",\n          children: Hand({\n            dealSet,\n            hand: 'S',\n            currentDealNo: 1\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DealSetCellS3\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"NavigateCell\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"NavigateCellUpperRow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"NavigateCellLowerRow\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"GenerateMessageAndSpinner GenerateMessageAndSpinnerExample\",\n        children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 39\n        }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Generate and example!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(GenerateExample, \"anJYo7PJw8RiCePvEaa1Zx5Kj8o=\");\n_c = GenerateExample;\nexport default GenerateExample;\nvar _c;\n$RefreshReg$(_c, \"GenerateExample\");","map":{"version":3,"names":["React","useState","useEffect","Spinner","BiddingTable","Hand","jsxDEV","_jsxDEV","GenerateExample","_s","dealSet","setExample","isLoading","setIsLoading","getVul","deals","vul","getDealer","dealer","generateExample","settings","Vul","Dealer","NumberOfDeals","Constraints","Percentages","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","error","console","className","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","hand","currentDealNo","loading","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/Scenarios/GenerateExample.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Spinner from \"../Common/Spinner\";\nimport BiddingTable from \"./DealView/BiddingTable.js\";\nimport Hand from \"./DealView/Hand\";\n\nfunction GenerateExample() {\n    const [dealSet, setExample] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const getVul = () => {\n        return dealSet.deals[0].vul;\n    }\n\n    const getDealer = () => {\n        return dealSet.deals[0].dealer;\n    }\n\n    const generateExample = async () => {\n        setIsLoading(true);\n        try {\n            const settings = {\n                Vul: 'Matching',\n                Dealer: 'Matching',\n                NumberOfDeals: 1,\n                Constraints: [\"final = N.spades == 0\"],\n                Percentages: [100]\n            };\n            const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(settings)\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setExample(data.dealSet);\n        } catch (error) {\n            console.error('Failed to fetch:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className={\"RightSideDealOuter\"}>\n            <div className={\"RightSideDealGenerateButtonContainer\"}>\n                <button\n                    className={\"AnyButton GenerateDealSetButton\"}\n                    onClick={generateExample} disabled={isLoading}>\n                    {isLoading ? 'Generating...' : 'Generate'}\n                </button>\n                <div></div>\n            </div>\n            <div className={\"RightSideDealSetContainer\"}>\n                {dealSet ? (\n                    <div className={\"ProperDealSet\"}>\n                        <div className={\"DealSetCellN1\"}></div>\n                        <div className={\"DealSetCellN2\"}>\n                            {Hand({dealSet, hand: 'N', currentDealNo: 1})}\n                        </div>\n                        <div className={\"DealSetCellN3\"}></div>\n                        <div className={\"DealSetCellEW1\"}>\n                            {Hand({dealSet, hand: 'W', currentDealNo: 1})}\n                        </div>\n                        <div className={\"DealSetCellEW2\"}>\n                            {BiddingTable({currentDealNo: 1, vul: getVul(), dealer: getDealer(), loading: isLoading})}\n                        </div>\n                        <div className={\"DealSetCellEW3\"}>\n                            {Hand({dealSet, hand: 'E', currentDealNo: 1})}\n                        </div>\n                        <div className={\"DealSetCellS1\"}>\n                            <div className={\"SaveButtonsContainer\"}>\n                                <div className={\"DealSetEntryButtonsInnerContrainerPadding\"}>\n                                    <div className={\"NavigateCellUpperRow\"}></div>\n                                    <div className={\"NavigateCellLowerRowEntry\"}></div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className={\"DealSetCellS2\"}>\n                            {Hand({dealSet, hand: 'S', currentDealNo: 1})}\n                        </div>\n                        <div className={\"DealSetCellS3\"}>\n                            <div className={\"NavigateCell\"}>\n                                <div className={\"NavigateCellUpperRow\"}></div>\n                                <div className={\"NavigateCellLowerRow\"}></div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className={\"GenerateMessageAndSpinner GenerateMessageAndSpinnerExample\"}>\n                        {isLoading && <Spinner/>}\n                        {!isLoading &&\n                            <div>Generate and example!</div>\n                        }\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default GenerateExample;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}