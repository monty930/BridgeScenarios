{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/scenarios/GenerateDealSet.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useScenario } from './CompilerSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateDealSet() {\n  _s();\n  const [dealSet, setDealSet] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentDealNo, setCurrentDealNo] = useState(parseInt(sessionStorage.getItem('currentDealNo') || '0'));\n  const {\n    vul,\n    dealer,\n    numberOfDeals\n  } = useScenario();\n  useEffect(() => {\n    const checkForDealSet = () => {\n      const storedDealSet = sessionStorage.getItem('generatedDealSet');\n      if (storedDealSet) {\n        setDealSet(JSON.parse(storedDealSet));\n      }\n    };\n    checkForDealSet();\n\n    // Event listener to clear sessionStorage when the page is fully reloaded\n    const handleBeforeUnload = () => {\n      sessionStorage.removeItem('generatedDealSet');\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  useEffect(() => {\n    // Sync the currentDealNo with sessionStorage whenever it changes\n    sessionStorage.setItem('currentDealNo', currentDealNo.toString());\n  }, [currentDealNo]);\n  const generateDealSet = async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vul,\n          dealer,\n          numberOfDeals\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setDealSet(data);\n      sessionStorage.setItem('generatedDealSet', JSON.stringify(data));\n      sessionStorage.setItem('NumOfDeals', numberOfDeals.toString());\n      setCurrentDealNo(0); // Reset current deal number on new generation\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const nextDeal = () => {\n    setCurrentDealNo(prev => Math.min(prev + 1, parseInt(sessionStorage.getItem('NumOfDeals') || '0')));\n  };\n  const previousDeal = () => {\n    setCurrentDealNo(prev => Math.max(prev - 1, 0));\n  };\n  const regenerate = dealNo => async () => {\n    setIsLoading(true);\n    try {\n      const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vul,\n          dealer,\n          numberOfDeals,\n          dealNo\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      let currentDealSet = dealSet.scriptRawOutput;\n      console.log('currentDealSet:', currentDealSet);\n      replaceOneDeal(currentDealSet, data, dealNo);\n      sessionStorage.setItem('generatedDealSet', JSON.stringify(data));\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const extractDeal = (dsiString, dealNum) => {\n    console.log('here dsiString:', dsiString);\n    const deals = dsiString.split('\\n\\n');\n    return deals[dealNum].trim();\n  };\n  const renumerateDeals = dsiString => {\n    let deals = dsiString.split('[Board \\\"');\n    for (let i = 1; i < deals.length; i++) {\n      let deal = deals[i];\n      let deal_div = deal.split('\\\"');\n      deal_div[0] = i.toString();\n      deals[i] = deal_div.join('\\\"');\n    }\n    return updateVul(deals.join('[Board \\\"'));\n  };\n  const updateVul = dsiString => {\n    let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n    if (vul !== \"Matching\") {\n      return dsiString;\n    }\n    let deals = dsiString.split('[Vulnerable \\\"');\n    for (let i = 1; i < deals.length; i++) {\n      let deal = deals[i];\n      let deal_div = deal.split('\\\"');\n      let new_vul = \"None\";\n      if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 || i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n        new_vul = \"NS\";\n      }\n      if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 || i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n        if (new_vul === \"NS\") {\n          new_vul = \"All\";\n        } else {\n          new_vul = \"EW\";\n        }\n      }\n      deal_div[0] = new_vul;\n      deals[i] = deal_div.join('\\\"');\n    }\n    return deals.join('[Vulnerable \\\"');\n  };\n  const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n    let dealToReplace = extractDeal(dsiString, dealNum);\n    let deals = dsiString.split(dealToReplace);\n    let newDeal = extractDeal(newDealDsiString, 0);\n    deals.push(deals[1]);\n    deals[1] = newDeal;\n    let withReplacedDeal = deals.join('');\n    withReplacedDeal = renumerateDeals(withReplacedDeal);\n    return withReplacedDeal;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateDealSet,\n      disabled: isLoading,\n      children: isLoading ? 'Generating...' : 'Generate'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [dealSet && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDealSet(null),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"SaveDealSet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: regenerate(currentDealNo),\n          children: \"Regenerate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), currentDealNo > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previousDeal,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 47\n        }, this), currentDealNo < parseInt(sessionStorage.getItem('NumOfDeals') || '0') ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextDeal,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"AddDeal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"RemoveDeal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 25\n        }, this), \"Deal num: \", currentDealNo, /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflow: 'auto',\n            height: '400px'\n          },\n          children: dealSet.scriptRawOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this), !dealSet && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press 'Generate' to generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n}\n_s(GenerateDealSet, \"X6yNzuw60KsvixUeJN6hwcLtCbc=\", false, function () {\n  return [useScenario];\n});\n_c = GenerateDealSet;\nexport default GenerateDealSet;\nvar _c;\n$RefreshReg$(_c, \"GenerateDealSet\");","map":{"version":3,"names":["React","useEffect","useState","useScenario","jsxDEV","_jsxDEV","GenerateDealSet","_s","dealSet","setDealSet","isLoading","setIsLoading","currentDealNo","setCurrentDealNo","parseInt","sessionStorage","getItem","vul","dealer","numberOfDeals","checkForDealSet","storedDealSet","JSON","parse","handleBeforeUnload","removeItem","window","addEventListener","removeEventListener","setItem","toString","generateDealSet","response","fetch","method","headers","body","stringify","ok","Error","data","json","error","console","nextDeal","prev","Math","min","previousDeal","max","regenerate","dealNo","currentDealSet","scriptRawOutput","log","replaceOneDeal","extractDeal","dsiString","dealNum","deals","split","trim","renumerateDeals","i","length","deal","deal_div","join","updateVul","new_vul","newDealDsiString","dealToReplace","newDeal","push","withReplacedDeal","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","height","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/scenarios/GenerateDealSet.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {useScenario} from './CompilerSettings';\n\nfunction GenerateDealSet() {\n    const [dealSet, setDealSet] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const [currentDealNo, setCurrentDealNo] = useState(parseInt(sessionStorage.getItem('currentDealNo') || '0'));\n    const { vul, dealer, numberOfDeals } = useScenario();\n\n    useEffect(() => {\n        const checkForDealSet = () => {\n            const storedDealSet = sessionStorage.getItem('generatedDealSet');\n            if (storedDealSet) {\n                setDealSet(JSON.parse(storedDealSet));\n            }\n        };\n\n        checkForDealSet();\n\n        // Event listener to clear sessionStorage when the page is fully reloaded\n        const handleBeforeUnload = () => {\n            sessionStorage.removeItem('generatedDealSet');\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        };\n    }, []);\n\n    useEffect(() => {\n        // Sync the currentDealNo with sessionStorage whenever it changes\n        sessionStorage.setItem('currentDealNo', currentDealNo.toString());\n    }, [currentDealNo]);\n\n    const generateDealSet = async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ vul, dealer, numberOfDeals }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setDealSet(data);\n            sessionStorage.setItem('generatedDealSet', JSON.stringify(data));\n            sessionStorage.setItem('NumOfDeals', numberOfDeals.toString());\n            setCurrentDealNo(0); // Reset current deal number on new generation\n        } catch (error) {\n            console.error('Failed to fetch:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    const nextDeal = () => {\n        setCurrentDealNo((prev) => Math.min(prev + 1, parseInt(sessionStorage.getItem('NumOfDeals') || '0')));\n    };\n\n    const previousDeal = () => {\n        setCurrentDealNo((prev) => Math.max(prev - 1, 0));\n    };\n    \n    const regenerate = (dealNo) => async () => {\n        setIsLoading(true);\n        try {\n            const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ vul, dealer, numberOfDeals, dealNo }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            let currentDealSet = dealSet.scriptRawOutput;\n            console.log('currentDealSet:', currentDealSet);\n            replaceOneDeal(currentDealSet, data, dealNo);\n            sessionStorage.setItem('generatedDealSet', JSON.stringify(data));\n        } catch (error) {\n            console.error('Failed to fetch:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    const extractDeal = (dsiString, dealNum) => {\n        console.log('here dsiString:', dsiString);\n        const deals = dsiString.split('\\n\\n');\n        return deals[dealNum].trim();\n    }\n\n    const renumerateDeals = (dsiString) => {\n        let deals = dsiString.split('[Board \\\"');\n        for (let i = 1; i < deals.length; i++) {\n            let deal = deals[i];\n            let deal_div = deal.split('\\\"');\n            deal_div[0] = i.toString();\n            deals[i] = deal_div.join('\\\"');\n        }\n        return updateVul(deals.join('[Board \\\"'));\n    }\n    \n    const updateVul = (dsiString) => {\n        let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n        if (vul !== \"Matching\") {\n            return dsiString;\n        }\n        let deals = dsiString.split('[Vulnerable \\\"');\n        for (let i = 1; i < deals.length; i++) {\n            let deal = deals[i];\n            let deal_div = deal.split('\\\"');\n            let new_vul = \"None\";\n            if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 ||\n                i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n                new_vul = \"NS\";\n            }\n            if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 ||\n                i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n                if (new_vul === \"NS\") {\n                    new_vul = \"All\";\n                } else {\n                    new_vul = \"EW\";\n                }\n            }\n            deal_div[0] = new_vul;\n            deals[i] = deal_div.join('\\\"');\n        }\n        return deals.join('[Vulnerable \\\"');\n    }\n    \n    const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n        let dealToReplace = extractDeal(dsiString, dealNum);\n        let deals = dsiString.split(dealToReplace);\n        let newDeal = extractDeal(newDealDsiString, 0);\n        deals.push(deals[1]);\n        deals[1] = newDeal;\n        let withReplacedDeal = deals.join('');\n        withReplacedDeal = renumerateDeals(withReplacedDeal);\n        return withReplacedDeal;\n    }\n\n    return (\n        <div>\n            <button onClick={generateDealSet} disabled={isLoading}>\n                {isLoading ? 'Generating...' : 'Generate'}\n            </button>\n            <div>\n                {dealSet && (\n                    <div>\n                        <button onClick={() => setDealSet(null)}>Clear</button>\n                        <button>SaveDealSet</button>\n                        <button onClick={regenerate(currentDealNo)}>Regenerate</button>\n                        {currentDealNo > 1 && <button onClick={previousDeal}>Previous</button>}\n                        {currentDealNo < parseInt(sessionStorage.getItem('NumOfDeals') || '0')\n                            ? <button onClick={nextDeal}>Next</button>\n                            : <button>AddDeal</button>}\n                        <button>RemoveDeal</button>\n                        Deal num: {currentDealNo}\n                        <pre style={{ overflow: 'auto', height: '400px' }}>{dealSet.scriptRawOutput}</pre>\n                    </div>\n                )}\n                {!dealSet && <p>Press 'Generate' to generate</p>}\n            </div>\n        </div>\n    );\n}\n\nexport default GenerateDealSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}