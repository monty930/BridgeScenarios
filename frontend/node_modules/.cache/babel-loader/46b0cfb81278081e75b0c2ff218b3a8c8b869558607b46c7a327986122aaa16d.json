{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/scenarios/GenerateDealSet.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useScenario } from './CompilerSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GenerateDealSet() {\n  _s();\n  const [dealSet, setDealSet] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    vul,\n    dealer,\n    numberOfDeals\n  } = useScenario();\n  useEffect(() => {\n    const checkForDealSet = () => {\n      const storedDealSet = sessionStorage.getItem('generatedDealSet');\n      if (storedDealSet) {\n        setDealSet(JSON.parse(storedDealSet));\n      }\n    };\n    checkForDealSet();\n\n    // Event listener to clear sessionStorage when the page is fully reloaded\n    const handleBeforeUnload = e => {\n      sessionStorage.removeItem('generatedDealSet'); // Data is cleared on full page reload\n    };\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    return () => {\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n    };\n  }, []);\n  const generateDealSet = async () => {\n    setIsLoading(true);\n    console.log('Generating deal set...' + vul + '...');\n    try {\n      const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          vul: vul,\n          dealer: dealer,\n          numberOfDeals: numberOfDeals\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      setDealSet(data);\n      sessionStorage.setItem('generatedDealSet', JSON.stringify(data)); // Temporarily store the dealSet\n      sessionStorage.setItem('currentDealNo', '0');\n      sessionStorage.setItem('NumOfDeals', numberOfDeals);\n    } catch (error) {\n      console.error('Failed to fetch:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const nextDeal = () => {\n    let currentDealNo = sessionStorage.getItem('currentDealNo');\n    currentDealNo++;\n    sessionStorage.setItem('currentDealNo', currentDealNo);\n  };\n  const previousDeal = () => {\n    let currentDealNo = sessionStorage.getItem('currentDealNo');\n    currentDealNo--;\n    sessionStorage.setItem('currentDealNo', currentDealNo);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateDealSet,\n      disabled: isLoading,\n      children: isLoading ? 'Generating...' : 'Generate'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: dealSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDealSet(null),\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"SaveDealSet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Regenerate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), sessionStorage.getItem('currentDealNo') > 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: previousDeal,\n          children: \"Previous\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 31\n        }, this) : null, sessionStorage.getItem('currentDealNo') < sessionStorage.getItem('NumOfDeals') ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextDeal,\n          children: \"Next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 31\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"AddDeal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 31\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"RemoveDeal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), \"Deal num: \", sessionStorage.getItem('currentDealNo'), /*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            overflow: 'auto',\n            height: '400px'\n          },\n          children: dealSet.scriptRawOutput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Press 'Generate' to generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(GenerateDealSet, \"x4NpSgP4JK4SYM437gmdlBZ1JtI=\", false, function () {\n  return [useScenario];\n});\n_c = GenerateDealSet;\nexport default GenerateDealSet;\nvar _c;\n$RefreshReg$(_c, \"GenerateDealSet\");","map":{"version":3,"names":["React","useState","useEffect","useScenario","jsxDEV","_jsxDEV","GenerateDealSet","_s","dealSet","setDealSet","isLoading","setIsLoading","vul","dealer","numberOfDeals","checkForDealSet","storedDealSet","sessionStorage","getItem","JSON","parse","handleBeforeUnload","e","removeItem","window","addEventListener","removeEventListener","generateDealSet","console","log","response","fetch","method","headers","body","stringify","ok","Error","data","json","setItem","error","nextDeal","currentDealNo","previousDeal","children","onClick","disabled","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","height","scriptRawOutput","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/scenarios/GenerateDealSet.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useScenario } from './CompilerSettings';\n\nfunction GenerateDealSet() {\n    const [dealSet, setDealSet] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n    const { vul, dealer, numberOfDeals } = useScenario();\n\n    useEffect(() => {\n        const checkForDealSet = () => {\n            const storedDealSet = sessionStorage.getItem('generatedDealSet');\n            if (storedDealSet) {\n                setDealSet(JSON.parse(storedDealSet));\n            }\n        };\n\n        checkForDealSet();\n\n        // Event listener to clear sessionStorage when the page is fully reloaded\n        const handleBeforeUnload = (e) => {\n            sessionStorage.removeItem('generatedDealSet'); // Data is cleared on full page reload\n        };\n\n        window.addEventListener('beforeunload', handleBeforeUnload);\n\n        return () => {\n            window.removeEventListener('beforeunload', handleBeforeUnload);\n        };\n    }, []);\n\n    const generateDealSet = async () => {\n        setIsLoading(true);\n        console.log('Generating deal set...' + vul + '...');\n        try {\n            const response = await fetch('http://localhost:5015/Scenarios/GenerateDeals', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    vul: vul,\n                    dealer: dealer,\n                    numberOfDeals: numberOfDeals,\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            setDealSet(data);\n            sessionStorage.setItem('generatedDealSet', JSON.stringify(data)); // Temporarily store the dealSet\n            sessionStorage.setItem('currentDealNo', '0');\n            sessionStorage.setItem('NumOfDeals', numberOfDeals);\n        } catch (error) {\n            console.error('Failed to fetch:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n    \n    const nextDeal = () => {\n        let currentDealNo = sessionStorage.getItem('currentDealNo');\n        currentDealNo++;\n        sessionStorage.setItem('currentDealNo', currentDealNo);\n    }\n    \n    const previousDeal = () => {\n        let currentDealNo = sessionStorage.getItem('currentDealNo');\n        currentDealNo--;\n        sessionStorage.setItem('currentDealNo', currentDealNo);\n    }\n\n    return (\n        <div>\n            <button onClick={generateDealSet} disabled={isLoading}>\n                {isLoading ? 'Generating...' : 'Generate'}\n            </button>\n            <div>\n                {dealSet ? (\n                    <div>\n                        <button onClick={() => setDealSet(null)}>Clear</button>\n                        <button>SaveDealSet</button>\n                        <button>Regenerate</button>\n                        {sessionStorage.getItem('currentDealNo') > 1 \n                            ? <button onClick={previousDeal}>Previous</button> \n                            : null}\n                        {sessionStorage.getItem('currentDealNo') < sessionStorage.getItem('NumOfDeals')\n                            ? <button onClick={nextDeal}>Next</button> \n                            : <button>AddDeal</button>}\n                        <button>RemoveDeal</button>\n                        Deal num: {sessionStorage.getItem('currentDealNo')}\n                        <pre style={{ overflow: 'auto', height: '400px' }}>{dealSet.scriptRawOutput}</pre>\n                    </div>\n                ) : (\n                    <p>Press 'Generate' to generate</p>\n                )}\n            </div>\n        </div>\n    );\n}\n\nexport default GenerateDealSet;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}