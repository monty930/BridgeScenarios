{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js\",\n  _s = $RefreshSig$();\nimport { BrowserRouter as Router, Routes, Route, Link, Navigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scenarios() {\n  _s();\n  const location = useLocation();\n  const [leftWidth, setLeftWidth] = useState(window.innerWidth / 2);\n  const dividerRef = useRef(null);\n  const startResizing = e => {\n    e.preventDefault();\n    document.addEventListener('mousemove', resize);\n    document.addEventListener('mouseup', stopResizing);\n  };\n  const resize = e => {\n    const newLeftWidth = e.clientX;\n    setLeftWidth(newLeftWidth);\n  };\n  const stopResizing = () => {\n    document.removeEventListener('mousemove', resize);\n    document.removeEventListener('mouseup', stopResizing);\n  };\n  let content;\n  if (location.pathname === \"/scenarios/make\") {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/scenarios/use\",\n        className: \"LinkNoDecor\",\n        children: \"Use\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  } else if (location.pathname === \"/scenarios/use\") {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/scenarios/make\",\n        className: \"LinkNoDecor\",\n        children: \"Make\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  } else {\n    content = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"ERROR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this);\n  }\n  useEffect(() => {\n    const handleResize = () => {\n      // Implement logic to adjust the split view based on the window size\n      // For simplicity, you can reset to 50-50 split if window.innerWidth < 800\n      if (window.innerWidth < 800) {\n        setLeftWidth(window.innerWidth / 2);\n      }\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"split-container\",\n    style: {\n      display: 'flex',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      style: {\n        width: `${leftWidth}px`,\n        minWidth: '400px'\n      },\n      children: \"Left Panel Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: dividerRef,\n      onMouseDown: startResizing,\n      className: \"divider\",\n      style: {\n        cursor: 'col-resize',\n        width: '5px',\n        backgroundColor: '#000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      style: {\n        flex: 1,\n        minWidth: '400px'\n      },\n      children: \"Right Panel Content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n_s(Scenarios, \"nIKeySrxlt14oTR029kvAKO+Ups=\", false, function () {\n  return [useLocation];\n});\n_c = Scenarios;\nexport default Scenarios;\nvar _c;\n$RefreshReg$(_c, \"Scenarios\");","map":{"version":3,"names":["BrowserRouter","Router","Routes","Route","Link","Navigate","useLocation","useState","useRef","useEffect","jsxDEV","_jsxDEV","Scenarios","_s","location","leftWidth","setLeftWidth","window","innerWidth","dividerRef","startResizing","e","preventDefault","document","addEventListener","resize","stopResizing","newLeftWidth","clientX","removeEventListener","content","pathname","children","to","className","fileName","_jsxFileName","lineNumber","columnNumber","handleResize","style","display","height","width","minWidth","ref","onMouseDown","cursor","backgroundColor","flex","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js"],"sourcesContent":["import { BrowserRouter as Router, Routes, Route, Link, Navigate } from \"react-router-dom\";\nimport { useLocation } from 'react-router-dom';\nimport { useState, useRef, useEffect } from 'react';\n\nfunction Scenarios() {\n    const location = useLocation();\n\n    const [leftWidth, setLeftWidth] = useState(window.innerWidth / 2);\n    const dividerRef = useRef(null);\n\n    const startResizing = (e) => {\n        e.preventDefault();\n        document.addEventListener('mousemove', resize);\n        document.addEventListener('mouseup', stopResizing);\n    };\n\n    const resize = (e) => {\n        const newLeftWidth = e.clientX;\n        setLeftWidth(newLeftWidth);\n    };\n\n    const stopResizing = () => {\n        document.removeEventListener('mousemove', resize);\n        document.removeEventListener('mouseup', stopResizing);\n    };\n\n    let content;\n    if (location.pathname === \"/scenarios/make\") {\n        content =\n            <div>\n                <Link to=\"/scenarios/use\" className=\"LinkNoDecor\">Use</Link>\n            </div>;\n    } else if (location.pathname === \"/scenarios/use\") {\n        content =\n            <div>\n                <Link to=\"/scenarios/make\" className=\"LinkNoDecor\">Make</Link>\n            </div>;\n    } else {\n        content = <div>ERROR</div>;\n    }\n\n    useEffect(() => {\n        const handleResize = () => {\n            // Implement logic to adjust the split view based on the window size\n            // For simplicity, you can reset to 50-50 split if window.innerWidth < 800\n            if (window.innerWidth < 800) {\n                setLeftWidth(window.innerWidth / 2);\n            }\n        };\n    \n        window.addEventListener('resize', handleResize);\n    \n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n    \n\n    return (\n        <div className=\"split-container\" style={{ display: 'flex', height: '100%' }}>\n            <div className=\"left-panel\" style={{ width: `${leftWidth}px`, minWidth: '400px' }}>Left Panel Content</div>\n            <div ref={dividerRef} onMouseDown={startResizing} className=\"divider\" style={{ cursor: 'col-resize', width: '5px', backgroundColor: '#000' }}></div>\n            <div className=\"right-panel\" style={{ flex: 1, minWidth: '400px' }}>Right Panel Content</div>\n        </div>\n    );\n}\n\nexport default Scenarios;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}