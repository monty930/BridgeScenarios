{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/MakeScenarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MakeScenarios() {\n  _s();\n  const [activeTab, setActiveTab] = useState('textarea');\n  const [textareaContent, setTextareaContent] = useState('');\n\n  // Handler for changing tabs\n  const handleTabChange = tab => {\n    setActiveTab(tab);\n  };\n\n  // Handler for saving content\n  const handleSave = async () => {\n    try {\n      const response = await fetch('YourBackendEndpoint/Scenarios/AddItem', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          content: textareaContent\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const data = await response.json();\n      console.log('Save successful', data);\n      // Optionally, clear textarea or display a success message\n    } catch (error) {\n      console.error('Error saving data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"MAKE SCENARIOS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [activeTab === 'textarea' && /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: textareaContent,\n        onChange: e => setTextareaContent(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), activeTab === 'settings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Settings view (to be implemented)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 46\n      }, this), activeTab === 'readme' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Readme or helpful information here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 44\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange('textarea'),\n        children: \"Input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange('settings'),\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleTabChange('readme'),\n        children: \"Readme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(MakeScenarios, \"+IA9r4ayt/Me6nDlP+RzqXxGVug=\");\n_c = MakeScenarios;\nexport default MakeScenarios;\nvar _c;\n$RefreshReg$(_c, \"MakeScenarios\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MakeScenarios","_s","activeTab","setActiveTab","textareaContent","setTextareaContent","handleTabChange","tab","handleSave","response","fetch","method","headers","body","JSON","stringify","content","ok","Error","data","json","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/MakeScenarios.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction MakeScenarios() {\n    const [activeTab, setActiveTab] = useState('textarea');\n    const [textareaContent, setTextareaContent] = useState('');\n\n    // Handler for changing tabs\n    const handleTabChange = (tab) => {\n        setActiveTab(tab);\n    };\n\n    // Handler for saving content\n    const handleSave = async () => {\n        try {\n            const response = await fetch('YourBackendEndpoint/Scenarios/AddItem', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ content: textareaContent }),\n            });\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n            const data = await response.json();\n            console.log('Save successful', data);\n            // Optionally, clear textarea or display a success message\n        } catch (error) {\n            console.error('Error saving data:', error);\n        }\n    };\n\n    return (\n        <div>\n            <div>MAKE SCENARIOS</div>\n            <div>\n                {/* Conditional rendering based on activeTab */}\n                {activeTab === 'textarea' && (\n                    <textarea value={textareaContent} onChange={(e) => setTextareaContent(e.target.value)} />\n                )}\n                {activeTab === 'settings' && <div>Settings view (to be implemented)</div>}\n                {activeTab === 'readme' && <div>Readme or helpful information here</div>}\n            </div>\n            <div>\n                <button onClick={() => handleTabChange('textarea')}>Input</button>\n                <button onClick={() => handleTabChange('settings')}>Settings</button>\n                <button onClick={() => handleTabChange('readme')}>Readme</button>\n                <button onClick={handleSave}>Save</button>\n            </div>\n            <div>{/* Reserved for eventual log messages */}</div>\n        </div>\n    );\n}\n\nexport default MakeScenarios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}