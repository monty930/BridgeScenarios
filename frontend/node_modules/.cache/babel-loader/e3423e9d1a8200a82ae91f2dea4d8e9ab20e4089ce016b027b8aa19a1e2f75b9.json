{"ast":null,"code":"export const updateVul = dsiString => {\n  let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n  if (vul !== \"Matching\") {\n    return dsiString;\n  }\n  let deals = dsiString.split('[Vulnerable \\\"');\n  for (let i = 1; i < deals.length; i++) {\n    let deal = deals[i];\n    let deal_div = deal.split('\\\"');\n    let new_vul = \"None\";\n    if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 || i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n      new_vul = \"NS\";\n    }\n    if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 || i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n      if (new_vul === \"NS\") {\n        new_vul = \"All\";\n      } else {\n        new_vul = \"EW\";\n      }\n    }\n    deal_div[0] = new_vul;\n    deals[i] = deal_div.join('\\\"');\n  }\n  return deals.join('[Vulnerable \\\"');\n};\nexport const extractDeal = (dsiString, dealNum) => {\n  const deals = dsiString.split('\\n\\n');\n  return deals[dealNum].trim();\n};\nconst extractSuit = (deal, handType, suitType) => {\n  deal = deal.split(\"[Deal \\\"N:\")[1].split(\"\\\"]\")[0];\n  const hands = deal.split(\" \");\n  const handIndex = {\n    \"hand-north\": 0,\n    \"hand-east\": 1,\n    \"hand-south\": 2,\n    \"hand-west\": 3\n  };\n  const suitIndex = {\n    \"suit-spades\": 0,\n    \"suit-hearts\": 1,\n    \"suit-diamonds\": 2,\n    \"suit-clubs\": 3\n  };\n  const hand = hands[handIndex[handType]];\n  const suits = hand.split(\".\");\n  return suits[suitIndex[suitType]];\n};\nexport const renumerateDeals = dsiString => {\n  let deals = dsiString.split('[Board \\\"');\n  for (let i = 1; i < deals.length; i++) {\n    let deal = deals[i];\n    let deal_div = deal.split('\\\"');\n    deal_div[0] = i.toString();\n    deals[i] = deal_div.join('\\\"');\n  }\n  return updateVul(deals.join('[Board \\\"'));\n};\nexport const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n  let dealToReplace = extractDeal(dsiString, dealNum);\n  let deals = dsiString.split(dealToReplace);\n  let newDeal = extractDeal(newDealDsiString, 1);\n  deals.push(deals[1]);\n  deals[1] = newDeal;\n  let withReplacedDeal = deals.join('');\n  withReplacedDeal = renumerateDeals(withReplacedDeal);\n  return withReplacedDeal;\n};\nexport const addDealToDsi = (dsiString, newDealDsiString) => {\n  let deals = dsiString.split('\\n\\n');\n  let numOfTries = \"\\n\" + deals[deals.length - 1];\n  deals.pop();\n  let newDeal = newDealDsiString.split('\\n\\n')[1];\n  deals.push(newDeal);\n  deals.push(numOfTries);\n  let withNewDeal = deals.join('\\n\\n');\n  let numOfDeals = getNumOfDeals(withNewDeal) + 1;\n  withNewDeal = withNewDeal.split('Number of deals: ');\n  let withNewDealBefore = withNewDeal[0];\n  withNewDealBefore = withNewDealBefore.slice(0, -1);\n  let withNewDealAfter = withNewDeal[1].split('\\n');\n  withNewDealAfter.shift();\n  withNewDealAfter = withNewDealAfter.join('\\n');\n  withNewDeal = withNewDealBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + withNewDealAfter;\n  withNewDeal = renumerateDeals(withNewDeal);\n  console.log('here', withNewDeal);\n  return withNewDeal;\n};\nexport const removeDealFromDsi = (dsiString, dealNum) => {\n  let dealToRemove = extractDeal(dsiString, dealNum);\n  let deals = dsiString.split(dealToRemove);\n  deals[0] = deals[0].slice(0, -2);\n  let dealsWithRemoved = deals.join('');\n  let numOfDeals = getNumOfDeals(dealsWithRemoved) - 1;\n  dealsWithRemoved = dealsWithRemoved.split('Number of deals: ');\n  let dealsWithRemovedBefore = dealsWithRemoved[0];\n  let dealsWithRemovedAfter = dealsWithRemoved[1].split('\\n');\n  dealsWithRemovedAfter.shift();\n  dealsWithRemovedAfter = dealsWithRemovedAfter.join('\\n');\n  dealsWithRemoved = dealsWithRemovedBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + dealsWithRemovedAfter;\n  dealsWithRemoved = renumerateDeals(dealsWithRemoved);\n  return dealsWithRemoved;\n};\nexport const getNumOfDeals = dsiString => {\n  const lines = dsiString.split('\\n');\n  const numOfDealsLine = lines.find(line => line.includes('Number of deals:'));\n  return parseInt(numOfDealsLine.split(':')[1].trim());\n};\nexport const getPbnFromDsi = dsiString => {\n  let scoring = dsiString.split('Scoring: ')[1].split('\\n')[0];\n  let deals = dsiString.split('\\n\\n');\n  let dataInfo = deals[0];\n  deals.shift(); // removing data info\n  deals.pop(); // removing final info lines (Tries, etc.)\n  deals = dataInfo + \"\\n\\n\" + deals.join('\\n[Scoring \\\"' + scoring + '\\\"]\\n\\n') + '\\n[Scoring \\\"' + scoring + '\\\"]\\n';\n  return deals;\n};\nexport const getLinFromDsi = dsiString => {\n  let current_time = new Date().toISOString().slice(0, 10);\n  let current_hour = new Date().getHours();\n  let current_minute = new Date().getMinutes();\n  let current_second = new Date().getSeconds();\n  let output = \"% lin file created at \" + current_time + \" \" + current_hour + \":\" + current_minute + \":\" + current_second + \"\\n%\\n\";\n  let deals = dsiString.split('\\n\\n');\n  let dataInfo = deals[0];\n  deals.shift(); // removing data info\n  deals.pop(); // removing final info lines (Tries, etc.)\n  for (let i = 0; i < deals.length; i++) {\n    let deal = deals[i];\n    let dealer = linDealer(extractDealer(deal));\n    let vul = linVul(extractVul(deal));\n    let boardNum = i + 1;\n    let boardName = 'Board ' + boardNum;\n    let linHandSouth = \"S\" + extractSuit(deal, 'hand-south', 'suit-spades') + \"H\" + extractSuit(deal, 'hand-south', 'suit-hearts') + \"D\" + extractSuit(deal, 'hand-south', 'suit-diamonds') + \"C\" + extractSuit(deal, 'hand-south', 'suit-clubs');\n    let linHandWest = \"S\" + extractSuit(deal, 'hand-west', 'suit-spades') + \"H\" + extractSuit(deal, 'hand-west', 'suit-hearts') + \"D\" + extractSuit(deal, 'hand-west', 'suit-diamonds') + \"C\" + extractSuit(deal, 'hand-west', 'suit-clubs');\n    let linHandNorth = \"S\" + extractSuit(deal, 'hand-north', 'suit-spades') + \"H\" + extractSuit(deal, 'hand-north', 'suit-hearts') + \"D\" + extractSuit(deal, 'hand-north', 'suit-diamonds') + \"C\" + extractSuit(deal, 'hand-north', 'suit-clubs');\n    let lin = \"qx|o\" + boardNum + \"|md|\" + dealer + linHandSouth + \",\" + linHandWest + \",\" + linHandNorth + \",\" + \"|rh||ah|\" + boardName + \"|sv|\" + vul + \"|pg||\\n\";\n    output += lin;\n  }\n  return output;\n};\nexport const getLinFromJson = jsonDealSetString => {\n  let dsiString = getDsiFromJson(jsonDealSetString);\n  return getLinFromDsi(dsiString);\n};\nexport const getPbnFromJson = jsonDealSetString => {\n  let dsiString = getDsiFromJson(jsonDealSetString);\n  return getPbnFromDsi(dsiString);\n};\nexport const getDsiFromJson = jsonDealSetString => {\n  const json = JSON.parse(jsonDealSetString);\n  let dsiString = `[Date \"${new Date().toISOString().slice(0, 10).replace(/-/g, '.')}\"]\\n`;\n  json.deals.forEach((deal, index) => {\n    // Board and Dealer Information\n    dsiString += `\\n[Board \"${index + 1}\"]\\n`;\n    dsiString += `[Dealer \"${deal.dealer[0].toUpperCase()}\"]\\n`;\n    dsiString += `[Vulnerable \"${deal.vul}\"]\\n`;\n\n    // Creating the deal string\n    const dealOrder = ['North', 'East', 'South', 'West'];\n    const dealHands = dealOrder.map(pos => deal[pos.toLowerCase()]).join(\" \");\n    dsiString += `[Deal \"N:${dealHands}\"]\\n`;\n  });\n\n  // TODO (we do not store this info for now)\n  dsiString += `\\nNumber of deals: ${json.deals.length}\\n`;\n  dsiString += \"Compiler: Chai\\n\";\n  dsiString += \"Vulnerability: Random\\n\";\n  dsiString += \"Dealer: South\\n\";\n  dsiString += \"Flip: NoFlip\\n\";\n  dsiString += \"Scoring: IMP\\n\";\n  dsiString += \"Tries: 12\\n\";\n  dsiString += \"No constraints applied.\\n\";\n  return dsiString;\n};\nconst extractDealer = deal => {\n  return deal.split('Dealer \\\"')[1].split('\\\"')[0];\n};\nconst extractVul = deal => {\n  let vul = deal.split('Vulnerable \\\"')[1].split('\\\"')[0];\n  let north_south = vul === 'NS' || vul === 'All';\n  let east_west = vul === 'EW' || vul === 'All';\n  return [north_south, east_west];\n};\nconst linVul = vul => {\n  let lin_vul = '';\n  if (vul[0] && vul[1]) {\n    lin_vul = 'b';\n  } else if (vul[0]) {\n    lin_vul = 'n';\n  } else if (vul[1]) {\n    lin_vul = 'e';\n  } else {\n    lin_vul = 'o';\n  }\n  return lin_vul;\n};\nconst linDealer = dealer => {\n  let lin_dealer = '';\n  if (dealer === 'N') {\n    lin_dealer = '3';\n  } else if (dealer === 'E') {\n    lin_dealer = '4';\n  } else if (dealer === 'S') {\n    lin_dealer = '1';\n  } else {\n    lin_dealer = '2';\n  }\n  return lin_dealer;\n};","map":{"version":3,"names":["updateVul","dsiString","vul","split","deals","i","length","deal","deal_div","new_vul","join","extractDeal","dealNum","trim","extractSuit","handType","suitType","hands","handIndex","suitIndex","hand","suits","renumerateDeals","toString","replaceOneDeal","newDealDsiString","dealToReplace","newDeal","push","withReplacedDeal","addDealToDsi","numOfTries","pop","withNewDeal","numOfDeals","getNumOfDeals","withNewDealBefore","slice","withNewDealAfter","shift","console","log","removeDealFromDsi","dealToRemove","dealsWithRemoved","dealsWithRemovedBefore","dealsWithRemovedAfter","lines","numOfDealsLine","find","line","includes","parseInt","getPbnFromDsi","scoring","dataInfo","getLinFromDsi","current_time","Date","toISOString","current_hour","getHours","current_minute","getMinutes","current_second","getSeconds","output","dealer","linDealer","extractDealer","linVul","extractVul","boardNum","boardName","linHandSouth","linHandWest","linHandNorth","lin","getLinFromJson","jsonDealSetString","getDsiFromJson","getPbnFromJson","json","JSON","parse","replace","forEach","index","toUpperCase","dealOrder","dealHands","map","pos","toLowerCase","north_south","east_west","lin_vul","lin_dealer"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/Scenarios/DealHelper.js"],"sourcesContent":["export const updateVul = (dsiString) => {\n    let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n    if (vul !== \"Matching\") {\n        return dsiString;\n    }\n    let deals = dsiString.split('[Vulnerable \\\"');\n    for (let i = 1; i < deals.length; i++) {\n        let deal = deals[i];\n        let deal_div = deal.split('\\\"');\n        let new_vul = \"None\";\n        if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 ||\n            i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n            new_vul = \"NS\";\n        }\n        if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 ||\n            i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n            if (new_vul === \"NS\") {\n                new_vul = \"All\";\n            } else {\n                new_vul = \"EW\";\n            }\n        }\n        deal_div[0] = new_vul;\n        deals[i] = deal_div.join('\\\"');\n    }\n    return deals.join('[Vulnerable \\\"');\n};\n\nexport const extractDeal = (dsiString, dealNum) => {\n    const deals = dsiString.split('\\n\\n');\n    return deals[dealNum].trim();\n};\n\nconst extractSuit = (deal, handType, suitType) => {\n    deal = deal.split(\"[Deal \\\"N:\")[1].split(\"\\\"]\")[0];\n    const hands = deal.split(\" \");\n\n    const handIndex = {\n        \"hand-north\": 0,\n        \"hand-east\": 1,\n        \"hand-south\": 2,\n        \"hand-west\": 3\n    };\n\n    const suitIndex = {\n        \"suit-spades\": 0,\n        \"suit-hearts\": 1,\n        \"suit-diamonds\": 2,\n        \"suit-clubs\": 3\n    };\n\n    const hand = hands[handIndex[handType]];\n    const suits = hand.split(\".\");\n    return suits[suitIndex[suitType]];\n}\n\nexport const renumerateDeals = (dsiString) => {\n    let deals = dsiString.split('[Board \\\"');\n    for (let i = 1; i < deals.length; i++) {\n        let deal = deals[i];\n        let deal_div = deal.split('\\\"');\n        deal_div[0] = i.toString();\n        deals[i] = deal_div.join('\\\"');\n    }\n    return updateVul(deals.join('[Board \\\"'));\n};\n\nexport const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n    let dealToReplace = extractDeal(dsiString, dealNum);\n    let deals = dsiString.split(dealToReplace);\n    let newDeal = extractDeal(newDealDsiString, 1);\n    deals.push(deals[1]);\n    deals[1] = newDeal;\n    let withReplacedDeal = deals.join('');\n    withReplacedDeal = renumerateDeals(withReplacedDeal);\n    return withReplacedDeal;\n};\n\nexport const addDealToDsi = (dsiString, newDealDsiString) => {\n    let deals = dsiString.split('\\n\\n');\n    let numOfTries = \"\\n\" + deals[deals.length - 1];\n    deals.pop();\n    let newDeal = newDealDsiString.split('\\n\\n')[1];\n    deals.push(newDeal);\n    deals.push(numOfTries);\n    let withNewDeal = deals.join('\\n\\n');\n    let numOfDeals = getNumOfDeals(withNewDeal) + 1;\n    withNewDeal = withNewDeal.split('Number of deals: ');\n    let withNewDealBefore = withNewDeal[0];\n    withNewDealBefore = withNewDealBefore.slice(0, -1);\n    let withNewDealAfter = withNewDeal[1].split('\\n');\n    withNewDealAfter.shift();\n    withNewDealAfter = withNewDealAfter.join('\\n');\n    withNewDeal = withNewDealBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + withNewDealAfter;\n    withNewDeal = renumerateDeals(withNewDeal);\n    console.log('here', withNewDeal);\n    return withNewDeal;\n}\n\nexport const removeDealFromDsi = (dsiString, dealNum) => {\n    let dealToRemove = extractDeal(dsiString, dealNum);\n    let deals = dsiString.split(dealToRemove);\n    deals[0] = deals[0].slice(0, -2);\n    let dealsWithRemoved = deals.join('');\n    let numOfDeals = getNumOfDeals(dealsWithRemoved) - 1;\n    dealsWithRemoved = dealsWithRemoved.split('Number of deals: ');\n    let dealsWithRemovedBefore = dealsWithRemoved[0];\n    let dealsWithRemovedAfter = dealsWithRemoved[1].split('\\n');\n    dealsWithRemovedAfter.shift();\n    dealsWithRemovedAfter = dealsWithRemovedAfter.join('\\n');\n    dealsWithRemoved = dealsWithRemovedBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + dealsWithRemovedAfter;\n    dealsWithRemoved = renumerateDeals(dealsWithRemoved);\n    return dealsWithRemoved;\n}\n\nexport const getNumOfDeals = (dsiString) => {\n    const lines = dsiString.split('\\n');\n    const numOfDealsLine = lines.find(line => line.includes('Number of deals:'));\n    return parseInt(numOfDealsLine.split(':')[1].trim());\n};\n\nexport const getPbnFromDsi = (dsiString) => {\n    let scoring = dsiString.split('Scoring: ')[1].split('\\n')[0];\n    let deals = dsiString.split('\\n\\n');\n    let dataInfo = deals[0];\n    deals.shift(); // removing data info\n    deals.pop(); // removing final info lines (Tries, etc.)\n    deals = dataInfo + \"\\n\\n\" + deals.join('\\n[Scoring \\\"' + scoring + '\\\"]\\n\\n') + '\\n[Scoring \\\"' + scoring + '\\\"]\\n';\n    return deals;\n};\n\nexport const getLinFromDsi = (dsiString) => {\n    let current_time = new Date().toISOString().slice(0, 10);\n    let current_hour = new Date().getHours();\n    let current_minute = new Date().getMinutes();\n    let current_second = new Date().getSeconds();\n    let output = \"% lin file created at \" + current_time + \" \" + current_hour + \":\" + current_minute + \":\" + current_second + \"\\n%\\n\";\n    let deals = dsiString.split('\\n\\n');\n    let dataInfo = deals[0];\n    deals.shift(); // removing data info\n    deals.pop(); // removing final info lines (Tries, etc.)\n    for (let i = 0; i < deals.length; i++) {\n        let deal = deals[i];\n        let dealer = linDealer(extractDealer(deal))\n        let vul = linVul(extractVul(deal));\n        let boardNum = i + 1;\n        let boardName = 'Board ' + boardNum;\n        let linHandSouth = \"S\" +\n            extractSuit(deal, 'hand-south', 'suit-spades') + \"H\" +\n            extractSuit(deal, 'hand-south', 'suit-hearts') + \"D\" +\n            extractSuit(deal, 'hand-south', 'suit-diamonds') + \"C\" +\n            extractSuit(deal, 'hand-south', 'suit-clubs');\n        let linHandWest = \"S\" +\n            extractSuit(deal, 'hand-west', 'suit-spades') + \"H\" +\n            extractSuit(deal, 'hand-west', 'suit-hearts') + \"D\" +\n            extractSuit(deal, 'hand-west', 'suit-diamonds') + \"C\" +\n            extractSuit(deal, 'hand-west', 'suit-clubs');\n        let linHandNorth = \"S\" +\n            extractSuit(deal, 'hand-north', 'suit-spades') + \"H\" +\n            extractSuit(deal, 'hand-north', 'suit-hearts') + \"D\" +\n            extractSuit(deal, 'hand-north', 'suit-diamonds') + \"C\" +\n            extractSuit(deal, 'hand-north', 'suit-clubs');\n        let lin =\n            \"qx|o\" + boardNum + \"|md|\" +\n            dealer + linHandSouth + \",\" +\n            linHandWest + \",\" +\n            linHandNorth + \",\" +\n            \"|rh||ah|\" +\n            boardName + \"|sv|\" + vul + \"|pg||\\n\";\n        output += lin;\n    }\n    return output;\n}\n\nexport const getLinFromJson = (jsonDealSetString) => {\n    let dsiString = getDsiFromJson(jsonDealSetString);\n    return getLinFromDsi(dsiString);\n}\n\nexport const getPbnFromJson = (jsonDealSetString) => {\n    let dsiString = getDsiFromJson(jsonDealSetString);\n    return getPbnFromDsi(dsiString);\n}\n\nexport const getDsiFromJson = (jsonDealSetString) => {\n    const json = JSON.parse(jsonDealSetString);\n\n    let dsiString = `[Date \"${new Date().toISOString().slice(0, 10).replace(/-/g, '.')}\"]\\n`;\n\n    json.deals.forEach((deal, index) => {\n        // Board and Dealer Information\n        dsiString += `\\n[Board \"${index + 1}\"]\\n`;\n        dsiString += `[Dealer \"${deal.dealer[0].toUpperCase()}\"]\\n`;\n        dsiString += `[Vulnerable \"${deal.vul}\"]\\n`;\n\n        // Creating the deal string\n        const dealOrder = ['North', 'East', 'South', 'West'];\n        const dealHands = dealOrder.map(pos => deal[pos.toLowerCase()]).join(\" \");\n        dsiString += `[Deal \"N:${dealHands}\"]\\n`;\n    });\n\n    // TODO (we do not store this info for now)\n    dsiString += `\\nNumber of deals: ${json.deals.length}\\n`;\n    dsiString += \"Compiler: Chai\\n\";\n    dsiString += \"Vulnerability: Random\\n\";\n    dsiString += \"Dealer: South\\n\";\n    dsiString += \"Flip: NoFlip\\n\";\n    dsiString += \"Scoring: IMP\\n\";\n    dsiString += \"Tries: 12\\n\";\n    dsiString += \"No constraints applied.\\n\";\n\n    return dsiString;\n};\n\n\nconst extractDealer = (deal) => {\n    return deal.split('Dealer \\\"')[1].split('\\\"')[0];\n}\n\nconst extractVul = (deal) => {\n    let vul = deal.split('Vulnerable \\\"')[1].split('\\\"')[0];\n    let north_south = vul === 'NS' || vul === 'All';\n    let east_west = vul === 'EW' || vul === 'All';\n    return [north_south, east_west];\n}\n\nconst linVul = (vul) => {\n    let lin_vul = '';\n    if (vul[0] && vul[1]) {\n        lin_vul = 'b';\n    } else if (vul[0]) {\n        lin_vul = 'n';\n    } else if (vul[1]) {\n        lin_vul = 'e';\n    } else {\n        lin_vul = 'o';\n    }\n    return lin_vul;\n}\n\nconst linDealer = (dealer) => {\n    let lin_dealer = '';\n    if (dealer === 'N') {\n        lin_dealer = '3';\n    } else if (dealer === 'E') {\n        lin_dealer = '4';\n    } else if (dealer === 'S') {\n        lin_dealer = '1';\n    } else {\n        lin_dealer = '2';\n    }\n    return lin_dealer;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}