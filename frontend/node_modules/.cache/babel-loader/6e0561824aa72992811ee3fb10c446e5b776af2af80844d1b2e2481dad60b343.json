{"ast":null,"code":"export const updateVul = dsiString => {\n  let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n  if (vul !== \"Matching\") {\n    return dsiString;\n  }\n  let deals = dsiString.split('[Vulnerable \\\"');\n  for (let i = 1; i < deals.length; i++) {\n    let deal = deals[i];\n    let deal_div = deal.split('\\\"');\n    let new_vul = \"None\";\n    if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 || i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n      new_vul = \"NS\";\n    }\n    if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 || i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n      if (new_vul === \"NS\") {\n        new_vul = \"All\";\n      } else {\n        new_vul = \"EW\";\n      }\n    }\n    deal_div[0] = new_vul;\n    deals[i] = deal_div.join('\\\"');\n  }\n  return deals.join('[Vulnerable \\\"');\n};\nexport const extractDeal = (dsiString, dealNum) => {\n  const deals = dsiString.split('\\n\\n');\n  return deals[dealNum].trim();\n};\nexport const renumerateDeals = dsiString => {\n  let deals = dsiString.split('[Board \\\"');\n  for (let i = 1; i < deals.length; i++) {\n    let deal = deals[i];\n    let deal_div = deal.split('\\\"');\n    deal_div[0] = i.toString();\n    deals[i] = deal_div.join('\\\"');\n  }\n  return updateVul(deals.join('[Board \\\"'));\n};\nexport const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n  let dealToReplace = extractDeal(dsiString, dealNum);\n  let deals = dsiString.split(dealToReplace);\n  let newDeal = extractDeal(newDealDsiString, 1);\n  deals.push(deals[1]);\n  deals[1] = newDeal;\n  let withReplacedDeal = deals.join('');\n  withReplacedDeal = renumerateDeals(withReplacedDeal);\n  return withReplacedDeal;\n};\nexport const addDeal = (dsiString, newDealDsiString) => {\n  let deals = dsiString.split('\\n\\n');\n  let numOfTries = \"\\n\" + deals[deals.length - 1];\n  deals.pop();\n  let newDeal = newDealDsiString.split('\\n\\n')[1];\n  deals.push(newDeal);\n  deals.push(numOfTries);\n  let withNewDeal = deals.join('\\n\\n');\n  let numOfDeals = getNumOfDeals(withNewDeal) + 1;\n  withNewDeal = withNewDeal.split('Number of deals: ');\n  let withNewDealBefore = withNewDeal[0];\n  withNewDealBefore = withNewDealBefore.slice(0, -1);\n  let withNewDealAfter = withNewDeal[1].split('\\n');\n  withNewDealAfter.shift();\n  withNewDealAfter = withNewDealAfter.join('\\n');\n  withNewDeal = withNewDealBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + withNewDealAfter;\n  withNewDeal = renumerateDeals(withNewDeal);\n  return withNewDeal;\n};\nexport const removeDeal = (dsiString, dealNum) => {\n  let dealToRemove = extractDeal(dsiString, dealNum);\n  let deals = dsiString.split(dealToRemove);\n  deals[0] = deals[0].slice(0, -1);\n  let dealsWithRemoved = deals.join('');\n  let numOfDeals = getNumOfDeals(dealsWithRemoved) - 1;\n  dealsWithRemoved = dealsWithRemoved.split('Number of deals: ');\n  let dealsWithRemovedBefore = dealsWithRemoved[0];\n  let dealsWithRemovedAfter = dealsWithRemoved[1].split('\\n');\n  dealsWithRemovedAfter.shift();\n  dealsWithRemovedAfter = dealsWithRemovedAfter.join('\\n');\n  dealsWithRemoved = dealsWithRemovedBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + dealsWithRemovedAfter;\n  dealsWithRemoved = renumerateDeals(dealsWithRemoved);\n  return dealsWithRemoved;\n};\nexport const getNumOfDeals = dsiString => {\n  const lines = dsiString.split('\\n');\n  const numOfDealsLine = lines.find(line => line.includes('Number of deals:'));\n  const numOfDeals = parseInt(numOfDealsLine.split(':')[1].trim());\n  return numOfDeals;\n};","map":{"version":3,"names":["updateVul","dsiString","vul","split","deals","i","length","deal","deal_div","new_vul","join","extractDeal","dealNum","trim","renumerateDeals","toString","replaceOneDeal","newDealDsiString","dealToReplace","newDeal","push","withReplacedDeal","addDeal","numOfTries","pop","withNewDeal","numOfDeals","getNumOfDeals","withNewDealBefore","slice","withNewDealAfter","shift","removeDeal","dealToRemove","dealsWithRemoved","dealsWithRemovedBefore","dealsWithRemovedAfter","lines","numOfDealsLine","find","line","includes","parseInt"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/scenarios/DealHelper.js"],"sourcesContent":["export const updateVul = (dsiString) => {\n    let vul = dsiString.split('Vulnerability: ')[1].split('\\n')[0];\n    if (vul !== \"Matching\") {\n        return dsiString;\n    }\n    let deals = dsiString.split('[Vulnerable \\\"');\n    for (let i = 1; i < deals.length; i++) {\n        let deal = deals[i];\n        let deal_div = deal.split('\\\"');\n        let new_vul = \"None\";\n        if (i % 16 === 2 || i % 16 === 4 || i % 16 === 5 || i % 16 === 7 ||\n            i % 16 === 10 || i % 16 === 12 || i % 16 === 13 || i % 16 === 15) {\n            new_vul = \"NS\";\n        }\n        if (i % 16 === 3 || i % 16 === 4 || i % 16 === 6 || i % 16 === 7 ||\n            i % 16 === 9 || i % 16 === 10 || i % 16 === 13 || i % 16 === 16) {\n            if (new_vul === \"NS\") {\n                new_vul = \"All\";\n            } else {\n                new_vul = \"EW\";\n            }\n        }\n        deal_div[0] = new_vul;\n        deals[i] = deal_div.join('\\\"');\n    }\n    return deals.join('[Vulnerable \\\"');\n};\n\nexport const extractDeal = (dsiString, dealNum) => {\n    const deals = dsiString.split('\\n\\n');\n    return deals[dealNum].trim();\n};\n\nexport const renumerateDeals = (dsiString) => {\n    let deals = dsiString.split('[Board \\\"');\n    for (let i = 1; i < deals.length; i++) {\n        let deal = deals[i];\n        let deal_div = deal.split('\\\"');\n        deal_div[0] = i.toString();\n        deals[i] = deal_div.join('\\\"');\n    }\n    return updateVul(deals.join('[Board \\\"'));\n};\n\nexport const replaceOneDeal = (dsiString, newDealDsiString, dealNum) => {\n    let dealToReplace = extractDeal(dsiString, dealNum);\n    let deals = dsiString.split(dealToReplace);\n    let newDeal = extractDeal(newDealDsiString, 1);\n    deals.push(deals[1]);\n    deals[1] = newDeal;\n    let withReplacedDeal = deals.join('');\n    withReplacedDeal = renumerateDeals(withReplacedDeal);\n    return withReplacedDeal;\n};\n\nexport const addDeal = (dsiString, newDealDsiString) => {\n    let deals = dsiString.split('\\n\\n');\n    let numOfTries = \"\\n\" + deals[deals.length - 1];\n    deals.pop();\n    let newDeal = newDealDsiString.split('\\n\\n')[1];\n    deals.push(newDeal);\n    deals.push(numOfTries);\n    let withNewDeal = deals.join('\\n\\n');\n    let numOfDeals = getNumOfDeals(withNewDeal) + 1;\n    withNewDeal = withNewDeal.split('Number of deals: ');\n    let withNewDealBefore = withNewDeal[0];\n    withNewDealBefore = withNewDealBefore.slice(0, -1);\n    let withNewDealAfter = withNewDeal[1].split('\\n');\n    withNewDealAfter.shift();\n    withNewDealAfter = withNewDealAfter.join('\\n');\n    withNewDeal = withNewDealBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + withNewDealAfter;\n    withNewDeal = renumerateDeals(withNewDeal);\n    return withNewDeal;\n}\n\nexport const removeDeal = (dsiString, dealNum) => {\n    let dealToRemove = extractDeal(dsiString, dealNum);\n    let deals = dsiString.split(dealToRemove);\n    deals[0] = deals[0].slice(0, -1);\n    let dealsWithRemoved = deals.join('');\n    let numOfDeals = getNumOfDeals(dealsWithRemoved) - 1;\n    dealsWithRemoved = dealsWithRemoved.split('Number of deals: ');\n    let dealsWithRemovedBefore = dealsWithRemoved[0];\n    let dealsWithRemovedAfter = dealsWithRemoved[1].split('\\n');\n    dealsWithRemovedAfter.shift();\n    dealsWithRemovedAfter = dealsWithRemovedAfter.join('\\n');\n    dealsWithRemoved = dealsWithRemovedBefore + 'Number of deals: ' + numOfDeals + \"\\n\" + dealsWithRemovedAfter;\n    dealsWithRemoved = renumerateDeals(dealsWithRemoved);\n    return dealsWithRemoved;\n}\n\nexport const getNumOfDeals = (dsiString) => {\n    const lines = dsiString.split('\\n');\n    const numOfDealsLine = lines.find(line => line.includes('Number of deals:'));\n    const numOfDeals = parseInt(numOfDealsLine.split(':')[1].trim());\n    return numOfDeals;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}