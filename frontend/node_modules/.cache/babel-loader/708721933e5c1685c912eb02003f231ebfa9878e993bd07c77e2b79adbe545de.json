{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scenarios() {\n  _s();\n  const pageLayoutRef = useRef(null);\n  const leftPanelRef = useRef(null);\n  const rightPanelRef = useRef(null);\n  const dividerRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [leftWidthRatio, setLeftWidthRatio] = useState(0.5);\n  const minWidth = 400;\n  let smallView = false;\n  let rightDependentRatio = 0.035;\n  useEffect(() => {\n    const updatePanelVisibility = () => {\n      // Logic for handling window resize and toggling view based on it\n    };\n    const handleMouseMove = e => {\n      if (!isDragging || smallView) return;\n      const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n      let totalWidth = pageLayoutRect.width;\n      let leftWidth = e.clientX - pageLayoutRect.left - dividerRef.current.offsetWidth / 2;\n      let rightWidth = totalWidth - leftWidth - dividerRef.current.offsetWidth / 2;\n      if (leftWidth < minWidth) {\n        leftWidth = minWidth;\n        rightWidth = totalWidth - minWidth - dividerRef.current.offsetWidth / 2;\n      } else if (rightWidth < minWidth) {\n        rightWidth = minWidth;\n        leftWidth = totalWidth - minWidth - dividerRef.current.offsetWidth / 2;\n      }\n      setLeftWidthRatio(leftWidth / totalWidth);\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', () => setIsDragging(false));\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', () => setIsDragging(false));\n    };\n  }, [isDragging, smallView]);\n\n  // Logic to apply the layout based on leftWidthRatio\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"page-layout\",\n    ref: pageLayoutRef,\n    className: \"page-layout\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"left-partial\",\n      ref: leftPanelRef,\n      className: \"left-panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divider\",\n      ref: dividerRef,\n      onMouseDown: () => setIsDragging(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"right-partial\",\n      ref: rightPanelRef,\n      className: \"right-panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(Scenarios, \"C7cixL1mPHd6CzXIeclrKyfSEFI=\");\n_c = Scenarios;\nexport default Scenarios;\nvar _c;\n$RefreshReg$(_c, \"Scenarios\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Scenarios","_s","pageLayoutRef","leftPanelRef","rightPanelRef","dividerRef","isDragging","setIsDragging","leftWidthRatio","setLeftWidthRatio","minWidth","smallView","rightDependentRatio","updatePanelVisibility","handleMouseMove","e","pageLayoutRect","current","getBoundingClientRect","totalWidth","width","leftWidth","clientX","left","offsetWidth","rightWidth","document","addEventListener","removeEventListener","id","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Scenarios() {\n    const pageLayoutRef = useRef(null);\n    const leftPanelRef = useRef(null);\n    const rightPanelRef = useRef(null);\n    const dividerRef = useRef(null);\n    const [isDragging, setIsDragging] = useState(false);\n    const [leftWidthRatio, setLeftWidthRatio] = useState(0.5);\n    const minWidth = 400;\n    let smallView = false;\n    let rightDependentRatio = 0.035;\n\n    useEffect(() => {\n        const updatePanelVisibility = () => {\n            // Logic for handling window resize and toggling view based on it\n        };\n\n        const handleMouseMove = (e) => {\n            if (!isDragging || smallView) return;\n            const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n            let totalWidth = pageLayoutRect.width;\n            let leftWidth = e.clientX - pageLayoutRect.left - dividerRef.current.offsetWidth / 2;\n            let rightWidth = totalWidth - leftWidth - dividerRef.current.offsetWidth / 2;\n\n            if (leftWidth < minWidth) {\n                leftWidth = minWidth;\n                rightWidth = totalWidth - minWidth - dividerRef.current.offsetWidth / 2;\n            } else if (rightWidth < minWidth) {\n                rightWidth = minWidth;\n                leftWidth = totalWidth - minWidth - dividerRef.current.offsetWidth / 2;\n            }\n\n            setLeftWidthRatio(leftWidth / totalWidth);\n        };\n\n        document.addEventListener('mousemove', handleMouseMove);\n        document.addEventListener('mouseup', () => setIsDragging(false));\n\n        return () => {\n            document.removeEventListener('mousemove', handleMouseMove);\n            document.removeEventListener('mouseup', () => setIsDragging(false));\n        };\n    }, [isDragging, smallView]);\n\n    // Logic to apply the layout based on leftWidthRatio\n    // ...\n\n    return (\n        <div id=\"page-layout\" ref={pageLayoutRef} className=\"page-layout\">\n            <div id=\"left-partial\" ref={leftPanelRef} className=\"left-panel\">\n                {/* Left panel content */}\n            </div>\n            <div\n                className=\"divider\"\n                ref={dividerRef}\n                onMouseDown={() => setIsDragging(true)}\n            >\n                {/* Divider content (if any) */}\n            </div>\n            <div id=\"right-partial\" ref={rightPanelRef} className=\"right-panel\">\n                {/* Right panel content */}\n            </div>\n        </div>\n    );\n}\n\nexport default Scenarios;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}