{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const validateSession = async () => {\n      console.log('here val');\n      try {\n        fetch('http://localhost:5015/Account/ValidateSession', {\n          method: 'GET',\n          credentials: 'include'\n        }).then(r => {\n          console.log(\"here val2\");\n          if (r.status === 200) {\n            setIsAuthenticated(true);\n          } else {\n            setIsAuthenticated(false);\n            throw new Error('Failed to validate session');\n          }\n        });\n      } catch (error) {\n        console.log(\"here val2\");\n        console.error('Session validation failed:', error);\n        setIsAuthenticated(false);\n        throw error;\n      }\n    };\n    console.log(\"here val0\");\n    validateSession().then();\n  }, []);\n  const login = () => {\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","validateSession","console","log","fetch","method","credentials","then","r","status","Error","error","login","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const validateSession = async () => {\n            console.log('here val');\n            try {\n                fetch('http://localhost:5015/Account/ValidateSession', {\n                    method: 'GET',\n                    credentials: 'include',\n                }).then(r => {\n                    console.log(\"here val2\");\n                    if (r.status === 200) {\n                        setIsAuthenticated(true);\n                    } else {\n                        setIsAuthenticated(false);\n                        throw new Error('Failed to validate session');\n                    }\n                });\n            } catch (error) {\n                console.log(\"here val2\");\n                console.error('Session validation failed:', error);\n                setIsAuthenticated(false);\n                throw error;\n            }\n        };\n\n        console.log(\"here val0\");\n        validateSession().then();\n    }, []);\n\n    const login = () => {\n        setIsAuthenticated(true);\n    };\n\n    const logout = () => {\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACZ,MAAMU,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAI;QACAC,KAAK,CAAC,+CAA+C,EAAE;UACnDC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACjB,CAAC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAI;UACTN,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;UACxB,IAAIK,CAAC,CAACC,MAAM,KAAK,GAAG,EAAE;YAClBT,kBAAkB,CAAC,IAAI,CAAC;UAC5B,CAAC,MAAM;YACHA,kBAAkB,CAAC,KAAK,CAAC;YACzB,MAAM,IAAIU,KAAK,CAAC,4BAA4B,CAAC;UACjD;QACJ,CAAC,CAAC;MACN,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZT,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;QACxBD,OAAO,CAACS,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDX,kBAAkB,CAAC,KAAK,CAAC;QACzB,MAAMW,KAAK;MACf;IACJ,CAAC;IAEDT,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;IACxBF,eAAe,CAAC,CAAC,CAACM,IAAI,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAGA,CAAA,KAAM;IAChBZ,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMa,MAAM,GAAGA,CAAA,KAAM;IACjBb,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACmB,QAAQ;IAACC,KAAK,EAAE;MAAEhB,eAAe;MAAEa,KAAK;MAAEC;IAAO,CAAE;IAAAhB,QAAA,EAC3DA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACrB,EAAA,CA5CWF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA8CzB,OAAO,MAAMyB,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMjC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC2B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}