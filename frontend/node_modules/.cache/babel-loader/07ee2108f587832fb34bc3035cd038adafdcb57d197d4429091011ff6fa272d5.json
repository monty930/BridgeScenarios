{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/Common/LoginPage.js\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import {useNavigate} from 'react-router-dom';\n// import {useAuth} from './AuthContext';\n//\n// function LoginPage() {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [handleForm, setHandleForm] = useState('login');\n//     const [loginError, setLoginError] = useState('');\n//     const [signupError, setSignupError] = useState('');\n//     const [visibleForm, setVisibleForm] = useState('login');\n//     const [showForm, setShowForm] = useState('login');\n//     const navigate = useNavigate();\n//     const {login} = useAuth();\n//     const animationTime = 0.3;\n//\n//     const handleViewToggle = async () => {\n//         setLoginError('');\n//         setSignupError('');\n//         if (visibleForm === 'login') {\n//             setShowForm('signup');\n//             setHandleForm('signup');\n//             await moveUp();\n//             setVisibleForm('signup');\n//         } else {\n//             setShowForm('login');\n//             setHandleForm('login');\n//             setVisibleForm('login');\n//             await moveDown();\n//         }\n//     };\n//\n//     const delay = ms => new Promise(res => setTimeout(res, ms));\n//\n//     const moveUp = async () => {\n//         await delay(animationTime * 1000);\n//     };\n//\n//     const moveDown = async () => {\n//         await delay(animationTime * 1000);\n//     };\n//\n//\n//     const handleSubmit = async (event) => {\n//         if (handleForm === 'login') {\n//             await handleLogin(event);\n//         } else {\n//             await handleSignup(event);\n//         }\n//     };\n//\n//     const handleLogin = async (event) => {\n//         event.preventDefault();\n//         try {\n//             fetch('http://localhost:5015/Account/Login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 credentials: 'include',\n//                 body: JSON.stringify({username, password}),\n//             }).then(r => {\n//                 if (r.status === 200) {\n//                     login();\n//                     navigate('/');\n//                 } else {\n//                     r.json().then(data => {\n//                         console.log(data);\n//                         setLoginError(data.message);\n//                     });\n//                 }\n//             });\n//         } catch (error) {\n//             if (error.response) {\n//                 setLoginError(error.response.data.message);\n//             } else {\n//                 setLoginError('Login failed. Please try again later.');\n//             }\n//         }\n//     };\n//\n//     const handleSignup = async (event) => {\n//         // TODO\n//     }\n//\n//     return (\n//         <div className={\"LoginPageImageContrainer\"}>\n//             <div className=\"LoginContainer\">\n//                 <form onSubmit={handleSubmit} className=\"LoginForm\">\n//                     <div\n//                         className={\"OrLogInDiv\"}\n//                         onClick={handleViewToggle}\n//                         style={{display: `${visibleForm === 'login' ? 'none' : 'flex'}`}}\n//                     >\n//                         <span className={\"OrSpan\"}>or</span>\n//                         <span className={\"LogInSpan\"}>Log in</span>\n//                     </div>\n//                     {(visibleForm === 'login') && (\n//                         <div className={\"LogInFormContent\"}>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LogSignPageTitle\"}>Log in</div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"username\">Username:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     className=\"LoginInput\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     className=\"LoginInput\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div><div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <button type=\"submit\" className=\" AnyButton LogSignButton LoginButton\">Log in</button>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             {loginError && <span className=\"ErrorField\">{loginError}</span>}\n//                         </div>)}\n//\n//                     <div className={\"BigDiv\"}\n//                          onClick={handleViewToggle}\n//                          style={{\n//                              animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n//                          }}>\n//                     </div>\n//                     <div\n//                         className={\"OrDiv\"}\n//                         style={{\n//                             display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n//                         }}\n//                         onClick={handleViewToggle}>or\n//                     </div>\n//                     <div className={\"SignUpDiv\"}\n//                          style={{\n//                              display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n//                          }}\n//                          onClick={handleViewToggle}>Sign up\n//                     </div>\n//                     {(visibleForm === 'signup' || showForm === 'signup') &&\n//                         (<div\n//                             className={\"SignUpFormContent\"}\n//                             style={{\n//                                 animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n//                             }}>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LogSignPageTitle\"}>Sign up</div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"email\">Email:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"email\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"username\">Username:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <button type=\"submit\" className=\" AnyButton LogSignButton SignUpButton\">Sign up</button>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             {signupError && <span className=\"ErrorField\">{signupError}</span>}\n//                         </div>)}\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default LoginPage;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [handleForm, setHandleForm] = useState('login');\n  const [loginError, setLoginError] = useState('');\n  const [signupError, setSignupError] = useState('');\n  const [visibleForm, setVisibleForm] = useState('login');\n  const [showForm, setShowForm] = useState('login');\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const {\n    login\n  } = useAuth();\n  const animationTime = 0.3;\n  const handleViewToggle = async () => {\n    setLoginError('');\n    setSignupError('');\n    if (visibleForm === 'login') {\n      setShowForm('signup');\n      setHandleForm('signup');\n      await moveUp();\n      setVisibleForm('signup');\n    } else {\n      setShowForm('login');\n      setHandleForm('login');\n      setVisibleForm('login');\n      await moveDown();\n    }\n  };\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n  const moveUp = async () => {\n    await delay(animationTime * 1000);\n  };\n  const moveDown = async () => {\n    await delay(animationTime * 1000);\n  };\n  const handleSubmit = async event => {\n    if (handleForm === 'login') {\n      await handleLogin(event);\n    } else {\n      await handleSignup(event);\n    }\n  };\n  const handleLogin = async event => {\n    event.preventDefault();\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:5015/Account/Login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        login();\n        navigate('/');\n      } else {\n        const data = await response.json();\n        setLoginError(data.message);\n      }\n    } catch (error) {\n      setLoginError('Login failed. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignup = async event => {\n    // TODO\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginPageImageContrainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"LoginContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"LoginForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"OrLogInDiv\",\n          onClick: handleViewToggle,\n          style: {\n            display: `${visibleForm === 'login' ? 'none' : 'flex'}`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"OrSpan\",\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"LogInSpan\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 21\n        }, this), visibleForm === 'login' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"LogInFormContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LogSignPageTitle\",\n            children: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              className: \"LoginInput\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              className: \"LoginInput\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"AnyButton LogSignButton LoginButton\",\n            disabled: loading,\n            children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 44\n            }, this) : 'Log in'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 29\n          }, this), loginError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ErrorField\",\n            children: loginError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 44\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BigDiv\",\n          onClick: handleViewToggle,\n          style: {\n            animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"OrDiv\",\n          style: {\n            display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n          },\n          onClick: handleViewToggle,\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SignUpDiv\",\n          style: {\n            display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n          },\n          onClick: handleViewToggle,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this), (visibleForm === 'signup' || showForm === 'signup') && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"SignUpFormContent\",\n          style: {\n            animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LogSignPageTitle\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"email\",\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"email\",\n              className: \"LoginInput SignUpText\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"username\",\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"username\",\n              className: \"LoginInput SignUpText\",\n              value: username,\n              onChange: e => setUsername(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"password\",\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              className: \"LoginInput SignUpText\",\n              value: password,\n              onChange: e => setPassword(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"AnyButton LogSignButton SignUpButton\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"LoginFormBreak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 29\n          }, this), signupError && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ErrorField\",\n            children: signupError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 45\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 9\n  }, this);\n}\n_s(LoginPage, \"Cbyvu2tBK0l1LbaWnHR3M2Hq9O4=\", false, function () {\n  return [useNavigate, useAuth];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","useAuth","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","email","setEmail","handleForm","setHandleForm","loginError","setLoginError","signupError","setSignupError","visibleForm","setVisibleForm","showForm","setShowForm","loading","setLoading","navigate","login","animationTime","handleViewToggle","moveUp","moveDown","delay","ms","Promise","res","setTimeout","handleSubmit","event","handleLogin","handleSignup","preventDefault","response","fetch","method","headers","credentials","body","JSON","stringify","ok","data","json","message","error","className","children","onSubmit","onClick","style","display","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","required","disabled","animation","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/Common/LoginPage.js"],"sourcesContent":["// import React, {useState} from 'react';\n// import {useNavigate} from 'react-router-dom';\n// import {useAuth} from './AuthContext';\n//\n// function LoginPage() {\n//     const [username, setUsername] = useState('');\n//     const [password, setPassword] = useState('');\n//     const [email, setEmail] = useState('');\n//     const [handleForm, setHandleForm] = useState('login');\n//     const [loginError, setLoginError] = useState('');\n//     const [signupError, setSignupError] = useState('');\n//     const [visibleForm, setVisibleForm] = useState('login');\n//     const [showForm, setShowForm] = useState('login');\n//     const navigate = useNavigate();\n//     const {login} = useAuth();\n//     const animationTime = 0.3;\n//\n//     const handleViewToggle = async () => {\n//         setLoginError('');\n//         setSignupError('');\n//         if (visibleForm === 'login') {\n//             setShowForm('signup');\n//             setHandleForm('signup');\n//             await moveUp();\n//             setVisibleForm('signup');\n//         } else {\n//             setShowForm('login');\n//             setHandleForm('login');\n//             setVisibleForm('login');\n//             await moveDown();\n//         }\n//     };\n//\n//     const delay = ms => new Promise(res => setTimeout(res, ms));\n//\n//     const moveUp = async () => {\n//         await delay(animationTime * 1000);\n//     };\n//\n//     const moveDown = async () => {\n//         await delay(animationTime * 1000);\n//     };\n//\n//\n//     const handleSubmit = async (event) => {\n//         if (handleForm === 'login') {\n//             await handleLogin(event);\n//         } else {\n//             await handleSignup(event);\n//         }\n//     };\n//\n//     const handleLogin = async (event) => {\n//         event.preventDefault();\n//         try {\n//             fetch('http://localhost:5015/Account/Login', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 credentials: 'include',\n//                 body: JSON.stringify({username, password}),\n//             }).then(r => {\n//                 if (r.status === 200) {\n//                     login();\n//                     navigate('/');\n//                 } else {\n//                     r.json().then(data => {\n//                         console.log(data);\n//                         setLoginError(data.message);\n//                     });\n//                 }\n//             });\n//         } catch (error) {\n//             if (error.response) {\n//                 setLoginError(error.response.data.message);\n//             } else {\n//                 setLoginError('Login failed. Please try again later.');\n//             }\n//         }\n//     };\n//\n//     const handleSignup = async (event) => {\n//         // TODO\n//     }\n//\n//     return (\n//         <div className={\"LoginPageImageContrainer\"}>\n//             <div className=\"LoginContainer\">\n//                 <form onSubmit={handleSubmit} className=\"LoginForm\">\n//                     <div\n//                         className={\"OrLogInDiv\"}\n//                         onClick={handleViewToggle}\n//                         style={{display: `${visibleForm === 'login' ? 'none' : 'flex'}`}}\n//                     >\n//                         <span className={\"OrSpan\"}>or</span>\n//                         <span className={\"LogInSpan\"}>Log in</span>\n//                     </div>\n//                     {(visibleForm === 'login') && (\n//                         <div className={\"LogInFormContent\"}>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LogSignPageTitle\"}>Log in</div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"username\">Username:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     className=\"LoginInput\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     className=\"LoginInput\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div><div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <button type=\"submit\" className=\" AnyButton LogSignButton LoginButton\">Log in</button>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             {loginError && <span className=\"ErrorField\">{loginError}</span>}\n//                         </div>)}\n//\n//                     <div className={\"BigDiv\"}\n//                          onClick={handleViewToggle}\n//                          style={{\n//                              animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n//                          }}>\n//                     </div>\n//                     <div\n//                         className={\"OrDiv\"}\n//                         style={{\n//                             display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n//                         }}\n//                         onClick={handleViewToggle}>or\n//                     </div>\n//                     <div className={\"SignUpDiv\"}\n//                          style={{\n//                              display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n//                          }}\n//                          onClick={handleViewToggle}>Sign up\n//                     </div>\n//                     {(visibleForm === 'signup' || showForm === 'signup') &&\n//                         (<div\n//                             className={\"SignUpFormContent\"}\n//                             style={{\n//                                 animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n//                             }}>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LogSignPageTitle\"}>Sign up</div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"email\">Email:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"email\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={email}\n//                                     onChange={(e) => setEmail(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"username\">Username:</label>\n//                                 <input\n//                                     type=\"text\"\n//                                     id=\"username\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={username}\n//                                     onChange={(e) => setUsername(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className=\"form-group\">\n//                                 <label htmlFor=\"password\">Password:</label>\n//                                 <input\n//                                     type=\"password\"\n//                                     id=\"password\"\n//                                     className=\"LoginInput SignUpText\"\n//                                     value={password}\n//                                     onChange={(e) => setPassword(e.target.value)}\n//                                     required\n//                                 />\n//                             </div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             <button type=\"submit\" className=\" AnyButton LogSignButton SignUpButton\">Sign up</button>\n//                             <div className={\"LoginFormBreak\"}></div>\n//                             {signupError && <span className=\"ErrorField\">{signupError}</span>}\n//                         </div>)}\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default LoginPage;\n\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from './AuthContext';\n\nfunction LoginPage() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [handleForm, setHandleForm] = useState('login');\n    const [loginError, setLoginError] = useState('');\n    const [signupError, setSignupError] = useState('');\n    const [visibleForm, setVisibleForm] = useState('login');\n    const [showForm, setShowForm] = useState('login');\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const { login } = useAuth();\n    const animationTime = 0.3;\n\n    const handleViewToggle = async () => {\n        setLoginError('');\n        setSignupError('');\n        if (visibleForm === 'login') {\n            setShowForm('signup');\n            setHandleForm('signup');\n            await moveUp();\n            setVisibleForm('signup');\n        } else {\n            setShowForm('login');\n            setHandleForm('login');\n            setVisibleForm('login');\n            await moveDown();\n        }\n    };\n\n    const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    const moveUp = async () => {\n        await delay(animationTime * 1000);\n    };\n\n    const moveDown = async () => {\n        await delay(animationTime * 1000);\n    };\n\n    const handleSubmit = async (event) => {\n        if (handleForm === 'login') {\n            await handleLogin(event);\n        } else {\n            await handleSignup(event);\n        }\n    };\n\n    const handleLogin = async (event) => {\n        event.preventDefault();\n        setLoading(true);\n        try {\n            const response = await fetch('http://localhost:5015/Account/Login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                credentials: 'include',\n                body: JSON.stringify({ username, password }),\n            });\n            if (response.ok) {\n                login();\n                navigate('/');\n            } else {\n                const data = await response.json();\n                setLoginError(data.message);\n            }\n        } catch (error) {\n            setLoginError('Login failed. Please try again later.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    const handleSignup = async (event) => {\n        // TODO\n    };\n\n    return (\n        <div className=\"LoginPageImageContrainer\">\n            <div className=\"LoginContainer\">\n                <form onSubmit={handleSubmit} className=\"LoginForm\">\n                    <div\n                        className=\"OrLogInDiv\"\n                        onClick={handleViewToggle}\n                        style={{ display: `${visibleForm === 'login' ? 'none' : 'flex'}` }}\n                    >\n                        <span className=\"OrSpan\">or</span>\n                        <span className=\"LogInSpan\">Log in</span>\n                    </div>\n                    {visibleForm === 'login' && (\n                        <div className=\"LogInFormContent\">\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LogSignPageTitle\">Log in</div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    className=\"LoginInput\"\n                                    value={username}\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password:</label>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    className=\"LoginInput\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <button type=\"submit\" className=\"AnyButton LogSignButton LoginButton\" disabled={loading}>\n                                {loading ? <div className=\"spinner\"></div> : 'Log in'}\n                            </button>\n                            <div className=\"LoginFormBreak\"></div>\n                            {loginError && <span className=\"ErrorField\">{loginError}</span>}\n                        </div>\n                    )}\n\n                    <div className=\"BigDiv\"\n                         onClick={handleViewToggle}\n                         style={{\n                             animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n                         }}>\n                    </div>\n                    <div\n                        className=\"OrDiv\"\n                        style={{\n                            display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n                        }}\n                        onClick={handleViewToggle}>or\n                    </div>\n                    <div className=\"SignUpDiv\"\n                         style={{\n                             display: `${visibleForm === 'login' && showForm === 'login' ? 'flex' : 'none'}`\n                         }}\n                         onClick={handleViewToggle}>Sign up\n                    </div>\n                    {(visibleForm === 'signup' || showForm === 'signup') &&\n                        (<div\n                            className=\"SignUpFormContent\"\n                            style={{\n                                animation: `${showForm === 'login' ? 'slideDown' : 'slideUp'} ${animationTime}s ease-out forwards`\n                            }}>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LogSignPageTitle\">Sign up</div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"email\">Email:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"email\"\n                                    className=\"LoginInput SignUpText\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"username\">Username:</label>\n                                <input\n                                    type=\"text\"\n                                    id=\"username\"\n                                    className=\"LoginInput SignUpText\"\n                                    value={username}\n                                    onChange={(e) => setUsername(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"password\">Password:</label>\n                                <input\n                                    type=\"password\"\n                                    id=\"password\"\n                                    className=\"LoginInput SignUpText\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                    required\n                                />\n                            </div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <div className=\"LoginFormBreak\"></div>\n                            <button type=\"submit\" className=\"AnyButton LogSignButton SignUpButton\">Sign up</button>\n                            <div className=\"LoginFormBreak\"></div>\n                            {signupError && <span className=\"ErrorField\">{signupError}</span>}\n                        </div>)}\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default LoginPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACrD,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,OAAO,CAAC;EACvD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,OAAO,CAAC;EACjD,MAAM,CAACuB,OAAO,EAAEC,UAAU,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMyB,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEyB;EAAM,CAAC,GAAGxB,OAAO,CAAC,CAAC;EAC3B,MAAMyB,aAAa,GAAG,GAAG;EAEzB,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACjCZ,aAAa,CAAC,EAAE,CAAC;IACjBE,cAAc,CAAC,EAAE,CAAC;IAClB,IAAIC,WAAW,KAAK,OAAO,EAAE;MACzBG,WAAW,CAAC,QAAQ,CAAC;MACrBR,aAAa,CAAC,QAAQ,CAAC;MACvB,MAAMe,MAAM,CAAC,CAAC;MACdT,cAAc,CAAC,QAAQ,CAAC;IAC5B,CAAC,MAAM;MACHE,WAAW,CAAC,OAAO,CAAC;MACpBR,aAAa,CAAC,OAAO,CAAC;MACtBM,cAAc,CAAC,OAAO,CAAC;MACvB,MAAMU,QAAQ,CAAC,CAAC;IACpB;EACJ,CAAC;EAED,MAAMC,KAAK,GAAGC,EAAE,IAAI,IAAIC,OAAO,CAACC,GAAG,IAAIC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;EAE3D,MAAMH,MAAM,GAAG,MAAAA,CAAA,KAAY;IACvB,MAAME,KAAK,CAACJ,aAAa,GAAG,IAAI,CAAC;EACrC,CAAC;EAED,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMC,KAAK,CAACJ,aAAa,GAAG,IAAI,CAAC;EACrC,CAAC;EAED,MAAMS,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClC,IAAIxB,UAAU,KAAK,OAAO,EAAE;MACxB,MAAMyB,WAAW,CAACD,KAAK,CAAC;IAC5B,CAAC,MAAM;MACH,MAAME,YAAY,CAACF,KAAK,CAAC;IAC7B;EACJ,CAAC;EAED,MAAMC,WAAW,GAAG,MAAOD,KAAK,IAAK;IACjCA,KAAK,CAACG,cAAc,CAAC,CAAC;IACtBhB,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMiB,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,EAAE;QAChEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,WAAW,EAAE,SAAS;QACtBC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEzC,QAAQ;UAAEE;QAAS,CAAC;MAC/C,CAAC,CAAC;MACF,IAAIgC,QAAQ,CAACQ,EAAE,EAAE;QACbvB,KAAK,CAAC,CAAC;QACPD,QAAQ,CAAC,GAAG,CAAC;MACjB,CAAC,MAAM;QACH,MAAMyB,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCnC,aAAa,CAACkC,IAAI,CAACE,OAAO,CAAC;MAC/B;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZrC,aAAa,CAAC,uCAAuC,CAAC;IAC1D,CAAC,SAAS;MACNQ,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,MAAMe,YAAY,GAAG,MAAOF,KAAK,IAAK;IAClC;EAAA,CACH;EAED,oBACIjC,OAAA;IAAKkD,SAAS,EAAC,0BAA0B;IAAAC,QAAA,eACrCnD,OAAA;MAAKkD,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BnD,OAAA;QAAMoD,QAAQ,EAAEpB,YAAa;QAACkB,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC/CnD,OAAA;UACIkD,SAAS,EAAC,YAAY;UACtBG,OAAO,EAAE7B,gBAAiB;UAC1B8B,KAAK,EAAE;YAAEC,OAAO,EAAG,GAAExC,WAAW,KAAK,OAAO,GAAG,MAAM,GAAG,MAAO;UAAE,CAAE;UAAAoC,QAAA,gBAEnEnD,OAAA;YAAMkD,SAAS,EAAC,QAAQ;YAAAC,QAAA,EAAC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eAClC3D,OAAA;YAAMkD,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxC,CAAC,EACL5C,WAAW,KAAK,OAAO,iBACpBf,OAAA;UAAKkD,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BnD,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAM;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9C3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnD,OAAA;cAAO4D,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C3D,OAAA;cACI6D,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,UAAU;cACbZ,SAAS,EAAC,YAAY;cACtBa,KAAK,EAAE5D,QAAS;cAChB6D,QAAQ,EAAGC,CAAC,IAAK7D,WAAW,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7CI,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnD,OAAA;cAAO4D,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C3D,OAAA;cACI6D,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,UAAU;cACbZ,SAAS,EAAC,YAAY;cACtBa,KAAK,EAAE1D,QAAS;cAChB2D,QAAQ,EAAGC,CAAC,IAAK3D,WAAW,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7CI,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAQ6D,IAAI,EAAC,QAAQ;YAACX,SAAS,EAAC,qCAAqC;YAACkB,QAAQ,EAAEjD,OAAQ;YAAAgC,QAAA,EACnFhC,OAAO,gBAAGnB,OAAA;cAAKkD,SAAS,EAAC;YAAS;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,GAAG;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eACT3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACrChD,UAAU,iBAAIX,OAAA;YAAMkD,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAExC;UAAU;YAAA6C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CACR,eAED3D,OAAA;UAAKkD,SAAS,EAAC,QAAQ;UAClBG,OAAO,EAAE7B,gBAAiB;UAC1B8B,KAAK,EAAE;YACHe,SAAS,EAAG,GAAEpD,QAAQ,KAAK,OAAO,GAAG,WAAW,GAAG,SAAU,IAAGM,aAAc;UAClF;QAAE;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACN3D,OAAA;UACIkD,SAAS,EAAC,OAAO;UACjBI,KAAK,EAAE;YACHC,OAAO,EAAG,GAAExC,WAAW,KAAK,OAAO,IAAIE,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,MAAO;UAClF,CAAE;UACFoC,OAAO,EAAE7B,gBAAiB;UAAA2B,QAAA,EAAC;QAC/B;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACN3D,OAAA;UAAKkD,SAAS,EAAC,WAAW;UACrBI,KAAK,EAAE;YACHC,OAAO,EAAG,GAAExC,WAAW,KAAK,OAAO,IAAIE,QAAQ,KAAK,OAAO,GAAG,MAAM,GAAG,MAAO;UAClF,CAAE;UACFoC,OAAO,EAAE7B,gBAAiB;UAAA2B,QAAA,EAAC;QAChC;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EACL,CAAC5C,WAAW,KAAK,QAAQ,IAAIE,QAAQ,KAAK,QAAQ,kBAC9CjB,OAAA;UACGkD,SAAS,EAAC,mBAAmB;UAC7BI,KAAK,EAAE;YACHe,SAAS,EAAG,GAAEpD,QAAQ,KAAK,OAAO,GAAG,WAAW,GAAG,SAAU,IAAGM,aAAc;UAClF,CAAE;UAAA4B,QAAA,gBACFnD,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/C3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnD,OAAA;cAAO4D,OAAO,EAAC,OAAO;cAAAT,QAAA,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACrC3D,OAAA;cACI6D,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,OAAO;cACVZ,SAAS,EAAC,uBAAuB;cACjCa,KAAK,EAAExD,KAAM;cACbyD,QAAQ,EAAGC,CAAC,IAAKzD,QAAQ,CAACyD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC1CI,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnD,OAAA;cAAO4D,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C3D,OAAA;cACI6D,IAAI,EAAC,MAAM;cACXC,EAAE,EAAC,UAAU;cACbZ,SAAS,EAAC,uBAAuB;cACjCa,KAAK,EAAE5D,QAAS;cAChB6D,QAAQ,EAAGC,CAAC,IAAK7D,WAAW,CAAC6D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7CI,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACvBnD,OAAA;cAAO4D,OAAO,EAAC,UAAU;cAAAT,QAAA,EAAC;YAAS;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eAC3C3D,OAAA;cACI6D,IAAI,EAAC,UAAU;cACfC,EAAE,EAAC,UAAU;cACbZ,SAAS,EAAC,uBAAuB;cACjCa,KAAK,EAAE1D,QAAS;cAChB2D,QAAQ,EAAGC,CAAC,IAAK3D,WAAW,CAAC2D,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC7CI,QAAQ;YAAA;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC,eACN3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtC3D,OAAA;YAAQ6D,IAAI,EAAC,QAAQ;YAACX,SAAS,EAAC,sCAAsC;YAAAC,QAAA,EAAC;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACvF3D,OAAA;YAAKkD,SAAS,EAAC;UAAgB;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACrC9C,WAAW,iBAAIb,OAAA;YAAMkD,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEtC;UAAW;YAAA2C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACzD,EAAA,CA9MQD,SAAS;EAAA,QAUGJ,WAAW,EACVC,OAAO;AAAA;AAAAwE,EAAA,GAXpBrE,SAAS;AAgNlB,eAAeA,SAAS;AAAC,IAAAqE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}