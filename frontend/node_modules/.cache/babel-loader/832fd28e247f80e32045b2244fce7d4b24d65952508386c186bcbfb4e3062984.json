{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/SavedItemsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SavedItemsPage() {\n  // const [savedScenarios, setSavedScenarios] = useState([]);\n  // const [savedDealSets, setSavedDealSets] = useState([]);\n  // const [activeTab, setActiveTab] = useState('constraints');\n  //\n  // useEffect(() => {\n  //     fetch('http://localhost:5015/ProfileData/GetSavedContent', {\n  //         method: 'POST',\n  //         headers: { 'Content-Type': 'application/json' }\n  //     })\n  //         .then(response => {\n  //             if (!response.ok) {\n  //                 throw new Error('Network response was not ok');\n  //             }\n  //             return response.json();\n  //         })\n  //         .then(data => {\n  //             setSavedScenarios(data[0]);\n  //             setSavedDealSets(data[1]);\n  //         })\n  //         .catch(error => console.error('Error fetching data:', error));\n  // }, []);\n  //\n  // const handleTabClick = (tabName) => {\n  //     setActiveTab(tabName);\n  // };\n  //\n  // return (\n  //     <div className=\"profile-view-container\">\n  //         <div className=\"left-border\"></div>\n  //         <div className=\"profile-view\">\n  //             <div className=\"saved-content-outer-container\">\n  //                 <div className=\"profile-saved-tabs\">\n  //                     <button onClick={() => handleTabClick('scenarios')}\n  //                             className={`saved-tab-button ${activeTab === 'scenarios' ? 'active' : ''}`}>\n  //                         CONSTRAINTS\n  //                     </button>\n  //                     <button onClick={() => handleTabClick('dealSets')}\n  //                             className={`saved-tab-button ${activeTab === 'dealSets' ? 'active' : ''}`}>\n  //                         DEAL SETS\n  //                     </button>\n  //                 </div>\n  //                 <div className=\"saved-content-container\">\n  //                     {activeTab === 'scenarios' && (\n  //                         <div className=\"saved-dynamic saved-constraints-dynamic\">\n  //                             {savedScenarios.length > 0 ? (\n  //                                 <div className=\"scrollable-list\">\n  //                                     {savedScenarios.map(scenario => (\n  //                                         <div key={scenario.id} className=\"saved-item saved-constraint\">\n  //                                             <button className=\"saved-item-button\">\n  //                                                 {scenario.name}\n  //                                             </button>\n  //                                             {/* Implement deletion similarly to your ASP.NET MVC setup */}\n  //                                         </div>\n  //                                     ))}\n  //                                 </div>\n  //                             ) : <p>No saved constraints found.</p>}\n  //                         </div>\n  //                     )}\n  //                     {activeTab === 'dealSets' && (\n  //                         <div className=\"saved-dynamic saved-dealsets-dynamic\">\n  //                             {savedDealSets.length > 0 ? (\n  //                                 <div className=\"scrollable-list\">\n  //                                     {savedDealSets.map(dealSet => (\n  //                                         <div key={dealSet.id} className=\"saved-item saved-dealset\">\n  //                                             <button className=\"saved-item-button\">\n  //                                                 {dealSet.name}\n  //                                             </button>\n  //                                             {/* Implement deletion similarly to your ASP.NET MVC setup */}\n  //                                         </div>\n  //                                     ))}\n  //                                 </div>\n  //                             ) : <p>No saved deal sets found.</p>}\n  //                         </div>\n  //                     )}\n  //                 </div>\n  //             </div>\n  //         </div>\n  //         <div className=\"right-border\"></div>\n  //     </div>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Saved Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This is the Saved Items page.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_c = SavedItemsPage;\nexport default SavedItemsPage;\nvar _c;\n$RefreshReg$(_c, \"SavedItemsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SavedItemsPage","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/SavedItemsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction SavedItemsPage() {\n    // const [savedScenarios, setSavedScenarios] = useState([]);\n    // const [savedDealSets, setSavedDealSets] = useState([]);\n    // const [activeTab, setActiveTab] = useState('constraints');\n    //\n    // useEffect(() => {\n    //     fetch('http://localhost:5015/ProfileData/GetSavedContent', {\n    //         method: 'POST',\n    //         headers: { 'Content-Type': 'application/json' }\n    //     })\n    //         .then(response => {\n    //             if (!response.ok) {\n    //                 throw new Error('Network response was not ok');\n    //             }\n    //             return response.json();\n    //         })\n    //         .then(data => {\n    //             setSavedScenarios(data[0]);\n    //             setSavedDealSets(data[1]);\n    //         })\n    //         .catch(error => console.error('Error fetching data:', error));\n    // }, []);\n    //\n    // const handleTabClick = (tabName) => {\n    //     setActiveTab(tabName);\n    // };\n    //\n    // return (\n    //     <div className=\"profile-view-container\">\n    //         <div className=\"left-border\"></div>\n    //         <div className=\"profile-view\">\n    //             <div className=\"saved-content-outer-container\">\n    //                 <div className=\"profile-saved-tabs\">\n    //                     <button onClick={() => handleTabClick('scenarios')}\n    //                             className={`saved-tab-button ${activeTab === 'scenarios' ? 'active' : ''}`}>\n    //                         CONSTRAINTS\n    //                     </button>\n    //                     <button onClick={() => handleTabClick('dealSets')}\n    //                             className={`saved-tab-button ${activeTab === 'dealSets' ? 'active' : ''}`}>\n    //                         DEAL SETS\n    //                     </button>\n    //                 </div>\n    //                 <div className=\"saved-content-container\">\n    //                     {activeTab === 'scenarios' && (\n    //                         <div className=\"saved-dynamic saved-constraints-dynamic\">\n    //                             {savedScenarios.length > 0 ? (\n    //                                 <div className=\"scrollable-list\">\n    //                                     {savedScenarios.map(scenario => (\n    //                                         <div key={scenario.id} className=\"saved-item saved-constraint\">\n    //                                             <button className=\"saved-item-button\">\n    //                                                 {scenario.name}\n    //                                             </button>\n    //                                             {/* Implement deletion similarly to your ASP.NET MVC setup */}\n    //                                         </div>\n    //                                     ))}\n    //                                 </div>\n    //                             ) : <p>No saved constraints found.</p>}\n    //                         </div>\n    //                     )}\n    //                     {activeTab === 'dealSets' && (\n    //                         <div className=\"saved-dynamic saved-dealsets-dynamic\">\n    //                             {savedDealSets.length > 0 ? (\n    //                                 <div className=\"scrollable-list\">\n    //                                     {savedDealSets.map(dealSet => (\n    //                                         <div key={dealSet.id} className=\"saved-item saved-dealset\">\n    //                                             <button className=\"saved-item-button\">\n    //                                                 {dealSet.name}\n    //                                             </button>\n    //                                             {/* Implement deletion similarly to your ASP.NET MVC setup */}\n    //                                         </div>\n    //                                     ))}\n    //                                 </div>\n    //                             ) : <p>No saved deal sets found.</p>}\n    //                         </div>\n    //                     )}\n    //                 </div>\n    //             </div>\n    //         </div>\n    //         <div className=\"right-border\"></div>\n    //     </div>\n    // );\n    \n    return (\n        <div>\n            <h1>Saved Items</h1>\n            <p>This is the Saved Items page.</p>\n        </div>\n    );\n  }\n  \nexport default SavedItemsPage;\n  "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EACtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBN,OAAA;MAAAE,QAAA,EAAG;IAA6B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEZ;AAACC,EAAA,GAxFMN,cAAc;AA0FvB,eAAeA,cAAc;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}