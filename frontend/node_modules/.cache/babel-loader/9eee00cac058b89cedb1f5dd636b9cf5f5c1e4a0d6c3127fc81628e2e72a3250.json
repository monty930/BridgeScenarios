{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../../css/Scenarios.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Scenarios() {\n  _s();\n  const location = useLocation();\n  const pageLayoutRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [leftWidthRatio, setLeftWidthRatio] = useState(0.5);\n  const dividerWidth = 10;\n  const minWidth = 400;\n  useEffect(() => {\n    function updatePanelWidths() {\n      if (!pageLayoutRef.current) return;\n      const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n      const totalWidth = pageLayoutRect.width;\n      if (window.innerWidth <= 800) {\n        pageLayoutRef.current.style.gridTemplateColumns = `1fr ${dividerWidth}px 1fr`;\n        return;\n      }\n      let leftWidth = totalWidth * leftWidthRatio - dividerWidth / 2;\n      let rightWidth = totalWidth - leftWidth - dividerWidth / 2;\n      if (leftWidth < minWidth) {\n        leftWidth = minWidth;\n        rightWidth = totalWidth - leftWidth - dividerWidth / 2;\n      } else if (rightWidth < minWidth) {\n        rightWidth = minWidth;\n        leftWidth = totalWidth - rightWidth - dividerWidth / 2;\n      }\n      pageLayoutRef.current.style.gridTemplateColumns = `${leftWidth}px ${dividerWidth}px ${rightWidth}px`;\n    }\n    function handleMouseMove(e) {\n      if (!isDragging || window.innerWidth <= 800) return;\n      c;\n      const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n      let newLeftWidth = e.clientX - pageLayoutRect.left - dividerWidth / 2;\n      let newRightWidth = pageLayoutRect.width - newLeftWidth - dividerWidth;\n      const totalWidth = pageLayoutRect.width;\n      let newLeftWidthRatio = newLeftWidth / totalWidth;\n      if (newLeftWidth >= minWidth && newRightWidth >= minWidth) {\n        setLeftWidthRatio(newLeftWidthRatio);\n      }\n    }\n    function handleMouseUp() {\n      setIsDragging(false);\n    }\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    window.addEventListener('resize', updatePanelWidths);\n    updatePanelWidths();\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('resize', updatePanelWidths);\n    };\n  }, [isDragging, leftWidthRatio]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: pageLayoutRef,\n    className: \"ScenariosPage\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"left-partial\",\n      children: \"Left Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Divider\",\n      onMouseDown: () => setIsDragging(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"right-partial\",\n      children: \"Right Panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(Scenarios, \"sFWbRonA2HrEVfp0NnzzKunGrvA=\", false, function () {\n  return [useLocation];\n});\n_c = Scenarios;\nexport default Scenarios;\nvar _c;\n$RefreshReg$(_c, \"Scenarios\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useLocation","jsxDEV","_jsxDEV","Scenarios","_s","location","pageLayoutRef","isDragging","setIsDragging","leftWidthRatio","setLeftWidthRatio","dividerWidth","minWidth","updatePanelWidths","current","pageLayoutRect","getBoundingClientRect","totalWidth","width","window","innerWidth","style","gridTemplateColumns","leftWidth","rightWidth","handleMouseMove","e","c","newLeftWidth","clientX","left","newRightWidth","newLeftWidthRatio","handleMouseUp","document","addEventListener","removeEventListener","ref","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onMouseDown","_c","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/Multi2Diamonds/frontend/src/js/scenarios/Scenarios.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport '../../css/Scenarios.css';\n\nfunction Scenarios() {\n  const location = useLocation();\n  const pageLayoutRef = useRef(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [leftWidthRatio, setLeftWidthRatio] = useState(0.5);\n  const dividerWidth = 10;\n  const minWidth = 400;\n\n  useEffect(() => {\n    function updatePanelWidths() {\n      if (!pageLayoutRef.current) return;\n\n      const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n      const totalWidth = pageLayoutRect.width;\n\n      if (window.innerWidth <= 800) {\n        pageLayoutRef.current.style.gridTemplateColumns = `1fr ${dividerWidth}px 1fr`;\n        return;\n      }\n\n      let leftWidth = totalWidth * leftWidthRatio - dividerWidth / 2;\n      let rightWidth = totalWidth - leftWidth - dividerWidth / 2;\n\n      if (leftWidth < minWidth) {\n        leftWidth = minWidth;\n        rightWidth = totalWidth - leftWidth - dividerWidth / 2;\n      } else if (rightWidth < minWidth) {\n        rightWidth = minWidth;\n        leftWidth = totalWidth - rightWidth - dividerWidth / 2;\n      }\n\n      pageLayoutRef.current.style.gridTemplateColumns = `${leftWidth}px ${dividerWidth}px ${rightWidth}px`;\n    }\n\n    function handleMouseMove(e) {\n      if (!isDragging || window.innerWidth <= 800) return;\n\n    c\n\n      const pageLayoutRect = pageLayoutRef.current.getBoundingClientRect();\n      let newLeftWidth = e.clientX - pageLayoutRect.left - dividerWidth / 2;\n      let newRightWidth = pageLayoutRect.width - newLeftWidth - dividerWidth;\n\n      const totalWidth = pageLayoutRect.width;\n      let newLeftWidthRatio = newLeftWidth / totalWidth;\n\n      if (newLeftWidth >= minWidth && newRightWidth >= minWidth) {\n        setLeftWidthRatio(newLeftWidthRatio);\n      }\n    }\n\n    function handleMouseUp() {\n      setIsDragging(false);\n    }\n\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    window.addEventListener('resize', updatePanelWidths);\n\n    updatePanelWidths();\n\n    return () => {\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      window.removeEventListener('resize', updatePanelWidths);\n    };\n  }, [isDragging, leftWidthRatio]);\n\n  return (\n    <div ref={pageLayoutRef} className=\"ScenariosPage\">\n      <div id=\"left-partial\">Left Panel</div>\n      <div\n        className=\"Divider\"\n        onMouseDown={() => setIsDragging(true)}\n      ></div>\n      <div id=\"right-partial\">Right Panel</div>\n    </div>\n  );\n}\n\nexport default Scenarios;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,aAAa,GAAGP,MAAM,CAAC,IAAI,CAAC;EAClC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,GAAG,CAAC;EACzD,MAAMc,YAAY,GAAG,EAAE;EACvB,MAAMC,QAAQ,GAAG,GAAG;EAEpBd,SAAS,CAAC,MAAM;IACd,SAASe,iBAAiBA,CAAA,EAAG;MAC3B,IAAI,CAACP,aAAa,CAACQ,OAAO,EAAE;MAE5B,MAAMC,cAAc,GAAGT,aAAa,CAACQ,OAAO,CAACE,qBAAqB,CAAC,CAAC;MACpE,MAAMC,UAAU,GAAGF,cAAc,CAACG,KAAK;MAEvC,IAAIC,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;QAC5Bd,aAAa,CAACQ,OAAO,CAACO,KAAK,CAACC,mBAAmB,GAAI,OAAMX,YAAa,QAAO;QAC7E;MACF;MAEA,IAAIY,SAAS,GAAGN,UAAU,GAAGR,cAAc,GAAGE,YAAY,GAAG,CAAC;MAC9D,IAAIa,UAAU,GAAGP,UAAU,GAAGM,SAAS,GAAGZ,YAAY,GAAG,CAAC;MAE1D,IAAIY,SAAS,GAAGX,QAAQ,EAAE;QACxBW,SAAS,GAAGX,QAAQ;QACpBY,UAAU,GAAGP,UAAU,GAAGM,SAAS,GAAGZ,YAAY,GAAG,CAAC;MACxD,CAAC,MAAM,IAAIa,UAAU,GAAGZ,QAAQ,EAAE;QAChCY,UAAU,GAAGZ,QAAQ;QACrBW,SAAS,GAAGN,UAAU,GAAGO,UAAU,GAAGb,YAAY,GAAG,CAAC;MACxD;MAEAL,aAAa,CAACQ,OAAO,CAACO,KAAK,CAACC,mBAAmB,GAAI,GAAEC,SAAU,MAAKZ,YAAa,MAAKa,UAAW,IAAG;IACtG;IAEA,SAASC,eAAeA,CAACC,CAAC,EAAE;MAC1B,IAAI,CAACnB,UAAU,IAAIY,MAAM,CAACC,UAAU,IAAI,GAAG,EAAE;MAE/CO,CAAC;MAEC,MAAMZ,cAAc,GAAGT,aAAa,CAACQ,OAAO,CAACE,qBAAqB,CAAC,CAAC;MACpE,IAAIY,YAAY,GAAGF,CAAC,CAACG,OAAO,GAAGd,cAAc,CAACe,IAAI,GAAGnB,YAAY,GAAG,CAAC;MACrE,IAAIoB,aAAa,GAAGhB,cAAc,CAACG,KAAK,GAAGU,YAAY,GAAGjB,YAAY;MAEtE,MAAMM,UAAU,GAAGF,cAAc,CAACG,KAAK;MACvC,IAAIc,iBAAiB,GAAGJ,YAAY,GAAGX,UAAU;MAEjD,IAAIW,YAAY,IAAIhB,QAAQ,IAAImB,aAAa,IAAInB,QAAQ,EAAE;QACzDF,iBAAiB,CAACsB,iBAAiB,CAAC;MACtC;IACF;IAEA,SAASC,aAAaA,CAAA,EAAG;MACvBzB,aAAa,CAAC,KAAK,CAAC;IACtB;IAEA0B,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEV,eAAe,CAAC;IACvDS,QAAQ,CAACC,gBAAgB,CAAC,SAAS,EAAEF,aAAa,CAAC;IACnDd,MAAM,CAACgB,gBAAgB,CAAC,QAAQ,EAAEtB,iBAAiB,CAAC;IAEpDA,iBAAiB,CAAC,CAAC;IAEnB,OAAO,MAAM;MACXqB,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEX,eAAe,CAAC;MAC1DS,QAAQ,CAACE,mBAAmB,CAAC,SAAS,EAAEH,aAAa,CAAC;MACtDd,MAAM,CAACiB,mBAAmB,CAAC,QAAQ,EAAEvB,iBAAiB,CAAC;IACzD,CAAC;EACH,CAAC,EAAE,CAACN,UAAU,EAAEE,cAAc,CAAC,CAAC;EAEhC,oBACEP,OAAA;IAAKmC,GAAG,EAAE/B,aAAc;IAACgC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAChDrC,OAAA;MAAKsC,EAAE,EAAC,cAAc;MAAAD,QAAA,EAAC;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvC1C,OAAA;MACEoC,SAAS,EAAC,SAAS;MACnBO,WAAW,EAAEA,CAAA,KAAMrC,aAAa,CAAC,IAAI;IAAE;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACP1C,OAAA;MAAKsC,EAAE,EAAC,eAAe;MAAAD,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV;AAACxC,EAAA,CA9EQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAA8C,EAAA,GADrB3C,SAAS;AAgFlB,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}