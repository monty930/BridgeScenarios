{"ast":null,"code":"var _jsxFileName = \"/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const validateSession = async () => {\n      console.log('here val');\n      try {\n        const response = await fetch('http://localhost:5015/Account/ValidateSession', {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.status === 200) {\n          setIsAuthenticated(true);\n        } else {\n          setIsAuthenticated(false);\n        }\n      } catch (error) {\n        console.error('Session validation failed:', error);\n        setIsAuthenticated(false);\n        setError('Network error, unable to connect to the server.');\n        let errorCode = error.response.status;\n      }\n    };\n    validateSession();\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-page\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this); // Custom error message or link to a custom error page component\n  }\n\n  // Your normal component rendering\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isAuthenticated ? \"Welcome back!\" : \"You are not logged in.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n  const login = () => {\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"L8bj2w+es5NwgEib1R9aZJ5S8sM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","error","setError","validateSession","console","log","response","fetch","method","credentials","status","errorCode","className","fileName","_jsxFileName","lineNumber","columnNumber","login","logout","Provider","value","_c","useAuth","_s2","$RefreshReg$"],"sources":["/home/monty/Home/Studia/mosty/WebApp/BridgeScenarios/frontend/src/js/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n    const [error, setError] = useState(null);\n    \n    useEffect(() => {\n        const validateSession = async () => {\n            console.log('here val');\n            try {\n                const response = await fetch('http://localhost:5015/Account/ValidateSession', {\n                    method: 'GET',\n                    credentials: 'include',\n                });\n                if (response.status === 200) {\n                    setIsAuthenticated(true);\n                } else {\n                    setIsAuthenticated(false);\n                }\n            } catch (error) {\n                console.error('Session validation failed:', error);\n                setIsAuthenticated(false);\n                setError('Network error, unable to connect to the server.');\n                let errorCode = error.response.status;\n            }\n        };\n\n        validateSession();\n    }, []);\n\n    if (error) {\n        return <div className=\"error-page\">Error: {error}</div>; // Custom error message or link to a custom error page component\n    }\n\n    // Your normal component rendering\n    return (\n        <div>\n            {isAuthenticated ? \"Welcome back!\" : \"You are not logged in.\"}\n        </div>\n    );\n\n    const login = () => {\n        setIsAuthenticated(true);\n    };\n\n    const logout = () => {\n        setIsAuthenticated(false);\n    };\n\n    return (\n        <AuthContext.Provider value={{ isAuthenticated, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => useContext(AuthContext);\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExCC,SAAS,CAAC,MAAM;IACZ,MAAMY,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChCC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;UAC1EC,MAAM,EAAE,KAAK;UACbC,WAAW,EAAE;QACjB,CAAC,CAAC;QACF,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UACzBV,kBAAkB,CAAC,IAAI,CAAC;QAC5B,CAAC,MAAM;UACHA,kBAAkB,CAAC,KAAK,CAAC;QAC7B;MACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZG,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDD,kBAAkB,CAAC,KAAK,CAAC;QACzBE,QAAQ,CAAC,iDAAiD,CAAC;QAC3D,IAAIS,SAAS,GAAGV,KAAK,CAACK,QAAQ,CAACI,MAAM;MACzC;IACJ,CAAC;IAEDP,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,KAAK,EAAE;IACP,oBAAOP,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAf,QAAA,GAAC,SAAO,EAACI,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,CAAC,CAAC;EAC7D;;EAEA;EACA,oBACItB,OAAA;IAAAG,QAAA,EACKE,eAAe,GAAG,eAAe,GAAG;EAAwB;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;EAGV,MAAMC,KAAK,GAAGA,CAAA,KAAM;IAChBjB,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMkB,MAAM,GAAGA,CAAA,KAAM;IACjBlB,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,oBACIN,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAAErB,eAAe;MAAEkB,KAAK;MAAEC;IAAO,CAAE;IAAArB,QAAA,EAC3DA;EAAQ;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAClB,EAAA,CApDWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAsDzB,OAAO,MAAM0B,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMlC,UAAU,CAACM,WAAW,CAAC;AAAA;AAAC4B,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}