-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Bridgechai/Par.y
-----------------------------------------------------------------------------


rule 44 is unused

terminal 'int' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg_internal -> Prog                      (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Prog -> ListTopDef                                 (4)
	TopDef -> 'predeal' '=' '{' ListHandPredeal '}'    (5)
	TopDef -> 'final' '=' Expr                         (6)
	TopDef -> ShapeDef                                 (7)
	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal ')'   (8)
	TopDef -> Ident '=' 'holding(' HoldingExpr ')'     (9)
	ListTopDef ->                                      (10)
	ListTopDef -> TopDef                               (11)
	ListTopDef -> TopDef ';' ListTopDef                (12)
	ListHandPredeal ->                                 (13)
	ListHandPredeal -> HandPredeal                     (14)
	ListHandPredeal -> HandPredeal ',' ListHandPredeal   (15)
	HandPredeal -> Hand ':' HandFeature                (16)
	HandFeature -> String                              (17)
	HandFeature -> '(' Ident ')'                       (18)
	HandFeature -> '(' Ident ',' Ident ',' Integer ')'   (19)
	HandFeature -> '(' Ident ',' Ident ',' Value ')'   (20)
	Value -> '(' Integer ',' Integer ')'               (21)
	ShapeDef -> Ident '=' '(' ShapeExpr ')'            (22)
	ShapeDef -> Ident '=' ListShape                    (23)
	EvalVal -> Integer                                 (24)
	ListEvalVal ->                                     (25)
	ListEvalVal -> EvalVal                             (26)
	ListEvalVal -> EvalVal ',' ListEvalVal             (27)
	Shape -> ShapeOk                                   (28)
	Shape -> ShapeNeg                                  (29)
	ShapeOk -> '[' ListSuitCount ']'                   (30)
	ShapeNeg -> '!' ShapeOk                            (31)
	ListShape ->                                       (32)
	ListShape -> Shape                                 (33)
	ListShape -> Shape '+' ListShape                   (34)
	SuitCount -> SuitInt                               (35)
	SuitCount -> '(' ListSuitInt ')'                   (36)
	SuitInt -> Integer                                 (37)
	ListSuitCount ->                                   (38)
	ListSuitCount -> SuitCount                         (39)
	ListSuitCount -> SuitCount ';' ListSuitCount       (40)
	ListSuitInt ->                                     (41)
	ListSuitInt -> SuitInt                             (42)
	ListSuitInt -> SuitInt ';' ListSuitInt             (43)
	Type -> 'int'                                      (44)
	Expr6 -> Hand '.' Ident                            (45)
	Expr6 -> Integer                                   (46)
	Expr6 -> 'true'                                    (47)
	Expr6 -> 'false'                                   (48)
	Expr6 -> '(' Expr ')'                              (49)
	Expr5 -> 'not' Expr6                               (50)
	Expr5 -> Expr6                                     (51)
	Expr2 -> Expr2 RelOp Expr3                         (52)
	Expr2 -> Expr3                                     (53)
	Expr1 -> Expr2 'and' Expr1                         (54)
	Expr1 -> Expr2                                     (55)
	Expr -> Expr1 'or' Expr                            (56)
	Expr -> Expr1                                      (57)
	Expr3 -> Expr4                                     (58)
	Expr4 -> Expr5                                     (59)
	Hand -> 'N'                                        (60)
	Hand -> 'E'                                        (61)
	Hand -> 'W'                                        (62)
	Hand -> 'S'                                        (63)
	ShapeExpr6 -> SuitLit                              (64)
	ShapeExpr6 -> Integer                              (65)
	ShapeExpr6 -> '(' ShapeExpr ')'                    (66)
	ShapeExpr5 -> 'not' ShapeExpr6                     (67)
	ShapeExpr5 -> ShapeExpr6                           (68)
	ShapeExpr2 -> ShapeExpr2 RelOp ShapeExpr3          (69)
	ShapeExpr2 -> ShapeExpr3                           (70)
	ShapeExpr1 -> ShapeExpr2 'and' ShapeExpr1          (71)
	ShapeExpr1 -> ShapeExpr2                           (72)
	ShapeExpr -> ShapeExpr1 'or' ShapeExpr             (73)
	ShapeExpr -> ShapeExpr1                            (74)
	ShapeExpr3 -> ShapeExpr4                           (75)
	ShapeExpr4 -> ShapeExpr5                           (76)
	SuitLit -> 's'                                     (77)
	SuitLit -> 'h'                                     (78)
	SuitLit -> 'd'                                     (79)
	SuitLit -> 'c'                                     (80)
	HoldingExpr5 -> 'length'                           (81)
	HoldingExpr5 -> Integer                            (82)
	HoldingExpr5 -> Card                               (83)
	HoldingExpr5 -> '(' HoldingExpr ')'                (84)
	HoldingExpr4 -> 'not' HoldingExpr5                 (85)
	HoldingExpr4 -> HoldingExpr5                       (86)
	HoldingExpr2 -> HoldingExpr2 RelOp HoldingExpr3    (87)
	HoldingExpr2 -> HoldingExpr3                       (88)
	HoldingExpr1 -> HoldingExpr2 'and' HoldingExpr1    (89)
	HoldingExpr1 -> HoldingExpr2                       (90)
	HoldingExpr -> HoldingExpr1 'or' HoldingExpr       (91)
	HoldingExpr -> HoldingExpr1                        (92)
	HoldingExpr3 -> HoldingExpr4                       (93)
	Card -> '[A]'                                      (94)
	Card -> '[K]'                                      (95)
	Card -> '[Q]'                                      (96)
	Card -> '[J]'                                      (97)
	Card -> '[T]'                                      (98)
	Card -> '[9]'                                      (99)
	Card -> '[8]'                                      (100)
	Card -> '[7]'                                      (101)
	Card -> '[6]'                                      (102)
	Card -> '[5]'                                      (103)
	Card -> '[4]'                                      (104)
	Card -> '[3]'                                      (105)
	Card -> '[2]'                                      (106)
	RelOp -> '<'                                       (107)
	RelOp -> '<='                                      (108)
	RelOp -> '>'                                       (109)
	RelOp -> '>='                                      (110)
	RelOp -> '=='                                      (111)
	RelOp -> '!='                                      (112)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	':'            { PT _ (TS _ 8) }
	';'            { PT _ (TS _ 9) }
	'<'            { PT _ (TS _ 10) }
	'<='           { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'>'            { PT _ (TS _ 14) }
	'>='           { PT _ (TS _ 15) }
	'E'            { PT _ (TS _ 16) }
	'N'            { PT _ (TS _ 17) }
	'S'            { PT _ (TS _ 18) }
	'W'            { PT _ (TS _ 19) }
	'['            { PT _ (TS _ 20) }
	'[2]'          { PT _ (TS _ 21) }
	'[3]'          { PT _ (TS _ 22) }
	'[4]'          { PT _ (TS _ 23) }
	'[5]'          { PT _ (TS _ 24) }
	'[6]'          { PT _ (TS _ 25) }
	'[7]'          { PT _ (TS _ 26) }
	'[8]'          { PT _ (TS _ 27) }
	'[9]'          { PT _ (TS _ 28) }
	'[A]'          { PT _ (TS _ 29) }
	'[J]'          { PT _ (TS _ 30) }
	'[K]'          { PT _ (TS _ 31) }
	'[Q]'          { PT _ (TS _ 32) }
	'[T]'          { PT _ (TS _ 33) }
	']'            { PT _ (TS _ 34) }
	'and'          { PT _ (TS _ 35) }
	'c'            { PT _ (TS _ 36) }
	'd'            { PT _ (TS _ 37) }
	'evaluator'    { PT _ (TS _ 38) }
	'false'        { PT _ (TS _ 39) }
	'final'        { PT _ (TS _ 40) }
	'h'            { PT _ (TS _ 41) }
	'holding('     { PT _ (TS _ 42) }
	'int'          { PT _ (TS _ 43) }
	'length'       { PT _ (TS _ 44) }
	'not'          { PT _ (TS _ 45) }
	'or'           { PT _ (TS _ 46) }
	'predeal'      { PT _ (TS _ 47) }
	's'            { PT _ (TS _ 48) }
	'true'         { PT _ (TS _ 49) }
	'{'            { PT _ (TS _ 50) }
	'}'            { PT _ (TS _ 51) }
	L_Ident        { PT _ (TV _) }
	L_integ        { PT _ (TI _) }
	L_quoted       { PT _ (TL _) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg_internal rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Prog            rule  4
	TopDef          rules 5, 6, 7, 8, 9
	ListTopDef      rules 10, 11, 12
	ListHandPredeal rules 13, 14, 15
	HandPredeal     rule  16
	HandFeature     rules 17, 18, 19, 20
	Value           rule  21
	ShapeDef        rules 22, 23
	EvalVal         rule  24
	ListEvalVal     rules 25, 26, 27
	Shape           rules 28, 29
	ShapeOk         rule  30
	ShapeNeg        rule  31
	ListShape       rules 32, 33, 34
	SuitCount       rules 35, 36
	SuitInt         rule  37
	ListSuitCount   rules 38, 39, 40
	ListSuitInt     rules 41, 42, 43
	Type            rule  44
	Expr6           rules 45, 46, 47, 48, 49
	Expr5           rules 50, 51
	Expr2           rules 52, 53
	Expr1           rules 54, 55
	Expr            rules 56, 57
	Expr3           rule  58
	Expr4           rule  59
	Hand            rules 60, 61, 62, 63
	ShapeExpr6      rules 64, 65, 66
	ShapeExpr5      rules 67, 68
	ShapeExpr2      rules 69, 70
	ShapeExpr1      rules 71, 72
	ShapeExpr       rules 73, 74
	ShapeExpr3      rule  75
	ShapeExpr4      rule  76
	SuitLit         rules 77, 78, 79, 80
	HoldingExpr5    rules 81, 82, 83, 84
	HoldingExpr4    rules 85, 86
	HoldingExpr2    rules 87, 88
	HoldingExpr1    rules 89, 90
	HoldingExpr     rules 91, 92
	HoldingExpr3    rule  93
	Card            rules 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106
	RelOp           rules 107, 108, 109, 110, 111, 112

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'final'        shift, and enter state 8
	'predeal'      shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 10

	Ident          goto state 3
	Prog           goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	ShapeDef       goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	')'            reduce using rule 1
	','            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	TopDef -> Ident . '=' 'evaluator' '(' ListEvalVal ')'    (rule 8)
	TopDef -> Ident . '=' 'holding(' HoldingExpr ')'    (rule 9)
	ShapeDef -> Ident . '=' '(' ShapeExpr ')'           (rule 22)
	ShapeDef -> Ident . '=' ListShape                   (rule 23)

	'='            shift, and enter state 13


State 4

	%start_pProg_internal -> Prog .                     (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 11)
	ListTopDef -> TopDef . ';' ListTopDef               (rule 12)

	';'            shift, and enter state 12
	%eof           reduce using rule 11


State 6

	Prog -> ListTopDef .                                (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> ShapeDef .                                (rule 7)

	';'            reduce using rule 7
	%eof           reduce using rule 7


State 8

	TopDef -> 'final' . '=' Expr                        (rule 6)

	'='            shift, and enter state 11


State 9

	TopDef -> 'predeal' . '=' '{' ListHandPredeal '}'    (rule 5)

	'='            shift, and enter state 10


State 10

	TopDef -> 'predeal' '=' . '{' ListHandPredeal '}'    (rule 5)

	'{'            shift, and enter state 42


State 11

	TopDef -> 'final' '=' . Expr                        (rule 6)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'not'          shift, and enter state 39
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 25
	Expr5          goto state 26
	Expr2          goto state 27
	Expr1          goto state 28
	Expr           goto state 29
	Expr3          goto state 30
	Expr4          goto state 31
	Hand           goto state 32

State 12

	ListTopDef -> TopDef ';' . ListTopDef               (rule 12)

	'final'        shift, and enter state 8
	'predeal'      shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 10

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 23
	ShapeDef       goto state 7

State 13

	TopDef -> Ident '=' . 'evaluator' '(' ListEvalVal ')'    (rule 8)
	TopDef -> Ident '=' . 'holding(' HoldingExpr ')'    (rule 9)
	ShapeDef -> Ident '=' . '(' ShapeExpr ')'           (rule 22)
	ShapeDef -> Ident '=' . ListShape                   (rule 23)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	';'            reduce using rule 32
	'['            shift, and enter state 20
	'evaluator'    shift, and enter state 21
	'holding('     shift, and enter state 22
	%eof           reduce using rule 32

	Shape          goto state 14
	ShapeOk        goto state 15
	ShapeNeg       goto state 16
	ListShape      goto state 17

State 14

	ListShape -> Shape .                                (rule 33)
	ListShape -> Shape . '+' ListShape                  (rule 34)

	'+'            shift, and enter state 104
	';'            reduce using rule 33
	%eof           reduce using rule 33


State 15

	Shape -> ShapeOk .                                  (rule 28)

	'+'            reduce using rule 28
	';'            reduce using rule 28
	%eof           reduce using rule 28


State 16

	Shape -> ShapeNeg .                                 (rule 29)

	'+'            reduce using rule 29
	';'            reduce using rule 29
	%eof           reduce using rule 29


State 17

	ShapeDef -> Ident '=' ListShape .                   (rule 23)

	';'            reduce using rule 23
	%eof           reduce using rule 23


State 18

	ShapeNeg -> '!' . ShapeOk                           (rule 31)

	'['            shift, and enter state 20

	ShapeOk        goto state 103

State 19

	ShapeDef -> Ident '=' '(' . ShapeExpr ')'           (rule 22)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	'not'          shift, and enter state 101
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 89
	ShapeExpr5     goto state 90
	ShapeExpr2     goto state 91
	ShapeExpr1     goto state 92
	ShapeExpr      goto state 93
	ShapeExpr3     goto state 94
	ShapeExpr4     goto state 95
	SuitLit        goto state 96

State 20

	ShapeOk -> '[' . ListSuitCount ']'                  (rule 30)

	'('            shift, and enter state 87
	']'            reduce using rule 38
	L_integ        shift, and enter state 41

	Integer        goto state 83
	SuitCount      goto state 84
	SuitInt        goto state 85
	ListSuitCount  goto state 86

State 21

	TopDef -> Ident '=' 'evaluator' . '(' ListEvalVal ')'    (rule 8)

	'('            shift, and enter state 82


State 22

	TopDef -> Ident '=' 'holding(' . HoldingExpr ')'    (rule 9)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	'not'          shift, and enter state 81
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 59
	HoldingExpr4   goto state 60
	HoldingExpr2   goto state 61
	HoldingExpr1   goto state 62
	HoldingExpr    goto state 63
	HoldingExpr3   goto state 64
	Card           goto state 65

State 23

	ListTopDef -> TopDef ';' ListTopDef .               (rule 12)

	%eof           reduce using rule 12


State 24

	Expr6 -> Integer .                                  (rule 46)

	'!='           reduce using rule 46
	')'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46
	%eof           reduce using rule 46


State 25

	Expr5 -> Expr6 .                                    (rule 51)

	'!='           reduce using rule 51
	')'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	%eof           reduce using rule 51


State 26

	Expr4 -> Expr5 .                                    (rule 59)

	'!='           reduce using rule 59
	')'            reduce using rule 59
	';'            reduce using rule 59
	'<'            reduce using rule 59
	'<='           reduce using rule 59
	'=='           reduce using rule 59
	'>'            reduce using rule 59
	'>='           reduce using rule 59
	'and'          reduce using rule 59
	'or'           reduce using rule 59
	%eof           reduce using rule 59


State 27

	Expr2 -> Expr2 . RelOp Expr3                        (rule 52)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 54)
	Expr1 -> Expr2 .                                    (rule 55)

	'!='           shift, and enter state 51
	')'            reduce using rule 55
	';'            reduce using rule 55
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56
	'and'          shift, and enter state 57
	'or'           reduce using rule 55
	%eof           reduce using rule 55

	RelOp          goto state 50

State 28

	Expr -> Expr1 . 'or' Expr                           (rule 56)
	Expr -> Expr1 .                                     (rule 57)

	')'            reduce using rule 57
	';'            reduce using rule 57
	'or'           shift, and enter state 49
	%eof           reduce using rule 57


State 29

	TopDef -> 'final' '=' Expr .                        (rule 6)

	';'            reduce using rule 6
	%eof           reduce using rule 6


State 30

	Expr2 -> Expr3 .                                    (rule 53)

	'!='           reduce using rule 53
	')'            reduce using rule 53
	';'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=='           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'and'          reduce using rule 53
	'or'           reduce using rule 53
	%eof           reduce using rule 53


State 31

	Expr3 -> Expr4 .                                    (rule 58)

	'!='           reduce using rule 58
	')'            reduce using rule 58
	';'            reduce using rule 58
	'<'            reduce using rule 58
	'<='           reduce using rule 58
	'=='           reduce using rule 58
	'>'            reduce using rule 58
	'>='           reduce using rule 58
	'and'          reduce using rule 58
	'or'           reduce using rule 58
	%eof           reduce using rule 58


State 32

	Expr6 -> Hand . '.' Ident                           (rule 45)

	'.'            shift, and enter state 48


State 33

	Expr6 -> '(' . Expr ')'                             (rule 49)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'not'          shift, and enter state 39
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 25
	Expr5          goto state 26
	Expr2          goto state 27
	Expr1          goto state 28
	Expr           goto state 47
	Expr3          goto state 30
	Expr4          goto state 31
	Hand           goto state 32

State 34

	Hand -> 'E' .                                       (rule 61)

	'.'            reduce using rule 61
	':'            reduce using rule 61


State 35

	Hand -> 'N' .                                       (rule 60)

	'.'            reduce using rule 60
	':'            reduce using rule 60


State 36

	Hand -> 'S' .                                       (rule 63)

	'.'            reduce using rule 63
	':'            reduce using rule 63


State 37

	Hand -> 'W' .                                       (rule 62)

	'.'            reduce using rule 62
	':'            reduce using rule 62


State 38

	Expr6 -> 'false' .                                  (rule 48)

	'!='           reduce using rule 48
	')'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48
	%eof           reduce using rule 48


State 39

	Expr5 -> 'not' . Expr6                              (rule 50)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 46
	Hand           goto state 32

State 40

	Expr6 -> 'true' .                                   (rule 47)

	'!='           reduce using rule 47
	')'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47
	%eof           reduce using rule 47


State 41

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	')'            reduce using rule 2
	','            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2
	%eof           reduce using rule 2


State 42

	TopDef -> 'predeal' '=' '{' . ListHandPredeal '}'    (rule 5)

	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'}'            reduce using rule 13

	ListHandPredealgoto state 43
	HandPredeal    goto state 44
	Hand           goto state 45

State 43

	TopDef -> 'predeal' '=' '{' ListHandPredeal . '}'    (rule 5)

	'}'            shift, and enter state 132


State 44

	ListHandPredeal -> HandPredeal .                    (rule 14)
	ListHandPredeal -> HandPredeal . ',' ListHandPredeal    (rule 15)

	','            shift, and enter state 131
	'}'            reduce using rule 14


State 45

	HandPredeal -> Hand . ':' HandFeature               (rule 16)

	':'            shift, and enter state 130


State 46

	Expr5 -> 'not' Expr6 .                              (rule 50)

	'!='           reduce using rule 50
	')'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50
	%eof           reduce using rule 50


State 47

	Expr6 -> '(' Expr . ')'                             (rule 49)

	')'            shift, and enter state 129


State 48

	Expr6 -> Hand '.' . Ident                           (rule 45)

	L_Ident        shift, and enter state 2

	Ident          goto state 128

State 49

	Expr -> Expr1 'or' . Expr                           (rule 56)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'not'          shift, and enter state 39
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 25
	Expr5          goto state 26
	Expr2          goto state 27
	Expr1          goto state 28
	Expr           goto state 127
	Expr3          goto state 30
	Expr4          goto state 31
	Hand           goto state 32

State 50

	Expr2 -> Expr2 RelOp . Expr3                        (rule 52)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'not'          shift, and enter state 39
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 25
	Expr5          goto state 26
	Expr3          goto state 126
	Expr4          goto state 31
	Hand           goto state 32

State 51

	RelOp -> '!=' .                                     (rule 112)

	'('            reduce using rule 112
	'E'            reduce using rule 112
	'N'            reduce using rule 112
	'S'            reduce using rule 112
	'W'            reduce using rule 112
	'[2]'          reduce using rule 112
	'[3]'          reduce using rule 112
	'[4]'          reduce using rule 112
	'[5]'          reduce using rule 112
	'[6]'          reduce using rule 112
	'[7]'          reduce using rule 112
	'[8]'          reduce using rule 112
	'[9]'          reduce using rule 112
	'[A]'          reduce using rule 112
	'[J]'          reduce using rule 112
	'[K]'          reduce using rule 112
	'[Q]'          reduce using rule 112
	'[T]'          reduce using rule 112
	'c'            reduce using rule 112
	'd'            reduce using rule 112
	'false'        reduce using rule 112
	'h'            reduce using rule 112
	'length'       reduce using rule 112
	'not'          reduce using rule 112
	's'            reduce using rule 112
	'true'         reduce using rule 112
	L_integ        reduce using rule 112


State 52

	RelOp -> '<' .                                      (rule 107)

	'('            reduce using rule 107
	'E'            reduce using rule 107
	'N'            reduce using rule 107
	'S'            reduce using rule 107
	'W'            reduce using rule 107
	'[2]'          reduce using rule 107
	'[3]'          reduce using rule 107
	'[4]'          reduce using rule 107
	'[5]'          reduce using rule 107
	'[6]'          reduce using rule 107
	'[7]'          reduce using rule 107
	'[8]'          reduce using rule 107
	'[9]'          reduce using rule 107
	'[A]'          reduce using rule 107
	'[J]'          reduce using rule 107
	'[K]'          reduce using rule 107
	'[Q]'          reduce using rule 107
	'[T]'          reduce using rule 107
	'c'            reduce using rule 107
	'd'            reduce using rule 107
	'false'        reduce using rule 107
	'h'            reduce using rule 107
	'length'       reduce using rule 107
	'not'          reduce using rule 107
	's'            reduce using rule 107
	'true'         reduce using rule 107
	L_integ        reduce using rule 107


State 53

	RelOp -> '<=' .                                     (rule 108)

	'('            reduce using rule 108
	'E'            reduce using rule 108
	'N'            reduce using rule 108
	'S'            reduce using rule 108
	'W'            reduce using rule 108
	'[2]'          reduce using rule 108
	'[3]'          reduce using rule 108
	'[4]'          reduce using rule 108
	'[5]'          reduce using rule 108
	'[6]'          reduce using rule 108
	'[7]'          reduce using rule 108
	'[8]'          reduce using rule 108
	'[9]'          reduce using rule 108
	'[A]'          reduce using rule 108
	'[J]'          reduce using rule 108
	'[K]'          reduce using rule 108
	'[Q]'          reduce using rule 108
	'[T]'          reduce using rule 108
	'c'            reduce using rule 108
	'd'            reduce using rule 108
	'false'        reduce using rule 108
	'h'            reduce using rule 108
	'length'       reduce using rule 108
	'not'          reduce using rule 108
	's'            reduce using rule 108
	'true'         reduce using rule 108
	L_integ        reduce using rule 108


State 54

	RelOp -> '==' .                                     (rule 111)

	'('            reduce using rule 111
	'E'            reduce using rule 111
	'N'            reduce using rule 111
	'S'            reduce using rule 111
	'W'            reduce using rule 111
	'[2]'          reduce using rule 111
	'[3]'          reduce using rule 111
	'[4]'          reduce using rule 111
	'[5]'          reduce using rule 111
	'[6]'          reduce using rule 111
	'[7]'          reduce using rule 111
	'[8]'          reduce using rule 111
	'[9]'          reduce using rule 111
	'[A]'          reduce using rule 111
	'[J]'          reduce using rule 111
	'[K]'          reduce using rule 111
	'[Q]'          reduce using rule 111
	'[T]'          reduce using rule 111
	'c'            reduce using rule 111
	'd'            reduce using rule 111
	'false'        reduce using rule 111
	'h'            reduce using rule 111
	'length'       reduce using rule 111
	'not'          reduce using rule 111
	's'            reduce using rule 111
	'true'         reduce using rule 111
	L_integ        reduce using rule 111


State 55

	RelOp -> '>' .                                      (rule 109)

	'('            reduce using rule 109
	'E'            reduce using rule 109
	'N'            reduce using rule 109
	'S'            reduce using rule 109
	'W'            reduce using rule 109
	'[2]'          reduce using rule 109
	'[3]'          reduce using rule 109
	'[4]'          reduce using rule 109
	'[5]'          reduce using rule 109
	'[6]'          reduce using rule 109
	'[7]'          reduce using rule 109
	'[8]'          reduce using rule 109
	'[9]'          reduce using rule 109
	'[A]'          reduce using rule 109
	'[J]'          reduce using rule 109
	'[K]'          reduce using rule 109
	'[Q]'          reduce using rule 109
	'[T]'          reduce using rule 109
	'c'            reduce using rule 109
	'd'            reduce using rule 109
	'false'        reduce using rule 109
	'h'            reduce using rule 109
	'length'       reduce using rule 109
	'not'          reduce using rule 109
	's'            reduce using rule 109
	'true'         reduce using rule 109
	L_integ        reduce using rule 109


State 56

	RelOp -> '>=' .                                     (rule 110)

	'('            reduce using rule 110
	'E'            reduce using rule 110
	'N'            reduce using rule 110
	'S'            reduce using rule 110
	'W'            reduce using rule 110
	'[2]'          reduce using rule 110
	'[3]'          reduce using rule 110
	'[4]'          reduce using rule 110
	'[5]'          reduce using rule 110
	'[6]'          reduce using rule 110
	'[7]'          reduce using rule 110
	'[8]'          reduce using rule 110
	'[9]'          reduce using rule 110
	'[A]'          reduce using rule 110
	'[J]'          reduce using rule 110
	'[K]'          reduce using rule 110
	'[Q]'          reduce using rule 110
	'[T]'          reduce using rule 110
	'c'            reduce using rule 110
	'd'            reduce using rule 110
	'false'        reduce using rule 110
	'h'            reduce using rule 110
	'length'       reduce using rule 110
	'not'          reduce using rule 110
	's'            reduce using rule 110
	'true'         reduce using rule 110
	L_integ        reduce using rule 110


State 57

	Expr1 -> Expr2 'and' . Expr1                        (rule 54)

	'('            shift, and enter state 33
	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'false'        shift, and enter state 38
	'not'          shift, and enter state 39
	'true'         shift, and enter state 40
	L_integ        shift, and enter state 41

	Integer        goto state 24
	Expr6          goto state 25
	Expr5          goto state 26
	Expr2          goto state 27
	Expr1          goto state 125
	Expr3          goto state 30
	Expr4          goto state 31
	Hand           goto state 32

State 58

	HoldingExpr5 -> Integer .                           (rule 82)

	'!='           reduce using rule 82
	')'            reduce using rule 82
	'<'            reduce using rule 82
	'<='           reduce using rule 82
	'=='           reduce using rule 82
	'>'            reduce using rule 82
	'>='           reduce using rule 82
	'and'          reduce using rule 82
	'or'           reduce using rule 82


State 59

	HoldingExpr4 -> HoldingExpr5 .                      (rule 86)

	'!='           reduce using rule 86
	')'            reduce using rule 86
	'<'            reduce using rule 86
	'<='           reduce using rule 86
	'=='           reduce using rule 86
	'>'            reduce using rule 86
	'>='           reduce using rule 86
	'and'          reduce using rule 86
	'or'           reduce using rule 86


State 60

	HoldingExpr3 -> HoldingExpr4 .                      (rule 93)

	'!='           reduce using rule 93
	')'            reduce using rule 93
	'<'            reduce using rule 93
	'<='           reduce using rule 93
	'=='           reduce using rule 93
	'>'            reduce using rule 93
	'>='           reduce using rule 93
	'and'          reduce using rule 93
	'or'           reduce using rule 93


State 61

	HoldingExpr2 -> HoldingExpr2 . RelOp HoldingExpr3    (rule 87)
	HoldingExpr1 -> HoldingExpr2 . 'and' HoldingExpr1    (rule 89)
	HoldingExpr1 -> HoldingExpr2 .                      (rule 90)

	'!='           shift, and enter state 51
	')'            reduce using rule 90
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56
	'and'          shift, and enter state 124
	'or'           reduce using rule 90

	RelOp          goto state 123

State 62

	HoldingExpr -> HoldingExpr1 . 'or' HoldingExpr      (rule 91)
	HoldingExpr -> HoldingExpr1 .                       (rule 92)

	')'            reduce using rule 92
	'or'           shift, and enter state 122


State 63

	TopDef -> Ident '=' 'holding(' HoldingExpr . ')'    (rule 9)

	')'            shift, and enter state 121


State 64

	HoldingExpr2 -> HoldingExpr3 .                      (rule 88)

	'!='           reduce using rule 88
	')'            reduce using rule 88
	'<'            reduce using rule 88
	'<='           reduce using rule 88
	'=='           reduce using rule 88
	'>'            reduce using rule 88
	'>='           reduce using rule 88
	'and'          reduce using rule 88
	'or'           reduce using rule 88


State 65

	HoldingExpr5 -> Card .                              (rule 83)

	'!='           reduce using rule 83
	')'            reduce using rule 83
	'<'            reduce using rule 83
	'<='           reduce using rule 83
	'=='           reduce using rule 83
	'>'            reduce using rule 83
	'>='           reduce using rule 83
	'and'          reduce using rule 83
	'or'           reduce using rule 83


State 66

	HoldingExpr5 -> '(' . HoldingExpr ')'               (rule 84)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	'not'          shift, and enter state 81
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 59
	HoldingExpr4   goto state 60
	HoldingExpr2   goto state 61
	HoldingExpr1   goto state 62
	HoldingExpr    goto state 120
	HoldingExpr3   goto state 64
	Card           goto state 65

State 67

	Card -> '[2]' .                                     (rule 106)

	'!='           reduce using rule 106
	')'            reduce using rule 106
	'<'            reduce using rule 106
	'<='           reduce using rule 106
	'=='           reduce using rule 106
	'>'            reduce using rule 106
	'>='           reduce using rule 106
	'and'          reduce using rule 106
	'or'           reduce using rule 106


State 68

	Card -> '[3]' .                                     (rule 105)

	'!='           reduce using rule 105
	')'            reduce using rule 105
	'<'            reduce using rule 105
	'<='           reduce using rule 105
	'=='           reduce using rule 105
	'>'            reduce using rule 105
	'>='           reduce using rule 105
	'and'          reduce using rule 105
	'or'           reduce using rule 105


State 69

	Card -> '[4]' .                                     (rule 104)

	'!='           reduce using rule 104
	')'            reduce using rule 104
	'<'            reduce using rule 104
	'<='           reduce using rule 104
	'=='           reduce using rule 104
	'>'            reduce using rule 104
	'>='           reduce using rule 104
	'and'          reduce using rule 104
	'or'           reduce using rule 104


State 70

	Card -> '[5]' .                                     (rule 103)

	'!='           reduce using rule 103
	')'            reduce using rule 103
	'<'            reduce using rule 103
	'<='           reduce using rule 103
	'=='           reduce using rule 103
	'>'            reduce using rule 103
	'>='           reduce using rule 103
	'and'          reduce using rule 103
	'or'           reduce using rule 103


State 71

	Card -> '[6]' .                                     (rule 102)

	'!='           reduce using rule 102
	')'            reduce using rule 102
	'<'            reduce using rule 102
	'<='           reduce using rule 102
	'=='           reduce using rule 102
	'>'            reduce using rule 102
	'>='           reduce using rule 102
	'and'          reduce using rule 102
	'or'           reduce using rule 102


State 72

	Card -> '[7]' .                                     (rule 101)

	'!='           reduce using rule 101
	')'            reduce using rule 101
	'<'            reduce using rule 101
	'<='           reduce using rule 101
	'=='           reduce using rule 101
	'>'            reduce using rule 101
	'>='           reduce using rule 101
	'and'          reduce using rule 101
	'or'           reduce using rule 101


State 73

	Card -> '[8]' .                                     (rule 100)

	'!='           reduce using rule 100
	')'            reduce using rule 100
	'<'            reduce using rule 100
	'<='           reduce using rule 100
	'=='           reduce using rule 100
	'>'            reduce using rule 100
	'>='           reduce using rule 100
	'and'          reduce using rule 100
	'or'           reduce using rule 100


State 74

	Card -> '[9]' .                                     (rule 99)

	'!='           reduce using rule 99
	')'            reduce using rule 99
	'<'            reduce using rule 99
	'<='           reduce using rule 99
	'=='           reduce using rule 99
	'>'            reduce using rule 99
	'>='           reduce using rule 99
	'and'          reduce using rule 99
	'or'           reduce using rule 99


State 75

	Card -> '[A]' .                                     (rule 94)

	'!='           reduce using rule 94
	')'            reduce using rule 94
	'<'            reduce using rule 94
	'<='           reduce using rule 94
	'=='           reduce using rule 94
	'>'            reduce using rule 94
	'>='           reduce using rule 94
	'and'          reduce using rule 94
	'or'           reduce using rule 94


State 76

	Card -> '[J]' .                                     (rule 97)

	'!='           reduce using rule 97
	')'            reduce using rule 97
	'<'            reduce using rule 97
	'<='           reduce using rule 97
	'=='           reduce using rule 97
	'>'            reduce using rule 97
	'>='           reduce using rule 97
	'and'          reduce using rule 97
	'or'           reduce using rule 97


State 77

	Card -> '[K]' .                                     (rule 95)

	'!='           reduce using rule 95
	')'            reduce using rule 95
	'<'            reduce using rule 95
	'<='           reduce using rule 95
	'=='           reduce using rule 95
	'>'            reduce using rule 95
	'>='           reduce using rule 95
	'and'          reduce using rule 95
	'or'           reduce using rule 95


State 78

	Card -> '[Q]' .                                     (rule 96)

	'!='           reduce using rule 96
	')'            reduce using rule 96
	'<'            reduce using rule 96
	'<='           reduce using rule 96
	'=='           reduce using rule 96
	'>'            reduce using rule 96
	'>='           reduce using rule 96
	'and'          reduce using rule 96
	'or'           reduce using rule 96


State 79

	Card -> '[T]' .                                     (rule 98)

	'!='           reduce using rule 98
	')'            reduce using rule 98
	'<'            reduce using rule 98
	'<='           reduce using rule 98
	'=='           reduce using rule 98
	'>'            reduce using rule 98
	'>='           reduce using rule 98
	'and'          reduce using rule 98
	'or'           reduce using rule 98


State 80

	HoldingExpr5 -> 'length' .                          (rule 81)

	'!='           reduce using rule 81
	')'            reduce using rule 81
	'<'            reduce using rule 81
	'<='           reduce using rule 81
	'=='           reduce using rule 81
	'>'            reduce using rule 81
	'>='           reduce using rule 81
	'and'          reduce using rule 81
	'or'           reduce using rule 81


State 81

	HoldingExpr4 -> 'not' . HoldingExpr5                (rule 85)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 119
	Card           goto state 65

State 82

	TopDef -> Ident '=' 'evaluator' '(' . ListEvalVal ')'    (rule 8)

	')'            reduce using rule 25
	L_integ        shift, and enter state 41

	Integer        goto state 116
	EvalVal        goto state 117
	ListEvalVal    goto state 118

State 83

	SuitInt -> Integer .                                (rule 37)

	')'            reduce using rule 37
	';'            reduce using rule 37
	']'            reduce using rule 37


State 84

	ListSuitCount -> SuitCount .                        (rule 39)
	ListSuitCount -> SuitCount . ';' ListSuitCount      (rule 40)

	';'            shift, and enter state 115
	']'            reduce using rule 39


State 85

	SuitCount -> SuitInt .                              (rule 35)

	';'            reduce using rule 35
	']'            reduce using rule 35


State 86

	ShapeOk -> '[' ListSuitCount . ']'                  (rule 30)

	']'            shift, and enter state 114


State 87

	SuitCount -> '(' . ListSuitInt ')'                  (rule 36)

	')'            reduce using rule 41
	L_integ        shift, and enter state 41

	Integer        goto state 83
	SuitInt        goto state 112
	ListSuitInt    goto state 113

State 88

	ShapeExpr6 -> Integer .                             (rule 65)

	'!='           reduce using rule 65
	')'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65


State 89

	ShapeExpr5 -> ShapeExpr6 .                          (rule 68)

	'!='           reduce using rule 68
	')'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68


State 90

	ShapeExpr4 -> ShapeExpr5 .                          (rule 76)

	'!='           reduce using rule 76
	')'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76


State 91

	ShapeExpr2 -> ShapeExpr2 . RelOp ShapeExpr3         (rule 69)
	ShapeExpr1 -> ShapeExpr2 . 'and' ShapeExpr1         (rule 71)
	ShapeExpr1 -> ShapeExpr2 .                          (rule 72)

	'!='           shift, and enter state 51
	')'            reduce using rule 72
	'<'            shift, and enter state 52
	'<='           shift, and enter state 53
	'=='           shift, and enter state 54
	'>'            shift, and enter state 55
	'>='           shift, and enter state 56
	'and'          shift, and enter state 111
	'or'           reduce using rule 72

	RelOp          goto state 110

State 92

	ShapeExpr -> ShapeExpr1 . 'or' ShapeExpr            (rule 73)
	ShapeExpr -> ShapeExpr1 .                           (rule 74)

	')'            reduce using rule 74
	'or'           shift, and enter state 109


State 93

	ShapeDef -> Ident '=' '(' ShapeExpr . ')'           (rule 22)

	')'            shift, and enter state 108


State 94

	ShapeExpr2 -> ShapeExpr3 .                          (rule 70)

	'!='           reduce using rule 70
	')'            reduce using rule 70
	'<'            reduce using rule 70
	'<='           reduce using rule 70
	'=='           reduce using rule 70
	'>'            reduce using rule 70
	'>='           reduce using rule 70
	'and'          reduce using rule 70
	'or'           reduce using rule 70


State 95

	ShapeExpr3 -> ShapeExpr4 .                          (rule 75)

	'!='           reduce using rule 75
	')'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75


State 96

	ShapeExpr6 -> SuitLit .                             (rule 64)

	'!='           reduce using rule 64
	')'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64


State 97

	ShapeExpr6 -> '(' . ShapeExpr ')'                   (rule 66)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	'not'          shift, and enter state 101
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 89
	ShapeExpr5     goto state 90
	ShapeExpr2     goto state 91
	ShapeExpr1     goto state 92
	ShapeExpr      goto state 107
	ShapeExpr3     goto state 94
	ShapeExpr4     goto state 95
	SuitLit        goto state 96

State 98

	SuitLit -> 'c' .                                    (rule 80)

	'!='           reduce using rule 80
	')'            reduce using rule 80
	'<'            reduce using rule 80
	'<='           reduce using rule 80
	'=='           reduce using rule 80
	'>'            reduce using rule 80
	'>='           reduce using rule 80
	'and'          reduce using rule 80
	'or'           reduce using rule 80


State 99

	SuitLit -> 'd' .                                    (rule 79)

	'!='           reduce using rule 79
	')'            reduce using rule 79
	'<'            reduce using rule 79
	'<='           reduce using rule 79
	'=='           reduce using rule 79
	'>'            reduce using rule 79
	'>='           reduce using rule 79
	'and'          reduce using rule 79
	'or'           reduce using rule 79


State 100

	SuitLit -> 'h' .                                    (rule 78)

	'!='           reduce using rule 78
	')'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78


State 101

	ShapeExpr5 -> 'not' . ShapeExpr6                    (rule 67)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 106
	SuitLit        goto state 96

State 102

	SuitLit -> 's' .                                    (rule 77)

	'!='           reduce using rule 77
	')'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77


State 103

	ShapeNeg -> '!' ShapeOk .                           (rule 31)

	'+'            reduce using rule 31
	';'            reduce using rule 31
	%eof           reduce using rule 31


State 104

	ListShape -> Shape '+' . ListShape                  (rule 34)

	'!'            shift, and enter state 18
	';'            reduce using rule 32
	'['            shift, and enter state 20
	%eof           reduce using rule 32

	Shape          goto state 14
	ShapeOk        goto state 15
	ShapeNeg       goto state 16
	ListShape      goto state 105

State 105

	ListShape -> Shape '+' ListShape .                  (rule 34)

	';'            reduce using rule 34
	%eof           reduce using rule 34


State 106

	ShapeExpr5 -> 'not' ShapeExpr6 .                    (rule 67)

	'!='           reduce using rule 67
	')'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67


State 107

	ShapeExpr6 -> '(' ShapeExpr . ')'                   (rule 66)

	')'            shift, and enter state 150


State 108

	ShapeDef -> Ident '=' '(' ShapeExpr ')' .           (rule 22)

	';'            reduce using rule 22
	%eof           reduce using rule 22


State 109

	ShapeExpr -> ShapeExpr1 'or' . ShapeExpr            (rule 73)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	'not'          shift, and enter state 101
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 89
	ShapeExpr5     goto state 90
	ShapeExpr2     goto state 91
	ShapeExpr1     goto state 92
	ShapeExpr      goto state 149
	ShapeExpr3     goto state 94
	ShapeExpr4     goto state 95
	SuitLit        goto state 96

State 110

	ShapeExpr2 -> ShapeExpr2 RelOp . ShapeExpr3         (rule 69)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	'not'          shift, and enter state 101
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 89
	ShapeExpr5     goto state 90
	ShapeExpr3     goto state 148
	ShapeExpr4     goto state 95
	SuitLit        goto state 96

State 111

	ShapeExpr1 -> ShapeExpr2 'and' . ShapeExpr1         (rule 71)

	'('            shift, and enter state 97
	'c'            shift, and enter state 98
	'd'            shift, and enter state 99
	'h'            shift, and enter state 100
	'not'          shift, and enter state 101
	's'            shift, and enter state 102
	L_integ        shift, and enter state 41

	Integer        goto state 88
	ShapeExpr6     goto state 89
	ShapeExpr5     goto state 90
	ShapeExpr2     goto state 91
	ShapeExpr1     goto state 147
	ShapeExpr3     goto state 94
	ShapeExpr4     goto state 95
	SuitLit        goto state 96

State 112

	ListSuitInt -> SuitInt .                            (rule 42)
	ListSuitInt -> SuitInt . ';' ListSuitInt            (rule 43)

	')'            reduce using rule 42
	';'            shift, and enter state 146


State 113

	SuitCount -> '(' ListSuitInt . ')'                  (rule 36)

	')'            shift, and enter state 145


State 114

	ShapeOk -> '[' ListSuitCount ']' .                  (rule 30)

	'+'            reduce using rule 30
	';'            reduce using rule 30
	%eof           reduce using rule 30


State 115

	ListSuitCount -> SuitCount ';' . ListSuitCount      (rule 40)

	'('            shift, and enter state 87
	']'            reduce using rule 38
	L_integ        shift, and enter state 41

	Integer        goto state 83
	SuitCount      goto state 84
	SuitInt        goto state 85
	ListSuitCount  goto state 144

State 116

	EvalVal -> Integer .                                (rule 24)

	')'            reduce using rule 24
	','            reduce using rule 24


State 117

	ListEvalVal -> EvalVal .                            (rule 26)
	ListEvalVal -> EvalVal . ',' ListEvalVal            (rule 27)

	')'            reduce using rule 26
	','            shift, and enter state 143


State 118

	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal . ')'    (rule 8)

	')'            shift, and enter state 142


State 119

	HoldingExpr4 -> 'not' HoldingExpr5 .                (rule 85)

	'!='           reduce using rule 85
	')'            reduce using rule 85
	'<'            reduce using rule 85
	'<='           reduce using rule 85
	'=='           reduce using rule 85
	'>'            reduce using rule 85
	'>='           reduce using rule 85
	'and'          reduce using rule 85
	'or'           reduce using rule 85


State 120

	HoldingExpr5 -> '(' HoldingExpr . ')'               (rule 84)

	')'            shift, and enter state 141


State 121

	TopDef -> Ident '=' 'holding(' HoldingExpr ')' .    (rule 9)

	';'            reduce using rule 9
	%eof           reduce using rule 9


State 122

	HoldingExpr -> HoldingExpr1 'or' . HoldingExpr      (rule 91)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	'not'          shift, and enter state 81
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 59
	HoldingExpr4   goto state 60
	HoldingExpr2   goto state 61
	HoldingExpr1   goto state 62
	HoldingExpr    goto state 140
	HoldingExpr3   goto state 64
	Card           goto state 65

State 123

	HoldingExpr2 -> HoldingExpr2 RelOp . HoldingExpr3    (rule 87)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	'not'          shift, and enter state 81
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 59
	HoldingExpr4   goto state 60
	HoldingExpr3   goto state 139
	Card           goto state 65

State 124

	HoldingExpr1 -> HoldingExpr2 'and' . HoldingExpr1    (rule 89)

	'('            shift, and enter state 66
	'[2]'          shift, and enter state 67
	'[3]'          shift, and enter state 68
	'[4]'          shift, and enter state 69
	'[5]'          shift, and enter state 70
	'[6]'          shift, and enter state 71
	'[7]'          shift, and enter state 72
	'[8]'          shift, and enter state 73
	'[9]'          shift, and enter state 74
	'[A]'          shift, and enter state 75
	'[J]'          shift, and enter state 76
	'[K]'          shift, and enter state 77
	'[Q]'          shift, and enter state 78
	'[T]'          shift, and enter state 79
	'length'       shift, and enter state 80
	'not'          shift, and enter state 81
	L_integ        shift, and enter state 41

	Integer        goto state 58
	HoldingExpr5   goto state 59
	HoldingExpr4   goto state 60
	HoldingExpr2   goto state 61
	HoldingExpr1   goto state 138
	HoldingExpr3   goto state 64
	Card           goto state 65

State 125

	Expr1 -> Expr2 'and' Expr1 .                        (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54
	'or'           reduce using rule 54
	%eof           reduce using rule 54


State 126

	Expr2 -> Expr2 RelOp Expr3 .                        (rule 52)

	'!='           reduce using rule 52
	')'            reduce using rule 52
	';'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=='           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'and'          reduce using rule 52
	'or'           reduce using rule 52
	%eof           reduce using rule 52


State 127

	Expr -> Expr1 'or' Expr .                           (rule 56)

	')'            reduce using rule 56
	';'            reduce using rule 56
	%eof           reduce using rule 56


State 128

	Expr6 -> Hand '.' Ident .                           (rule 45)

	'!='           reduce using rule 45
	')'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45
	%eof           reduce using rule 45


State 129

	Expr6 -> '(' Expr ')' .                             (rule 49)

	'!='           reduce using rule 49
	')'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	%eof           reduce using rule 49


State 130

	HandPredeal -> Hand ':' . HandFeature               (rule 16)

	'('            shift, and enter state 136
	L_quoted       shift, and enter state 137

	String         goto state 134
	HandFeature    goto state 135

State 131

	ListHandPredeal -> HandPredeal ',' . ListHandPredeal    (rule 15)

	'E'            shift, and enter state 34
	'N'            shift, and enter state 35
	'S'            shift, and enter state 36
	'W'            shift, and enter state 37
	'}'            reduce using rule 13

	ListHandPredealgoto state 133
	HandPredeal    goto state 44
	Hand           goto state 45

State 132

	TopDef -> 'predeal' '=' '{' ListHandPredeal '}' .    (rule 5)

	';'            reduce using rule 5
	%eof           reduce using rule 5


State 133

	ListHandPredeal -> HandPredeal ',' ListHandPredeal .    (rule 15)

	'}'            reduce using rule 15


State 134

	HandFeature -> String .                             (rule 17)

	','            reduce using rule 17
	'}'            reduce using rule 17


State 135

	HandPredeal -> Hand ':' HandFeature .               (rule 16)

	','            reduce using rule 16
	'}'            reduce using rule 16


State 136

	HandFeature -> '(' . Ident ')'                      (rule 18)
	HandFeature -> '(' . Ident ',' Ident ',' Integer ')'    (rule 19)
	HandFeature -> '(' . Ident ',' Ident ',' Value ')'    (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 153

State 137

	String -> L_quoted .                                (rule 3)

	','            reduce using rule 3
	'}'            reduce using rule 3


State 138

	HoldingExpr1 -> HoldingExpr2 'and' HoldingExpr1 .    (rule 89)

	')'            reduce using rule 89
	'or'           reduce using rule 89


State 139

	HoldingExpr2 -> HoldingExpr2 RelOp HoldingExpr3 .    (rule 87)

	'!='           reduce using rule 87
	')'            reduce using rule 87
	'<'            reduce using rule 87
	'<='           reduce using rule 87
	'=='           reduce using rule 87
	'>'            reduce using rule 87
	'>='           reduce using rule 87
	'and'          reduce using rule 87
	'or'           reduce using rule 87


State 140

	HoldingExpr -> HoldingExpr1 'or' HoldingExpr .      (rule 91)

	')'            reduce using rule 91


State 141

	HoldingExpr5 -> '(' HoldingExpr ')' .               (rule 84)

	'!='           reduce using rule 84
	')'            reduce using rule 84
	'<'            reduce using rule 84
	'<='           reduce using rule 84
	'=='           reduce using rule 84
	'>'            reduce using rule 84
	'>='           reduce using rule 84
	'and'          reduce using rule 84
	'or'           reduce using rule 84


State 142

	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal ')' .    (rule 8)

	';'            reduce using rule 8
	%eof           reduce using rule 8


State 143

	ListEvalVal -> EvalVal ',' . ListEvalVal            (rule 27)

	')'            reduce using rule 25
	L_integ        shift, and enter state 41

	Integer        goto state 116
	EvalVal        goto state 117
	ListEvalVal    goto state 152

State 144

	ListSuitCount -> SuitCount ';' ListSuitCount .      (rule 40)

	']'            reduce using rule 40


State 145

	SuitCount -> '(' ListSuitInt ')' .                  (rule 36)

	';'            reduce using rule 36
	']'            reduce using rule 36


State 146

	ListSuitInt -> SuitInt ';' . ListSuitInt            (rule 43)

	')'            reduce using rule 41
	L_integ        shift, and enter state 41

	Integer        goto state 83
	SuitInt        goto state 112
	ListSuitInt    goto state 151

State 147

	ShapeExpr1 -> ShapeExpr2 'and' ShapeExpr1 .         (rule 71)

	')'            reduce using rule 71
	'or'           reduce using rule 71


State 148

	ShapeExpr2 -> ShapeExpr2 RelOp ShapeExpr3 .         (rule 69)

	'!='           reduce using rule 69
	')'            reduce using rule 69
	'<'            reduce using rule 69
	'<='           reduce using rule 69
	'=='           reduce using rule 69
	'>'            reduce using rule 69
	'>='           reduce using rule 69
	'and'          reduce using rule 69
	'or'           reduce using rule 69


State 149

	ShapeExpr -> ShapeExpr1 'or' ShapeExpr .            (rule 73)

	')'            reduce using rule 73


State 150

	ShapeExpr6 -> '(' ShapeExpr ')' .                   (rule 66)

	'!='           reduce using rule 66
	')'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66


State 151

	ListSuitInt -> SuitInt ';' ListSuitInt .            (rule 43)

	')'            reduce using rule 43


State 152

	ListEvalVal -> EvalVal ',' ListEvalVal .            (rule 27)

	')'            reduce using rule 27


State 153

	HandFeature -> '(' Ident . ')'                      (rule 18)
	HandFeature -> '(' Ident . ',' Ident ',' Integer ')'    (rule 19)
	HandFeature -> '(' Ident . ',' Ident ',' Value ')'    (rule 20)

	')'            shift, and enter state 154
	','            shift, and enter state 155


State 154

	HandFeature -> '(' Ident ')' .                      (rule 18)

	','            reduce using rule 18
	'}'            reduce using rule 18


State 155

	HandFeature -> '(' Ident ',' . Ident ',' Integer ')'    (rule 19)
	HandFeature -> '(' Ident ',' . Ident ',' Value ')'    (rule 20)

	L_Ident        shift, and enter state 2

	Ident          goto state 156

State 156

	HandFeature -> '(' Ident ',' Ident . ',' Integer ')'    (rule 19)
	HandFeature -> '(' Ident ',' Ident . ',' Value ')'    (rule 20)

	','            shift, and enter state 157


State 157

	HandFeature -> '(' Ident ',' Ident ',' . Integer ')'    (rule 19)
	HandFeature -> '(' Ident ',' Ident ',' . Value ')'    (rule 20)

	'('            shift, and enter state 160
	L_integ        shift, and enter state 41

	Integer        goto state 158
	Value          goto state 159

State 158

	HandFeature -> '(' Ident ',' Ident ',' Integer . ')'    (rule 19)

	')'            shift, and enter state 163


State 159

	HandFeature -> '(' Ident ',' Ident ',' Value . ')'    (rule 20)

	')'            shift, and enter state 162


State 160

	Value -> '(' . Integer ',' Integer ')'              (rule 21)

	L_integ        shift, and enter state 41

	Integer        goto state 161

State 161

	Value -> '(' Integer . ',' Integer ')'              (rule 21)

	','            shift, and enter state 164


State 162

	HandFeature -> '(' Ident ',' Ident ',' Value ')' .    (rule 20)

	','            reduce using rule 20
	'}'            reduce using rule 20


State 163

	HandFeature -> '(' Ident ',' Ident ',' Integer ')' .    (rule 19)

	','            reduce using rule 19
	'}'            reduce using rule 19


State 164

	Value -> '(' Integer ',' . Integer ')'              (rule 21)

	L_integ        shift, and enter state 41

	Integer        goto state 165

State 165

	Value -> '(' Integer ',' Integer . ')'              (rule 21)

	')'            shift, and enter state 166


State 166

	Value -> '(' Integer ',' Integer ')' .              (rule 21)

	')'            reduce using rule 21


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 113
Number of terminals: 54
Number of non-terminals: 47
Number of states: 167
