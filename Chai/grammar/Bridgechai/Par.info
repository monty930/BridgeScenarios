-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.12 from Bridgechai/Par.y
-----------------------------------------------------------------------------


rule 42 is unused

terminal 'int' is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pProg -> Prog                               (0)
	Ident -> L_Ident                                   (1)
	Integer -> L_integ                                 (2)
	String -> L_quoted                                 (3)
	Prog -> ListTopDef                                 (4)
	TopDef -> 'predeal' '=' '{' ListHandPredeal '}'    (5)
	TopDef -> 'final' '=' Expr                         (6)
	TopDef -> ShapeDef                                 (7)
	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal ')'   (8)
	ListTopDef ->                                      (9)
	ListTopDef -> TopDef                               (10)
	ListTopDef -> TopDef ';' ListTopDef                (11)
	ListHandPredeal ->                                 (12)
	ListHandPredeal -> HandPredeal                     (13)
	ListHandPredeal -> HandPredeal ',' ListHandPredeal   (14)
	HandPredeal -> Hand ':' HandFeature                (15)
	HandFeature -> String                              (16)
	HandFeature -> '(' Ident ')'                       (17)
	HandFeature -> '(' Ident ',' Ident ',' Value ')'   (18)
	Value -> '(' Integer ',' Integer ')'               (19)
	ShapeDef -> Ident '=' '(' ShapeExpr ')'            (20)
	ShapeDef -> Ident '=' ListShape                    (21)
	EvalVal -> Integer                                 (22)
	ListEvalVal ->                                     (23)
	ListEvalVal -> EvalVal                             (24)
	ListEvalVal -> EvalVal ',' ListEvalVal             (25)
	Shape -> ShapeOk                                   (26)
	Shape -> ShapeNeg                                  (27)
	ShapeOk -> '[' ListSuitCount ']'                   (28)
	ShapeNeg -> '!' ShapeOk                            (29)
	ListShape ->                                       (30)
	ListShape -> Shape                                 (31)
	ListShape -> Shape '+' ListShape                   (32)
	SuitCount -> SuitInt                               (33)
	SuitCount -> '(' ListSuitInt ')'                   (34)
	SuitInt -> Integer                                 (35)
	ListSuitCount ->                                   (36)
	ListSuitCount -> SuitCount                         (37)
	ListSuitCount -> SuitCount ';' ListSuitCount       (38)
	ListSuitInt ->                                     (39)
	ListSuitInt -> SuitInt                             (40)
	ListSuitInt -> SuitInt ';' ListSuitInt             (41)
	Type -> 'int'                                      (42)
	Expr6 -> Hand '.' Ident                            (43)
	Expr6 -> Integer                                   (44)
	Expr6 -> 'true'                                    (45)
	Expr6 -> 'false'                                   (46)
	Expr6 -> '(' Expr ')'                              (47)
	Expr5 -> 'not' Expr6                               (48)
	Expr5 -> Expr6                                     (49)
	Expr2 -> Expr2 RelOp Expr3                         (50)
	Expr2 -> Expr3                                     (51)
	Expr1 -> Expr2 'and' Expr1                         (52)
	Expr1 -> Expr2                                     (53)
	Expr -> Expr1 'or' Expr                            (54)
	Expr -> Expr1                                      (55)
	Expr3 -> Expr4                                     (56)
	Expr4 -> Expr5                                     (57)
	Hand -> 'N'                                        (58)
	Hand -> 'E'                                        (59)
	Hand -> 'W'                                        (60)
	Hand -> 'S'                                        (61)
	ShapeExpr6 -> SuitLit                              (62)
	ShapeExpr6 -> Integer                              (63)
	ShapeExpr6 -> '(' ShapeExpr ')'                    (64)
	ShapeExpr5 -> 'not' ShapeExpr6                     (65)
	ShapeExpr5 -> ShapeExpr6                           (66)
	ShapeExpr2 -> ShapeExpr2 RelOp ShapeExpr3          (67)
	ShapeExpr2 -> ShapeExpr3                           (68)
	ShapeExpr1 -> ShapeExpr2 'and' ShapeExpr1          (69)
	ShapeExpr1 -> ShapeExpr2                           (70)
	ShapeExpr -> ShapeExpr1 'or' ShapeExpr             (71)
	ShapeExpr -> ShapeExpr1                            (72)
	ShapeExpr3 -> ShapeExpr4                           (73)
	ShapeExpr4 -> ShapeExpr5                           (74)
	SuitLit -> 's'                                     (75)
	SuitLit -> 'h'                                     (76)
	SuitLit -> 'd'                                     (77)
	SuitLit -> 'c'                                     (78)
	RelOp -> '<'                                       (79)
	RelOp -> '<='                                      (80)
	RelOp -> '>'                                       (81)
	RelOp -> '>='                                      (82)
	RelOp -> '=='                                      (83)
	RelOp -> '!='                                      (84)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'!'            { PT _ (TS _ 1) }
	'!='           { PT _ (TS _ 2) }
	'('            { PT _ (TS _ 3) }
	')'            { PT _ (TS _ 4) }
	'+'            { PT _ (TS _ 5) }
	','            { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	':'            { PT _ (TS _ 8) }
	';'            { PT _ (TS _ 9) }
	'<'            { PT _ (TS _ 10) }
	'<='           { PT _ (TS _ 11) }
	'='            { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'>'            { PT _ (TS _ 14) }
	'>='           { PT _ (TS _ 15) }
	'E'            { PT _ (TS _ 16) }
	'N'            { PT _ (TS _ 17) }
	'S'            { PT _ (TS _ 18) }
	'W'            { PT _ (TS _ 19) }
	'['            { PT _ (TS _ 20) }
	']'            { PT _ (TS _ 21) }
	'and'          { PT _ (TS _ 22) }
	'c'            { PT _ (TS _ 23) }
	'd'            { PT _ (TS _ 24) }
	'evaluator'    { PT _ (TS _ 25) }
	'false'        { PT _ (TS _ 26) }
	'final'        { PT _ (TS _ 27) }
	'h'            { PT _ (TS _ 28) }
	'int'          { PT _ (TS _ 29) }
	'not'          { PT _ (TS _ 30) }
	'or'           { PT _ (TS _ 31) }
	'predeal'      { PT _ (TS _ 32) }
	's'            { PT _ (TS _ 33) }
	'true'         { PT _ (TS _ 34) }
	'{'            { PT _ (TS _ 35) }
	'}'            { PT _ (TS _ 36) }
	L_Ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }
	L_quoted       { PT _ (TL $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pProg    rule  0
	Ident           rule  1
	Integer         rule  2
	String          rule  3
	Prog            rule  4
	TopDef          rules 5, 6, 7, 8
	ListTopDef      rules 9, 10, 11
	ListHandPredeal rules 12, 13, 14
	HandPredeal     rule  15
	HandFeature     rules 16, 17, 18
	Value           rule  19
	ShapeDef        rules 20, 21
	EvalVal         rule  22
	ListEvalVal     rules 23, 24, 25
	Shape           rules 26, 27
	ShapeOk         rule  28
	ShapeNeg        rule  29
	ListShape       rules 30, 31, 32
	SuitCount       rules 33, 34
	SuitInt         rule  35
	ListSuitCount   rules 36, 37, 38
	ListSuitInt     rules 39, 40, 41
	Type            rule  42
	Expr6           rules 43, 44, 45, 46, 47
	Expr5           rules 48, 49
	Expr2           rules 50, 51
	Expr1           rules 52, 53
	Expr            rules 54, 55
	Expr3           rule  56
	Expr4           rule  57
	Hand            rules 58, 59, 60, 61
	ShapeExpr6      rules 62, 63, 64
	ShapeExpr5      rules 65, 66
	ShapeExpr2      rules 67, 68
	ShapeExpr1      rules 69, 70
	ShapeExpr       rules 71, 72
	ShapeExpr3      rule  73
	ShapeExpr4      rule  74
	SuitLit         rules 75, 76, 77, 78
	RelOp           rules 79, 80, 81, 82, 83, 84

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'final'        shift, and enter state 8
	'predeal'      shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 9

	Ident          goto state 3
	Prog           goto state 4
	TopDef         goto state 5
	ListTopDef     goto state 6
	ShapeDef       goto state 7

State 1


	L_Ident        shift, and enter state 2


State 2

	Ident -> L_Ident .                                  (rule 1)

	'!='           reduce using rule 1
	')'            reduce using rule 1
	','            reduce using rule 1
	';'            reduce using rule 1
	'<'            reduce using rule 1
	'<='           reduce using rule 1
	'='            reduce using rule 1
	'=='           reduce using rule 1
	'>'            reduce using rule 1
	'>='           reduce using rule 1
	'and'          reduce using rule 1
	'or'           reduce using rule 1
	%eof           reduce using rule 1


State 3

	TopDef -> Ident . '=' 'evaluator' '(' ListEvalVal ')'    (rule 8)
	ShapeDef -> Ident . '=' '(' ShapeExpr ')'           (rule 20)
	ShapeDef -> Ident . '=' ListShape                   (rule 21)

	'='            shift, and enter state 13


State 4

	%start_pProg -> Prog .                              (rule 0)

	%eof           accept


State 5

	ListTopDef -> TopDef .                              (rule 10)
	ListTopDef -> TopDef . ';' ListTopDef               (rule 11)

	';'            shift, and enter state 12
	%eof           reduce using rule 10


State 6

	Prog -> ListTopDef .                                (rule 4)

	%eof           reduce using rule 4


State 7

	TopDef -> ShapeDef .                                (rule 7)

	';'            reduce using rule 7
	%eof           reduce using rule 7


State 8

	TopDef -> 'final' . '=' Expr                        (rule 6)

	'='            shift, and enter state 11


State 9

	TopDef -> 'predeal' . '=' '{' ListHandPredeal '}'    (rule 5)

	'='            shift, and enter state 10


State 10

	TopDef -> 'predeal' '=' . '{' ListHandPredeal '}'    (rule 5)

	'{'            shift, and enter state 41


State 11

	TopDef -> 'final' '=' . Expr                        (rule 6)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'not'          shift, and enter state 38
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr2          goto state 26
	Expr1          goto state 27
	Expr           goto state 28
	Expr3          goto state 29
	Expr4          goto state 30
	Hand           goto state 31

State 12

	ListTopDef -> TopDef ';' . ListTopDef               (rule 11)

	'final'        shift, and enter state 8
	'predeal'      shift, and enter state 9
	L_Ident        shift, and enter state 2
	%eof           reduce using rule 9

	Ident          goto state 3
	TopDef         goto state 5
	ListTopDef     goto state 22
	ShapeDef       goto state 7

State 13

	TopDef -> Ident '=' . 'evaluator' '(' ListEvalVal ')'    (rule 8)
	ShapeDef -> Ident '=' . '(' ShapeExpr ')'           (rule 20)
	ShapeDef -> Ident '=' . ListShape                   (rule 21)

	'!'            shift, and enter state 18
	'('            shift, and enter state 19
	';'            reduce using rule 30
	'['            shift, and enter state 20
	'evaluator'    shift, and enter state 21
	%eof           reduce using rule 30

	Shape          goto state 14
	ShapeOk        goto state 15
	ShapeNeg       goto state 16
	ListShape      goto state 17

State 14

	ListShape -> Shape .                                (rule 31)
	ListShape -> Shape . '+' ListShape                  (rule 32)

	'+'            shift, and enter state 79
	';'            reduce using rule 31
	%eof           reduce using rule 31


State 15

	Shape -> ShapeOk .                                  (rule 26)

	'+'            reduce using rule 26
	';'            reduce using rule 26
	%eof           reduce using rule 26


State 16

	Shape -> ShapeNeg .                                 (rule 27)

	'+'            reduce using rule 27
	';'            reduce using rule 27
	%eof           reduce using rule 27


State 17

	ShapeDef -> Ident '=' ListShape .                   (rule 21)

	';'            reduce using rule 21
	%eof           reduce using rule 21


State 18

	ShapeNeg -> '!' . ShapeOk                           (rule 29)

	'['            shift, and enter state 20

	ShapeOk        goto state 78

State 19

	ShapeDef -> Ident '=' '(' . ShapeExpr ')'           (rule 20)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	'not'          shift, and enter state 76
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 64
	ShapeExpr5     goto state 65
	ShapeExpr2     goto state 66
	ShapeExpr1     goto state 67
	ShapeExpr      goto state 68
	ShapeExpr3     goto state 69
	ShapeExpr4     goto state 70
	SuitLit        goto state 71

State 20

	ShapeOk -> '[' . ListSuitCount ']'                  (rule 28)

	'('            shift, and enter state 62
	']'            reduce using rule 36
	L_integ        shift, and enter state 40

	Integer        goto state 58
	SuitCount      goto state 59
	SuitInt        goto state 60
	ListSuitCount  goto state 61

State 21

	TopDef -> Ident '=' 'evaluator' . '(' ListEvalVal ')'    (rule 8)

	'('            shift, and enter state 57


State 22

	ListTopDef -> TopDef ';' ListTopDef .               (rule 11)

	%eof           reduce using rule 11


State 23

	Expr6 -> Integer .                                  (rule 44)

	'!='           reduce using rule 44
	')'            reduce using rule 44
	';'            reduce using rule 44
	'<'            reduce using rule 44
	'<='           reduce using rule 44
	'=='           reduce using rule 44
	'>'            reduce using rule 44
	'>='           reduce using rule 44
	'and'          reduce using rule 44
	'or'           reduce using rule 44
	%eof           reduce using rule 44


State 24

	Expr5 -> Expr6 .                                    (rule 49)

	'!='           reduce using rule 49
	')'            reduce using rule 49
	';'            reduce using rule 49
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=='           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'and'          reduce using rule 49
	'or'           reduce using rule 49
	%eof           reduce using rule 49


State 25

	Expr4 -> Expr5 .                                    (rule 57)

	'!='           reduce using rule 57
	')'            reduce using rule 57
	';'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=='           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'and'          reduce using rule 57
	'or'           reduce using rule 57
	%eof           reduce using rule 57


State 26

	Expr2 -> Expr2 . RelOp Expr3                        (rule 50)
	Expr1 -> Expr2 . 'and' Expr1                        (rule 52)
	Expr1 -> Expr2 .                                    (rule 53)

	'!='           shift, and enter state 50
	')'            reduce using rule 53
	';'            reduce using rule 53
	'<'            shift, and enter state 51
	'<='           shift, and enter state 52
	'=='           shift, and enter state 53
	'>'            shift, and enter state 54
	'>='           shift, and enter state 55
	'and'          shift, and enter state 56
	'or'           reduce using rule 53
	%eof           reduce using rule 53

	RelOp          goto state 49

State 27

	Expr -> Expr1 . 'or' Expr                           (rule 54)
	Expr -> Expr1 .                                     (rule 55)

	')'            reduce using rule 55
	';'            reduce using rule 55
	'or'           shift, and enter state 48
	%eof           reduce using rule 55


State 28

	TopDef -> 'final' '=' Expr .                        (rule 6)

	';'            reduce using rule 6
	%eof           reduce using rule 6


State 29

	Expr2 -> Expr3 .                                    (rule 51)

	'!='           reduce using rule 51
	')'            reduce using rule 51
	';'            reduce using rule 51
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=='           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'and'          reduce using rule 51
	'or'           reduce using rule 51
	%eof           reduce using rule 51


State 30

	Expr3 -> Expr4 .                                    (rule 56)

	'!='           reduce using rule 56
	')'            reduce using rule 56
	';'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=='           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'and'          reduce using rule 56
	'or'           reduce using rule 56
	%eof           reduce using rule 56


State 31

	Expr6 -> Hand . '.' Ident                           (rule 43)

	'.'            shift, and enter state 47


State 32

	Expr6 -> '(' . Expr ')'                             (rule 47)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'not'          shift, and enter state 38
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr2          goto state 26
	Expr1          goto state 27
	Expr           goto state 46
	Expr3          goto state 29
	Expr4          goto state 30
	Hand           goto state 31

State 33

	Hand -> 'E' .                                       (rule 59)

	'.'            reduce using rule 59
	':'            reduce using rule 59


State 34

	Hand -> 'N' .                                       (rule 58)

	'.'            reduce using rule 58
	':'            reduce using rule 58


State 35

	Hand -> 'S' .                                       (rule 61)

	'.'            reduce using rule 61
	':'            reduce using rule 61


State 36

	Hand -> 'W' .                                       (rule 60)

	'.'            reduce using rule 60
	':'            reduce using rule 60


State 37

	Expr6 -> 'false' .                                  (rule 46)

	'!='           reduce using rule 46
	')'            reduce using rule 46
	';'            reduce using rule 46
	'<'            reduce using rule 46
	'<='           reduce using rule 46
	'=='           reduce using rule 46
	'>'            reduce using rule 46
	'>='           reduce using rule 46
	'and'          reduce using rule 46
	'or'           reduce using rule 46
	%eof           reduce using rule 46


State 38

	Expr5 -> 'not' . Expr6                              (rule 48)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 45
	Hand           goto state 31

State 39

	Expr6 -> 'true' .                                   (rule 45)

	'!='           reduce using rule 45
	')'            reduce using rule 45
	';'            reduce using rule 45
	'<'            reduce using rule 45
	'<='           reduce using rule 45
	'=='           reduce using rule 45
	'>'            reduce using rule 45
	'>='           reduce using rule 45
	'and'          reduce using rule 45
	'or'           reduce using rule 45
	%eof           reduce using rule 45


State 40

	Integer -> L_integ .                                (rule 2)

	'!='           reduce using rule 2
	')'            reduce using rule 2
	','            reduce using rule 2
	';'            reduce using rule 2
	'<'            reduce using rule 2
	'<='           reduce using rule 2
	'=='           reduce using rule 2
	'>'            reduce using rule 2
	'>='           reduce using rule 2
	']'            reduce using rule 2
	'and'          reduce using rule 2
	'or'           reduce using rule 2
	%eof           reduce using rule 2


State 41

	TopDef -> 'predeal' '=' '{' . ListHandPredeal '}'    (rule 5)

	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'}'            reduce using rule 12

	ListHandPredealgoto state 42
	HandPredeal    goto state 43
	Hand           goto state 44

State 42

	TopDef -> 'predeal' '=' '{' ListHandPredeal . '}'    (rule 5)

	'}'            shift, and enter state 101


State 43

	ListHandPredeal -> HandPredeal .                    (rule 13)
	ListHandPredeal -> HandPredeal . ',' ListHandPredeal    (rule 14)

	','            shift, and enter state 100
	'}'            reduce using rule 13


State 44

	HandPredeal -> Hand . ':' HandFeature               (rule 15)

	':'            shift, and enter state 99


State 45

	Expr5 -> 'not' Expr6 .                              (rule 48)

	'!='           reduce using rule 48
	')'            reduce using rule 48
	';'            reduce using rule 48
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=='           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'and'          reduce using rule 48
	'or'           reduce using rule 48
	%eof           reduce using rule 48


State 46

	Expr6 -> '(' Expr . ')'                             (rule 47)

	')'            shift, and enter state 98


State 47

	Expr6 -> Hand '.' . Ident                           (rule 43)

	L_Ident        shift, and enter state 2

	Ident          goto state 97

State 48

	Expr -> Expr1 'or' . Expr                           (rule 54)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'not'          shift, and enter state 38
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr2          goto state 26
	Expr1          goto state 27
	Expr           goto state 96
	Expr3          goto state 29
	Expr4          goto state 30
	Hand           goto state 31

State 49

	Expr2 -> Expr2 RelOp . Expr3                        (rule 50)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'not'          shift, and enter state 38
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr3          goto state 95
	Expr4          goto state 30
	Hand           goto state 31

State 50

	RelOp -> '!=' .                                     (rule 84)

	'('            reduce using rule 84
	'E'            reduce using rule 84
	'N'            reduce using rule 84
	'S'            reduce using rule 84
	'W'            reduce using rule 84
	'c'            reduce using rule 84
	'd'            reduce using rule 84
	'false'        reduce using rule 84
	'h'            reduce using rule 84
	'not'          reduce using rule 84
	's'            reduce using rule 84
	'true'         reduce using rule 84
	L_integ        reduce using rule 84


State 51

	RelOp -> '<' .                                      (rule 79)

	'('            reduce using rule 79
	'E'            reduce using rule 79
	'N'            reduce using rule 79
	'S'            reduce using rule 79
	'W'            reduce using rule 79
	'c'            reduce using rule 79
	'd'            reduce using rule 79
	'false'        reduce using rule 79
	'h'            reduce using rule 79
	'not'          reduce using rule 79
	's'            reduce using rule 79
	'true'         reduce using rule 79
	L_integ        reduce using rule 79


State 52

	RelOp -> '<=' .                                     (rule 80)

	'('            reduce using rule 80
	'E'            reduce using rule 80
	'N'            reduce using rule 80
	'S'            reduce using rule 80
	'W'            reduce using rule 80
	'c'            reduce using rule 80
	'd'            reduce using rule 80
	'false'        reduce using rule 80
	'h'            reduce using rule 80
	'not'          reduce using rule 80
	's'            reduce using rule 80
	'true'         reduce using rule 80
	L_integ        reduce using rule 80


State 53

	RelOp -> '==' .                                     (rule 83)

	'('            reduce using rule 83
	'E'            reduce using rule 83
	'N'            reduce using rule 83
	'S'            reduce using rule 83
	'W'            reduce using rule 83
	'c'            reduce using rule 83
	'd'            reduce using rule 83
	'false'        reduce using rule 83
	'h'            reduce using rule 83
	'not'          reduce using rule 83
	's'            reduce using rule 83
	'true'         reduce using rule 83
	L_integ        reduce using rule 83


State 54

	RelOp -> '>' .                                      (rule 81)

	'('            reduce using rule 81
	'E'            reduce using rule 81
	'N'            reduce using rule 81
	'S'            reduce using rule 81
	'W'            reduce using rule 81
	'c'            reduce using rule 81
	'd'            reduce using rule 81
	'false'        reduce using rule 81
	'h'            reduce using rule 81
	'not'          reduce using rule 81
	's'            reduce using rule 81
	'true'         reduce using rule 81
	L_integ        reduce using rule 81


State 55

	RelOp -> '>=' .                                     (rule 82)

	'('            reduce using rule 82
	'E'            reduce using rule 82
	'N'            reduce using rule 82
	'S'            reduce using rule 82
	'W'            reduce using rule 82
	'c'            reduce using rule 82
	'd'            reduce using rule 82
	'false'        reduce using rule 82
	'h'            reduce using rule 82
	'not'          reduce using rule 82
	's'            reduce using rule 82
	'true'         reduce using rule 82
	L_integ        reduce using rule 82


State 56

	Expr1 -> Expr2 'and' . Expr1                        (rule 52)

	'('            shift, and enter state 32
	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'false'        shift, and enter state 37
	'not'          shift, and enter state 38
	'true'         shift, and enter state 39
	L_integ        shift, and enter state 40

	Integer        goto state 23
	Expr6          goto state 24
	Expr5          goto state 25
	Expr2          goto state 26
	Expr1          goto state 94
	Expr3          goto state 29
	Expr4          goto state 30
	Hand           goto state 31

State 57

	TopDef -> Ident '=' 'evaluator' '(' . ListEvalVal ')'    (rule 8)

	')'            reduce using rule 23
	L_integ        shift, and enter state 40

	Integer        goto state 91
	EvalVal        goto state 92
	ListEvalVal    goto state 93

State 58

	SuitInt -> Integer .                                (rule 35)

	')'            reduce using rule 35
	';'            reduce using rule 35
	']'            reduce using rule 35


State 59

	ListSuitCount -> SuitCount .                        (rule 37)
	ListSuitCount -> SuitCount . ';' ListSuitCount      (rule 38)

	';'            shift, and enter state 90
	']'            reduce using rule 37


State 60

	SuitCount -> SuitInt .                              (rule 33)

	';'            reduce using rule 33
	']'            reduce using rule 33


State 61

	ShapeOk -> '[' ListSuitCount . ']'                  (rule 28)

	']'            shift, and enter state 89


State 62

	SuitCount -> '(' . ListSuitInt ')'                  (rule 34)

	')'            reduce using rule 39
	L_integ        shift, and enter state 40

	Integer        goto state 58
	SuitInt        goto state 87
	ListSuitInt    goto state 88

State 63

	ShapeExpr6 -> Integer .                             (rule 63)

	'!='           reduce using rule 63
	')'            reduce using rule 63
	'<'            reduce using rule 63
	'<='           reduce using rule 63
	'=='           reduce using rule 63
	'>'            reduce using rule 63
	'>='           reduce using rule 63
	'and'          reduce using rule 63
	'or'           reduce using rule 63


State 64

	ShapeExpr5 -> ShapeExpr6 .                          (rule 66)

	'!='           reduce using rule 66
	')'            reduce using rule 66
	'<'            reduce using rule 66
	'<='           reduce using rule 66
	'=='           reduce using rule 66
	'>'            reduce using rule 66
	'>='           reduce using rule 66
	'and'          reduce using rule 66
	'or'           reduce using rule 66


State 65

	ShapeExpr4 -> ShapeExpr5 .                          (rule 74)

	'!='           reduce using rule 74
	')'            reduce using rule 74
	'<'            reduce using rule 74
	'<='           reduce using rule 74
	'=='           reduce using rule 74
	'>'            reduce using rule 74
	'>='           reduce using rule 74
	'and'          reduce using rule 74
	'or'           reduce using rule 74


State 66

	ShapeExpr2 -> ShapeExpr2 . RelOp ShapeExpr3         (rule 67)
	ShapeExpr1 -> ShapeExpr2 . 'and' ShapeExpr1         (rule 69)
	ShapeExpr1 -> ShapeExpr2 .                          (rule 70)

	'!='           shift, and enter state 50
	')'            reduce using rule 70
	'<'            shift, and enter state 51
	'<='           shift, and enter state 52
	'=='           shift, and enter state 53
	'>'            shift, and enter state 54
	'>='           shift, and enter state 55
	'and'          shift, and enter state 86
	'or'           reduce using rule 70

	RelOp          goto state 85

State 67

	ShapeExpr -> ShapeExpr1 . 'or' ShapeExpr            (rule 71)
	ShapeExpr -> ShapeExpr1 .                           (rule 72)

	')'            reduce using rule 72
	'or'           shift, and enter state 84


State 68

	ShapeDef -> Ident '=' '(' ShapeExpr . ')'           (rule 20)

	')'            shift, and enter state 83


State 69

	ShapeExpr2 -> ShapeExpr3 .                          (rule 68)

	'!='           reduce using rule 68
	')'            reduce using rule 68
	'<'            reduce using rule 68
	'<='           reduce using rule 68
	'=='           reduce using rule 68
	'>'            reduce using rule 68
	'>='           reduce using rule 68
	'and'          reduce using rule 68
	'or'           reduce using rule 68


State 70

	ShapeExpr3 -> ShapeExpr4 .                          (rule 73)

	'!='           reduce using rule 73
	')'            reduce using rule 73
	'<'            reduce using rule 73
	'<='           reduce using rule 73
	'=='           reduce using rule 73
	'>'            reduce using rule 73
	'>='           reduce using rule 73
	'and'          reduce using rule 73
	'or'           reduce using rule 73


State 71

	ShapeExpr6 -> SuitLit .                             (rule 62)

	'!='           reduce using rule 62
	')'            reduce using rule 62
	'<'            reduce using rule 62
	'<='           reduce using rule 62
	'=='           reduce using rule 62
	'>'            reduce using rule 62
	'>='           reduce using rule 62
	'and'          reduce using rule 62
	'or'           reduce using rule 62


State 72

	ShapeExpr6 -> '(' . ShapeExpr ')'                   (rule 64)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	'not'          shift, and enter state 76
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 64
	ShapeExpr5     goto state 65
	ShapeExpr2     goto state 66
	ShapeExpr1     goto state 67
	ShapeExpr      goto state 82
	ShapeExpr3     goto state 69
	ShapeExpr4     goto state 70
	SuitLit        goto state 71

State 73

	SuitLit -> 'c' .                                    (rule 78)

	'!='           reduce using rule 78
	')'            reduce using rule 78
	'<'            reduce using rule 78
	'<='           reduce using rule 78
	'=='           reduce using rule 78
	'>'            reduce using rule 78
	'>='           reduce using rule 78
	'and'          reduce using rule 78
	'or'           reduce using rule 78


State 74

	SuitLit -> 'd' .                                    (rule 77)

	'!='           reduce using rule 77
	')'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=='           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'and'          reduce using rule 77
	'or'           reduce using rule 77


State 75

	SuitLit -> 'h' .                                    (rule 76)

	'!='           reduce using rule 76
	')'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=='           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'and'          reduce using rule 76
	'or'           reduce using rule 76


State 76

	ShapeExpr5 -> 'not' . ShapeExpr6                    (rule 65)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 81
	SuitLit        goto state 71

State 77

	SuitLit -> 's' .                                    (rule 75)

	'!='           reduce using rule 75
	')'            reduce using rule 75
	'<'            reduce using rule 75
	'<='           reduce using rule 75
	'=='           reduce using rule 75
	'>'            reduce using rule 75
	'>='           reduce using rule 75
	'and'          reduce using rule 75
	'or'           reduce using rule 75


State 78

	ShapeNeg -> '!' ShapeOk .                           (rule 29)

	'+'            reduce using rule 29
	';'            reduce using rule 29
	%eof           reduce using rule 29


State 79

	ListShape -> Shape '+' . ListShape                  (rule 32)

	'!'            shift, and enter state 18
	';'            reduce using rule 30
	'['            shift, and enter state 20
	%eof           reduce using rule 30

	Shape          goto state 14
	ShapeOk        goto state 15
	ShapeNeg       goto state 16
	ListShape      goto state 80

State 80

	ListShape -> Shape '+' ListShape .                  (rule 32)

	';'            reduce using rule 32
	%eof           reduce using rule 32


State 81

	ShapeExpr5 -> 'not' ShapeExpr6 .                    (rule 65)

	'!='           reduce using rule 65
	')'            reduce using rule 65
	'<'            reduce using rule 65
	'<='           reduce using rule 65
	'=='           reduce using rule 65
	'>'            reduce using rule 65
	'>='           reduce using rule 65
	'and'          reduce using rule 65
	'or'           reduce using rule 65


State 82

	ShapeExpr6 -> '(' ShapeExpr . ')'                   (rule 64)

	')'            shift, and enter state 115


State 83

	ShapeDef -> Ident '=' '(' ShapeExpr ')' .           (rule 20)

	';'            reduce using rule 20
	%eof           reduce using rule 20


State 84

	ShapeExpr -> ShapeExpr1 'or' . ShapeExpr            (rule 71)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	'not'          shift, and enter state 76
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 64
	ShapeExpr5     goto state 65
	ShapeExpr2     goto state 66
	ShapeExpr1     goto state 67
	ShapeExpr      goto state 114
	ShapeExpr3     goto state 69
	ShapeExpr4     goto state 70
	SuitLit        goto state 71

State 85

	ShapeExpr2 -> ShapeExpr2 RelOp . ShapeExpr3         (rule 67)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	'not'          shift, and enter state 76
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 64
	ShapeExpr5     goto state 65
	ShapeExpr3     goto state 113
	ShapeExpr4     goto state 70
	SuitLit        goto state 71

State 86

	ShapeExpr1 -> ShapeExpr2 'and' . ShapeExpr1         (rule 69)

	'('            shift, and enter state 72
	'c'            shift, and enter state 73
	'd'            shift, and enter state 74
	'h'            shift, and enter state 75
	'not'          shift, and enter state 76
	's'            shift, and enter state 77
	L_integ        shift, and enter state 40

	Integer        goto state 63
	ShapeExpr6     goto state 64
	ShapeExpr5     goto state 65
	ShapeExpr2     goto state 66
	ShapeExpr1     goto state 112
	ShapeExpr3     goto state 69
	ShapeExpr4     goto state 70
	SuitLit        goto state 71

State 87

	ListSuitInt -> SuitInt .                            (rule 40)
	ListSuitInt -> SuitInt . ';' ListSuitInt            (rule 41)

	')'            reduce using rule 40
	';'            shift, and enter state 111


State 88

	SuitCount -> '(' ListSuitInt . ')'                  (rule 34)

	')'            shift, and enter state 110


State 89

	ShapeOk -> '[' ListSuitCount ']' .                  (rule 28)

	'+'            reduce using rule 28
	';'            reduce using rule 28
	%eof           reduce using rule 28


State 90

	ListSuitCount -> SuitCount ';' . ListSuitCount      (rule 38)

	'('            shift, and enter state 62
	']'            reduce using rule 36
	L_integ        shift, and enter state 40

	Integer        goto state 58
	SuitCount      goto state 59
	SuitInt        goto state 60
	ListSuitCount  goto state 109

State 91

	EvalVal -> Integer .                                (rule 22)

	')'            reduce using rule 22
	','            reduce using rule 22


State 92

	ListEvalVal -> EvalVal .                            (rule 24)
	ListEvalVal -> EvalVal . ',' ListEvalVal            (rule 25)

	')'            reduce using rule 24
	','            shift, and enter state 108


State 93

	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal . ')'    (rule 8)

	')'            shift, and enter state 107


State 94

	Expr1 -> Expr2 'and' Expr1 .                        (rule 52)

	')'            reduce using rule 52
	';'            reduce using rule 52
	'or'           reduce using rule 52
	%eof           reduce using rule 52


State 95

	Expr2 -> Expr2 RelOp Expr3 .                        (rule 50)

	'!='           reduce using rule 50
	')'            reduce using rule 50
	';'            reduce using rule 50
	'<'            reduce using rule 50
	'<='           reduce using rule 50
	'=='           reduce using rule 50
	'>'            reduce using rule 50
	'>='           reduce using rule 50
	'and'          reduce using rule 50
	'or'           reduce using rule 50
	%eof           reduce using rule 50


State 96

	Expr -> Expr1 'or' Expr .                           (rule 54)

	')'            reduce using rule 54
	';'            reduce using rule 54
	%eof           reduce using rule 54


State 97

	Expr6 -> Hand '.' Ident .                           (rule 43)

	'!='           reduce using rule 43
	')'            reduce using rule 43
	';'            reduce using rule 43
	'<'            reduce using rule 43
	'<='           reduce using rule 43
	'=='           reduce using rule 43
	'>'            reduce using rule 43
	'>='           reduce using rule 43
	'and'          reduce using rule 43
	'or'           reduce using rule 43
	%eof           reduce using rule 43


State 98

	Expr6 -> '(' Expr ')' .                             (rule 47)

	'!='           reduce using rule 47
	')'            reduce using rule 47
	';'            reduce using rule 47
	'<'            reduce using rule 47
	'<='           reduce using rule 47
	'=='           reduce using rule 47
	'>'            reduce using rule 47
	'>='           reduce using rule 47
	'and'          reduce using rule 47
	'or'           reduce using rule 47
	%eof           reduce using rule 47


State 99

	HandPredeal -> Hand ':' . HandFeature               (rule 15)

	'('            shift, and enter state 105
	L_quoted       shift, and enter state 106

	String         goto state 103
	HandFeature    goto state 104

State 100

	ListHandPredeal -> HandPredeal ',' . ListHandPredeal    (rule 14)

	'E'            shift, and enter state 33
	'N'            shift, and enter state 34
	'S'            shift, and enter state 35
	'W'            shift, and enter state 36
	'}'            reduce using rule 12

	ListHandPredealgoto state 102
	HandPredeal    goto state 43
	Hand           goto state 44

State 101

	TopDef -> 'predeal' '=' '{' ListHandPredeal '}' .    (rule 5)

	';'            reduce using rule 5
	%eof           reduce using rule 5


State 102

	ListHandPredeal -> HandPredeal ',' ListHandPredeal .    (rule 14)

	'}'            reduce using rule 14


State 103

	HandFeature -> String .                             (rule 16)

	','            reduce using rule 16
	'}'            reduce using rule 16


State 104

	HandPredeal -> Hand ':' HandFeature .               (rule 15)

	','            reduce using rule 15
	'}'            reduce using rule 15


State 105

	HandFeature -> '(' . Ident ')'                      (rule 17)
	HandFeature -> '(' . Ident ',' Ident ',' Value ')'    (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 118

State 106

	String -> L_quoted .                                (rule 3)

	','            reduce using rule 3
	'}'            reduce using rule 3


State 107

	TopDef -> Ident '=' 'evaluator' '(' ListEvalVal ')' .    (rule 8)

	';'            reduce using rule 8
	%eof           reduce using rule 8


State 108

	ListEvalVal -> EvalVal ',' . ListEvalVal            (rule 25)

	')'            reduce using rule 23
	L_integ        shift, and enter state 40

	Integer        goto state 91
	EvalVal        goto state 92
	ListEvalVal    goto state 117

State 109

	ListSuitCount -> SuitCount ';' ListSuitCount .      (rule 38)

	']'            reduce using rule 38


State 110

	SuitCount -> '(' ListSuitInt ')' .                  (rule 34)

	';'            reduce using rule 34
	']'            reduce using rule 34


State 111

	ListSuitInt -> SuitInt ';' . ListSuitInt            (rule 41)

	')'            reduce using rule 39
	L_integ        shift, and enter state 40

	Integer        goto state 58
	SuitInt        goto state 87
	ListSuitInt    goto state 116

State 112

	ShapeExpr1 -> ShapeExpr2 'and' ShapeExpr1 .         (rule 69)

	')'            reduce using rule 69
	'or'           reduce using rule 69


State 113

	ShapeExpr2 -> ShapeExpr2 RelOp ShapeExpr3 .         (rule 67)

	'!='           reduce using rule 67
	')'            reduce using rule 67
	'<'            reduce using rule 67
	'<='           reduce using rule 67
	'=='           reduce using rule 67
	'>'            reduce using rule 67
	'>='           reduce using rule 67
	'and'          reduce using rule 67
	'or'           reduce using rule 67


State 114

	ShapeExpr -> ShapeExpr1 'or' ShapeExpr .            (rule 71)

	')'            reduce using rule 71


State 115

	ShapeExpr6 -> '(' ShapeExpr ')' .                   (rule 64)

	'!='           reduce using rule 64
	')'            reduce using rule 64
	'<'            reduce using rule 64
	'<='           reduce using rule 64
	'=='           reduce using rule 64
	'>'            reduce using rule 64
	'>='           reduce using rule 64
	'and'          reduce using rule 64
	'or'           reduce using rule 64


State 116

	ListSuitInt -> SuitInt ';' ListSuitInt .            (rule 41)

	')'            reduce using rule 41


State 117

	ListEvalVal -> EvalVal ',' ListEvalVal .            (rule 25)

	')'            reduce using rule 25


State 118

	HandFeature -> '(' Ident . ')'                      (rule 17)
	HandFeature -> '(' Ident . ',' Ident ',' Value ')'    (rule 18)

	')'            shift, and enter state 119
	','            shift, and enter state 120


State 119

	HandFeature -> '(' Ident ')' .                      (rule 17)

	','            reduce using rule 17
	'}'            reduce using rule 17


State 120

	HandFeature -> '(' Ident ',' . Ident ',' Value ')'    (rule 18)

	L_Ident        shift, and enter state 2

	Ident          goto state 121

State 121

	HandFeature -> '(' Ident ',' Ident . ',' Value ')'    (rule 18)

	','            shift, and enter state 122


State 122

	HandFeature -> '(' Ident ',' Ident ',' . Value ')'    (rule 18)

	'('            shift, and enter state 124

	Value          goto state 123

State 123

	HandFeature -> '(' Ident ',' Ident ',' Value . ')'    (rule 18)

	')'            shift, and enter state 126


State 124

	Value -> '(' . Integer ',' Integer ')'              (rule 19)

	L_integ        shift, and enter state 40

	Integer        goto state 125

State 125

	Value -> '(' Integer . ',' Integer ')'              (rule 19)

	','            shift, and enter state 127


State 126

	HandFeature -> '(' Ident ',' Ident ',' Value ')' .    (rule 18)

	','            reduce using rule 18
	'}'            reduce using rule 18


State 127

	Value -> '(' Integer ',' . Integer ')'              (rule 19)

	L_integ        shift, and enter state 40

	Integer        goto state 128

State 128

	Value -> '(' Integer ',' Integer . ')'              (rule 19)

	')'            shift, and enter state 129


State 129

	Value -> '(' Integer ',' Integer ')' .              (rule 19)

	')'            reduce using rule 19


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 85
Number of terminals: 39
Number of non-terminals: 40
Number of states: 130
