// <auto-generated />
using BridgeScenarios.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BridgeScenarios.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240303152428_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.DbDeal", b =>
                {
                    b.Property<int>("DbDealId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DbDealId"));

                    b.Property<int>("DealSetId")
                        .HasColumnType("integer");

                    b.Property<int>("Dealer")
                        .HasColumnType("integer");

                    b.Property<string>("East")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("North")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("South")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Vul")
                        .HasColumnType("integer");

                    b.Property<string>("West")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DbDealId");

                    b.HasIndex("DealSetId");

                    b.ToTable("Deals");
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.DealSet", b =>
                {
                    b.Property<int>("DealSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DealSetId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("DealSetId");

                    b.HasIndex("UserId");

                    b.ToTable("DealSets");
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("Password")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.DbDeal", b =>
                {
                    b.HasOne("BridgeScenarios.Models.DbModels.DealSet", null)
                        .WithMany("Deals")
                        .HasForeignKey("DealSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.DealSet", b =>
                {
                    b.HasOne("BridgeScenarios.Models.DbModels.User", "User")
                        .WithMany("DealSets")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.DealSet", b =>
                {
                    b.Navigation("Deals");
                });

            modelBuilder.Entity("BridgeScenarios.Models.DbModels.User", b =>
                {
                    b.Navigation("DealSets");
                });
#pragma warning restore 612, 618
        }
    }
}
